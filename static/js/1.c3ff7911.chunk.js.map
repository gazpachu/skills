{"version":3,"sources":["../node_modules/planck-js/lib/common/Vec2.js","../node_modules/planck-js/lib/common/Math.js","../node_modules/planck-js/lib/util/common.js","../node_modules/planck-js/lib/common/Rot.js","../node_modules/planck-js/lib/Settings.js","../node_modules/planck-js/lib/common/Transform.js","../node_modules/planck-js/lib/index.js","../node_modules/react/index.js","../node_modules/planck-js/lib/util/options.js","../node_modules/planck-js/lib/common/Vec3.js","../node_modules/planck-js/lib/Body.js","../node_modules/planck-js/lib/common/Sweep.js","../node_modules/planck-js/lib/common/Mat22.js","../node_modules/planck-js/lib/Joint.js","../node_modules/planck-js/lib/common/Velocity.js","../node_modules/planck-js/lib/common/Position.js","../node_modules/planck-js/lib/common/Mat33.js","../node_modules/planck-js/lib/Shape.js","../node_modules/planck-js/lib/collision/AABB.js","../node_modules/planck-js/lib/Contact.js","../node_modules/planck-js/lib/Manifold.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/planck-js/lib/shape/PolygonShape.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/planck-js/lib/collision/Distance.js","../node_modules/planck-js/lib/shape/CircleShape.js","../node_modules/planck-js/lib/shape/EdgeShape.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/planck-js/lib/Fixture.js","../node_modules/planck-js/lib/common/stats.js","../node_modules/planck-js/lib/shape/ChainShape.js","../node_modules/prop-types/index.js","../node_modules/object-assign/index.js","../node_modules/planck-js/lib/World.js","../node_modules/planck-js/lib/collision/DynamicTree.js","../node_modules/planck-js/lib/collision/TimeOfImpact.js","../node_modules/planck-js/lib/joint/RevoluteJoint.js","../node_modules/planck-js/lib/joint/PrismaticJoint.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/webpack/buildin/global.js","../node_modules/planck-js/lib/serializer/index.js","../node_modules/planck-js/lib/collision/BroadPhase.js","../node_modules/planck-js/lib/util/Pool.js","../node_modules/planck-js/lib/Solver.js","../node_modules/planck-js/lib/util/Timer.js","../node_modules/planck-js/lib/shape/BoxShape.js","../node_modules/planck-js/lib/shape/CollideCircle.js","../node_modules/planck-js/lib/shape/CollideEdgeCircle.js","../node_modules/planck-js/lib/shape/CollidePolygon.js","../node_modules/planck-js/lib/shape/CollideCirclePolygone.js","../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","../node_modules/planck-js/lib/joint/DistanceJoint.js","../node_modules/planck-js/lib/joint/FrictionJoint.js","../node_modules/planck-js/lib/joint/GearJoint.js","../node_modules/planck-js/lib/joint/MotorJoint.js","../node_modules/planck-js/lib/joint/MouseJoint.js","../node_modules/planck-js/lib/joint/PulleyJoint.js","../node_modules/planck-js/lib/joint/RopeJoint.js","../node_modules/planck-js/lib/joint/WeldJoint.js","../node_modules/planck-js/lib/joint/WheelJoint.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["_DEBUG","DEBUG","_ASSERT","ASSERT","module","exports","Vec2","common","__webpack_require__","Math","x","y","this","assert","prototype","_serialize","_deserialize","data","obj","Object","create","zero","neo","clone","v","toString","JSON","stringify","isValid","isFinite","o","debug","Error","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","m","length","lengthOf","lengthSquared","normalize","EPSILON","invLength","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","console","log","apply","arguments","statement","err","Rot","angle","setAngle","setIdentity","rot","s","c","identity","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","p","q","xf","Array","isArray","arr","i","mulAll","mulFn","mulXf","px","py","mulTXf","internal","Serializer","Vec3","Mat22","Mat33","AABB","Shape","Fixture","Body","Contact","Joint","World","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PrismaticJoint","PulleyJoint","RevoluteJoint","RopeJoint","WeldJoint","WheelJoint","Sweep","stats","Manifold","Distance","TimeOfImpact","DynamicTree","propertyIsEnumerable","input","defaults","output","assign","key","hasOwnProperty","getOwnPropertySymbols","symbols","symbol","z","options","Velocity","Position","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","type","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","active","userData","world","def","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_islandFlag","m_toiFlag","m_userData","m_type","m_mass","m_invMass","m_I","m_invI","m_xf","m_sweep","setTransform","c_velocity","c_position","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_contactList","m_fixtureList","m_prev","m_next","m_destroyed","MassData","mass","center","I","fixtures","f","push","restore","body","fixture","_addFixture","isWorldLocked","isLocked","getWorld","getNext","setUserData","getUserData","getFixtureList","getJointList","getContactList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","getType","resetMassData","forward","synchronizeFixtures","setAwake","ce","ce0","next","destroyContact","contact","broadPhase","m_broadPhase","proxyCount","m_proxyCount","touchProxy","m_proxies","proxyId","isBullet","setBullet","flag","isSleepingAllowed","setSleepingAllowed","isAwake","isActive","setActive","createProxies","destroyProxies","isFixedRotation","setFixedRotation","getTransform","synchronize","synchronizeTransform","advance","alpha","c0","a0","getPosition","setPosition","getWorldCenter","getLocalCenter","localCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","localPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","getMassData","m_density","massData","oldCenter","setLocalCenter","setMassData","applyForce","force","point","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","impulse","applyAngularImpulse","shouldCollide","that","jn","other","joint","m_collideConnected","m_newFixture","createFixture","shape","fixdef","destroyFixture","m_body","found","node","edge","fixtureA","getFixtureA","fixtureB","getFixtureB","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","alpha0","beta","d","ex","ey","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","JointEdge","prev","bodyA","bodyB","m_bodyA","m_bodyB","m_index","collideConnected","m_edgeA","m_edgeB","TYPES","context","clazz","getBodyA","getBodyB","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","step","solveVelocityConstraints","solvePositionConstraints","ez","solve33","r","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","m_radius","_reset","getRadius","_clone","getChildCount","testPoint","rayCast","transform","childIndex","computeAABB","aabb","computeMass","density","computeDistanceProxy","proxy","lowerBound","upperBound","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","value","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","p1","p2","absD","normal","inv_d","t1","t2","temp","maxFraction","fraction","ContactEdge","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","localNormal","j","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","isEnabled","isTouching","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","update","listener","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","id","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","callback","typeA","typeB","destroy","destroyFcn","ManifoldPoint","ContactID","cf","ContactFeature","WorldManifold","separations","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","defineProperty","get","enumerable","configurable","wm","dist","nullState","_classCallCheck","instance","Constructor","TypeError","__webpack_exports__","_defineProperties","target","props","descriptor","writable","_createClass","protoProps","staticProps","PolygonShape","vertices","_super","call","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","getVertex","index","_setAsBox","n","ps","unique","i0","x0","hull","ih","ie","i1","i2","vs","count","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","pLocal","numerator","denominator","minX","minY","maxX","maxY","D","ex1","ey1","ex2","ey2","validate","e","_assertThisInitialized","self","ReferenceError","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","cache","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","vertex","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","CircleShape","m_p","radius","rr","sigma","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","t","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","assertThisInitialized","_setPrototypeOf","_inherits","subClass","superClass","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","createProxy","destroyProxy","xf1","xf2","aabb1","aabb2","displacement","moveProxy","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","setFilterGroupIndex","getFilterCategoryBits","setFilterCategoryBits","getFilterMaskBits","setFilterMaskBits","collideA","collideB","newline","string","name","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","hasPrevVertex","hasNextVertex","prevVertex","nextVertex","setPrevVertex","setNextVertex","createChain","getChildEdge","propIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","shouldUseNative","source","from","to","val","undefined","toObject","BroadPhase","Solver","WorldDef","gravity","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_contactCount","m_bodyList","m_bodyCount","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","addPair","createContact","bind","bodies","joints","getBodyList","_addBody","createJoint","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","queryCallback","query","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","createBody","createDynamicBody","createKinematicBody","destroyBody","je","je0","destroyJoint","f0","s_step","TimeStep","timeStep","findNewContacts","reset","updateContacts","solveWorld","solveWorldTOI","updatePairs","next_c","activeA","activeB","proxyIdA","proxyIdB","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","l","postSolve","Pool","TreeNode","parent","child1","child2","height","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","insertLeaf","removeLeaf","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","height2","validateStructure","validateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","stack","stackPool","pop","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","h","Iterator","close","parents","states","root","timer","Timer","now","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","time","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","inactiveLimit","DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_referenceAngle","referenceAngle","m_impulse","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_motorMass","m_limitState","_setAnchors","anchorA","anchorB","getLocalAnchorA","getLocalAnchorB","getReferenceAngle","getJointAngle","bA","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","getMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","qA","qB","jointAngle","Cdot","oldImpulse","maxImpulse","dt","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","bB","setMaxMotorForce","getMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","translation","impulse1","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","error","k","for","u","encodeURIComponent","g","replace","framesToPop","aa","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","refs","updater","H","isReactComponent","setState","forceUpdate","J","isPureReactComponent","current","currentDispatcher","L","ref","__self","__source","N","children","defaultProps","$$typeof","_owner","O","Q","R","keyPrefix","func","S","V","T","U","=",":","escape","ca","da","W","ba","X","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","Fragment","StrictMode","Suspense","createElement","cloneElement","createFactory","isValidElement","version","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","default","Z","ea","fa","ha","ia","ja","onError","ka","slice","ma","na","oa","pa","extractEvents","eventTypes","qa","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","ua","va","wa","xa","currentTarget","la","ya","concat","za","Aa","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","Ca","injectEventPluginOrder","injectEventPluginsByName","Da","stateNode","disabled","Ea","Fa","Ga","Ha","Ia","parentNode","tag","Ja","Ka","La","Ma","return","Na","dispatchConfig","Oa","_targetInst","Pa","Qa","Ra","Sa","window","document","Ta","toLowerCase","Ua","animationend","animationiteration","animationstart","transitionend","Va","Wa","Xa","style","animation","transition","Ya","Za","$a","ab","bb","cb","eb","fb","gb","textContent","hb","ib","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","lb","destructor","jb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","mb","nb","ob","pb","qb","documentMode","rb","sb","tb","ub","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","vb","wb","keyCode","xb","detail","yb","Bb","locale","which","zb","ctrlKey","altKey","metaKey","char","Ab","Cb","Db","Eb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","text","url","week","Qb","nodeName","Rb","srcElement","correspondingUseElement","nodeType","Sb","setAttribute","Tb","Vb","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ub","Wb","checked","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","displayName","nc","_debugOwner","_debugSource","fileName","lineNumber","oc","pc","qc","rc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","vc","wc","toUpperCase","xc","tc","uc","test","sc","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Ac","initialValue","controlled","Bc","Cc","Dc","Ec","ownerDocument","activeElement","tabIndex","Fc","change","Gc","Jc","Kc","Lc","Mc","Nc","Oc","Pc","detachEvent","Qc","Rc","attachEvent","Sc","Tc","Uc","Vc","_isInputEventSupported","Wc","view","Xc","Alt","Control","Meta","Shift","Yc","getModifierState","Zc","$c","ad","bd","cd","dd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","ed","pointerId","width","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","fd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","gd","defaultView","parentWindow","alternate","hd","jd","kd","effectTag","ld","nd","child","md","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","rd","charCode","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","location","repeat","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Ad","Bd","Cd","isInteractive","Dd","isInteractiveTopLevelEventType","Ed","Fd","Gd","targetInst","ancestors","containerInfo","topLevelType","Hd","Id","Jd","addEventListener","Kd","Ld","Md","Nd","Od","Pd","Qd","firstChild","Rd","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","start","selectionStart","end","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","ee","de","fe","selected","defaultSelected","ge","dangerouslySetInnerHTML","he","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ke","html","mathml","svg","le","me","ne","oe","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pe","lastChild","nodeValue","qe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","re","se","trim","te","setProperty","charAt","substring","ue","menuitem","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","ve","we","is","xe","blur","focus","ye","ze","Ae","Be","autoFocus","Ce","__html","De","setTimeout","Ee","clearTimeout","Ge","He","Set","Ie","Je","Ke","Le","Me","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ne","Oe","Pe","Qe","getChildContext","Re","__reactInternalMemoizedMergedChildContext","Se","Te","Ue","Ve","Xe","elementType","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ye","$e","af","bf","ef","pendingChildren","implementation","ff","didError","earliestPendingTime","latestPendingTime","gf","hf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","jf","nextExpirationTimeToWorkOn","kf","lf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","mf","nf","payload","of","pf","qf","rf","sf","tf","uf","vf","wf","yf","zf","Af","Bf","Cf","Df","Ef","observedBits","Ff","Gf","Hf","If","Jf","documentElement","tagName","Kf","Lf","Mf","Of","Pf","Qf","Vf","_reactInternalFiber","Rf","Sf","Tf","Uf","Wf","shouldComponentUpdate","Xf","contextType","readContext","Zf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","$f","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","ag","bg","_stringRef","cg","dg","Map","delete","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","xg","getDerivedStateFromError","yg","pendingContext","zg","timedOutAt","fallback","Ag","then","Nf","Ze","element","hydrate","hidden","unstable_observedBits","Bg","Cg","Gg","Hg","Ig","onClick","onclick","Jg","WeakSet","Kg","Lg","Mg","Og","componentWillUnmount","Pg","Qg","Rg","insertBefore","_reactRootContainer","Sg","wasMultiple","multiple","Fe","display","Ng","th","sh","has","Ug","WeakMap","Vg","Wg","Xg","componentDidCatch","Yg","componentStack","Zg","$g","ah","bh","ch","dh","eh","fh","gh","hh","jh","unstable_cancelCallback","kh","createElementNS","createTextNode","lh","mh","pendingCommitExpirationTime","nh","maxDuration","pingCache","oh","finishedWork","ph","qh","rh","uh","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","unstable_now","Gh","Hh","Ih","Jh","Kh","unstable_scheduleCallback","Lh","timeout","timeoutHandle","Nh","Oh","nextScheduledRoot","Ph","Qh","Rh","unstable_shouldYield","_onComplete","Sh","firstBatch","_expirationTime","_defer","rangeCount","db","focusedElem","selectionRange","Yf","Vh","__reactInternalSnapshotBeforeUpdate","Sd","compareDocumentPosition","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","Fb","Gb","Hc","ii","Dg","Eg","ji","Ic","Fg","Th","Uh","Wh","Xh","Yh","Zh","ai","_root","_callbacks","_next","_hasChildren","_didComplete","_children","bi","_didCommit","_onCommit","ci","_internalRoot","di","fi","legacy_renderSubtreeIntoContainer","hasAttribute","ei","gi","$h","querySelectorAll","form","commit","unmount","createBatch","ki","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","We","overrideProps","findHostInstanceByFiber","bundleType","rendererPackageName","li","mi","global","_r","previous","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","Function","eval","SID","opts","rootClass","preSerialize","postSerialize","preDeserialize","postDeserialize","refTypes","restoreTypes","toJson","json","queue","refMap","storeRef","typeName","__sid","refIndex","refType","serialize","newValue","shift","str","fromJson","deserialize","cls","ctx","restoreRef","serializer","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","size","item","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","solveIsland","printBodies","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","s_subStep","ContactImpulse","normalImpulses","tangentImpulses","minContact","minAlpha","backup1","backup2","backup","solveIslandTOI","subStep","BoxShape","CollideCircles","circleA","circleB","distSqr","CollideEdgeCircle","edgeA","A1","B1","B2","A2","den","chain","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","CollideEdgePolygon","e_edgeA","e_edgeB","EPAxis","edgeAxis","polygonAxis","polygonBA","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","frequencyHz","dampingRatio","m_length","m_frequencyHz","m_dampingRatio","m_gamma","m_bias","m_u","gamma","bias","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","crAu","crBu","invMass","omega","vpA","vpB","maxForce","maxTorque","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","correctionFactor","m_linearOffset","linearOffset","m_angularOffset","angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","getAngularOffset","inv_h","m_targetA","m_beta","m_C","_localAnchorB","setTarget","getTarget","velocity","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","invM","impulse2","localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","object","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"static/js/1.c3ff7911.chunk.js","sourcesContent":["/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\n\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function () {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function (data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function () {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function (x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function (v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function () {\n  return JSON.stringify(this);\n};\n/**\n * Does this vector contain finite coordinates?\n */\n\n\nVec2.isValid = function (v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n};\n\nVec2.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n};\n\nVec2.prototype.clone = function () {\n  return Vec2.clone(this);\n};\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\n\n\nVec2.prototype.setZero = function () {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n};\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\n\n\nVec2.prototype.set = function (x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n\n  return this;\n};\n/**\n * @deprecated Use setCombine or setMul\n */\n\n\nVec2.prototype.wSet = function (a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n};\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\n\n\nVec2.prototype.setCombine = function (a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y; // `this` may be `w`\n\n  this.x = x;\n  this.y = y;\n  return this;\n};\n\nVec2.prototype.setMul = function (a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n  this.x = x;\n  this.y = y;\n  return this;\n};\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\n\n\nVec2.prototype.add = function (w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n};\n/**\n * @deprecated Use addCombine or addMul\n */\n\n\nVec2.prototype.wAdd = function (a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n};\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\n\n\nVec2.prototype.addCombine = function (a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y; // `this` may be `w`\n\n  this.x += x;\n  this.y += y;\n  return this;\n};\n\nVec2.prototype.addMul = function (a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n  this.x += x;\n  this.y += y;\n  return this;\n};\n/**\n * @deprecated Use subCombine or subMul\n */\n\n\nVec2.prototype.wSub = function (a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }\n};\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\n\n\nVec2.prototype.subCombine = function (a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y; // `this` may be `w`\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n};\n\nVec2.prototype.subMul = function (a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n  this.x -= x;\n  this.y -= y;\n  return this;\n};\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\n\n\nVec2.prototype.sub = function (w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n};\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\n\n\nVec2.prototype.mul = function (m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n};\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\n\n\nVec2.prototype.length = function () {\n  return Vec2.lengthOf(this);\n};\n/**\n * Get the length squared.\n */\n\n\nVec2.prototype.lengthSquared = function () {\n  return Vec2.lengthSquared(this);\n};\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\n\n\nVec2.prototype.normalize = function () {\n  var length = this.length();\n\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n};\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\n\n\nVec2.lengthOf = function (v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n};\n/**\n * Get the length squared.\n */\n\n\nVec2.lengthSquared = function (v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n};\n\nVec2.distance = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x,\n      dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nVec2.distanceSquared = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x,\n      dy = v.y - w.y;\n  return dx * dx + dy * dy;\n};\n\nVec2.areEqual = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n};\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\n\n\nVec2.skew = function (v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n};\n/**\n * Perform the dot product on two vectors.\n */\n\n\nVec2.dot = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n};\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\n\n\nVec2.cross = function (v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x;\n  }\n};\n/**\n * Returns `a + (v x w)`\n */\n\n\nVec2.addCross = function (a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n};\n\nVec2.add = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n};\n/**\n * @deprecated Use combine\n */\n\n\nVec2.wAdd = function (a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n};\n\nVec2.combine = function (a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n};\n\nVec2.sub = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n};\n\nVec2.mul = function (a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n};\n\nVec2.prototype.neg = function () {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n};\n\nVec2.neg = function (v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n};\n\nVec2.abs = function (v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n};\n\nVec2.mid = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n};\n\nVec2.upper = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n};\n\nVec2.lower = function (v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n};\n\nVec2.prototype.clamp = function (max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n\n  return this;\n};\n\nVec2.clamp = function (v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n};\n/**\n * @experimental\n */\n\n\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n};\n/**\n * @experimental\n */\n\n\nVec2.translateFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\n\nvar native = Math;\nvar math = module.exports = Object.create(native);\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\n\nmath.isFinite = function (x) {\n  return typeof x === 'number' && isFinite(x) && !isNaN(x);\n};\n\nmath.assert = function (x) {\n  if (!_ASSERT) return;\n\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n};\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\n\n\nmath.invSqrt = function (x) {\n  // TODO\n  return 1 / native.sqrt(x);\n};\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\n\n\nmath.nextPowerOfTwo = function (x) {\n  // TODO\n  x |= x >> 1;\n  x |= x >> 2;\n  x |= x >> 4;\n  x |= x >> 8;\n  x |= x >> 16;\n  return x + 1;\n};\n\nmath.isPowerOfTwo = function (x) {\n  return x > 0 && (x & x - 1) == 0;\n};\n\nmath.mod = function (num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function (num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function (min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n\n  return min == max ? min : native.random() * (max - min) + min;\n};","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function () {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function (statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\n\nvar Vec2 = require('./Vec2');\n\nvar Math = require('./Math'); // TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\n\n\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n    this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function (angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function (rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function () {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function (o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n};\n\nRot.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n};\n/**\n * Set to the identity rotation.\n */\n\n\nRot.prototype.setIdentity = function () {\n  this.s = 0.0;\n  this.c = 1.0;\n};\n\nRot.prototype.set = function (angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n  } else {\n    _ASSERT && Math.assert(angle); // TODO_ERIN optimize\n\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n};\n/**\n * Set using an angle in radians.\n */\n\n\nRot.prototype.setAngle = function (angle) {\n  _ASSERT && Math.assert(angle); // TODO_ERIN optimize\n\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n/**\n * Get the angle in radians.\n */\n\n\nRot.prototype.getAngle = function () {\n  return Math.atan2(this.s, this.c);\n};\n/**\n * Get the x-axis.\n */\n\n\nRot.prototype.getXAxis = function () {\n  return Vec2.neo(this.c, this.s);\n};\n/**\n * Get the u-axis.\n */\n\n\nRot.prototype.getYAxis = function () {\n  return Vec2.neo(-this.s, this.c);\n};\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\n\n\nRot.mul = function (rot, m) {\n  _ASSERT && Rot.assert(rot);\n\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m); // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n};\n\nRot.mulRot = function (rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m); // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n};\n\nRot.mulVec2 = function (rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n};\n\nRot.mulSub = function (rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n};\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\n\n\nRot.mulT = function (rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m); // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n};\n\nRot.mulTRot = function (rot, m) {\n  _ASSERT && Rot.assert(m); // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n};\n\nRot.mulTVec2 = function (rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT; // TODO merge with World options?\n\n\nvar Settings = exports;\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n// Collision\n\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\n\nSettings.maxManifoldPoints = 2;\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\n\nSettings.maxPolygonVertices = 12;\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\n\nSettings.aabbExtension = 0.1;\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\n\nSettings.aabbMultiplier = 2.0;\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\n\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\n\nSettings.angularSlop = 2.0 / 180.0 * Math.PI;\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\n\nSettings.polygonRadius = 2.0 * Settings.linearSlop;\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\n\nSettings.maxSubSteps = 8; // Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\n\nSettings.maxTOIContacts = 32;\n/**\n * Maximum iterations to solve a TOI.\n */\n\nSettings.maxTOIIterations = 20;\n/**\n * Maximum iterations to find Distance.\n */\n\nSettings.maxDistnceIterations = 20;\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\n\nSettings.velocityThreshold = 1.0;\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\n\nSettings.maxLinearCorrection = 0.2;\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\n\nSettings.maxAngularCorrection = 8.0 / 180.0 * Math.PI;\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\n\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = Settings.maxTranslation * Settings.maxTranslation;\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\n\nSettings.maxRotation = 0.5 * Math.PI;\nSettings.maxRotationSquared = Settings.maxRotation * Settings.maxRotation;\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\n\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75; // Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\n\nSettings.timeToSleep = 0.5;\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\n\nSettings.linearSleepTolerance = 0.01;\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\n\nSettings.angularSleepTolerance = 2.0 / 180.0 * Math.PI;\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\n\nvar Vec2 = require('./Vec2');\n\nvar Rot = require('./Rot'); // TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\n\n\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n}\n\n;\n\nTransform.clone = function (xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function (position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function () {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n/**\n * Set this to the identity transform.\n */\n\n\nTransform.prototype.setIdentity = function () {\n  this.p.setZero();\n  this.q.setIdentity();\n};\n/**\n * Set this based on the position and angle.\n */\n\n\nTransform.prototype.set = function (a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n};\n\nTransform.isValid = function (o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n};\n\nTransform.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n};\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\n\n\nTransform.mul = function (a, b) {\n  _ASSERT && Transform.assert(a);\n\n  if (Array.isArray(b)) {\n    var arr = [];\n\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n\n    return arr;\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.q.c * b.x - a.q.s * b.y + a.p.x;\n    var y = a.q.s * b.x + a.q.c * b.y + a.p.y;\n    return Vec2.neo(x, y);\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b); // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n};\n/**\n * @deprecated Use mulFn instead.\n */\n\n\nTransform.mulAll = function (a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n\n  return arr;\n};\n/**\n * @experimental\n */\n\n\nTransform.mulFn = function (a) {\n  _ASSERT && Transform.assert(a);\n  return function (b) {\n    return Transform.mul(a, b);\n  };\n};\n\nTransform.mulVec2 = function (a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.q.c * b.x - a.q.s * b.y + a.p.x;\n  var y = a.q.s * b.x + a.q.c * b.y + a.p.y;\n  return Vec2.neo(x, y);\n};\n\nTransform.mulXf = function (a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b); // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n};\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\n\n\nTransform.mulT = function (a, b) {\n  _ASSERT && Transform.assert(a);\n\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = a.q.c * px + a.q.s * py;\n    var y = -a.q.s * px + a.q.c * py;\n    return Vec2.neo(x, y);\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b); // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n};\n\nTransform.mulTVec2 = function (a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = a.q.c * px + a.q.s * py;\n  var y = -a.q.s * px + a.q.c * py;\n  return Vec2.neo(x, y);\n};\n\nTransform.mulTXf = function (a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b); // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n};","exports.internal = {};\nexports.Serializer = require('./serializer');\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\nexports.AABB = require('./collision/AABB');\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\n\nrequire('./shape/CollideEdgeCircle');\n\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\n\nrequire('./shape/CollideCirclePolygone');\n\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\nexports.Settings = require('./Settings');\nexports.internal.Sweep = require('./common/Sweep');\nexports.internal.stats = require('./common/stats'); // todo: remove this\n\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = exports.Settings;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (input, defaults) {\n  if (input === null || typeof input === 'undefined') {\n    input = {};\n  }\n\n  var output = Object.assign({}, input);\n\n  for (var key in defaults) {\n    if (defaults.hasOwnProperty(key) && typeof input[key] === 'undefined') {\n      output[key] = defaults[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(defaults);\n\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n\n      if (defaults.propertyIsEnumerable(symbol) && typeof input[key] === 'undefined') {\n        output[symbol] = defaults[symbol];\n      }\n    }\n  }\n\n  return output;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\n\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n\n  _ASSERT && Vec3.assert(this);\n}\n\n;\n\nVec3.prototype._serialize = function () {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function (data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function (x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function (v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function () {\n  return JSON.stringify(this);\n};\n/**\n * Does this vector contain finite coordinates?\n */\n\n\nVec3.isValid = function (v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n};\n\nVec3.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n};\n\nVec3.prototype.setZero = function () {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n};\n\nVec3.prototype.set = function (x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n};\n\nVec3.prototype.add = function (w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n};\n\nVec3.prototype.sub = function (w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n};\n\nVec3.prototype.mul = function (m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n};\n\nVec3.areEqual = function (v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w || typeof v === 'object' && v !== null && typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y && v.z === w.z;\n};\n/**\n * Perform the dot product on two vectors.\n */\n\n\nVec3.dot = function (v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n};\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\n\n\nVec3.cross = function (v, w) {\n  return new Vec3(v.y * w.z - v.z * w.y, v.z * w.x - v.x * w.z, v.x * w.y - v.y * w.x);\n};\n\nVec3.add = function (v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n};\n\nVec3.sub = function (v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n};\n\nVec3.mul = function (v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n};\n\nVec3.prototype.neg = function () {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n};\n\nVec3.neg = function (v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\n\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\n\nvar Rot = require('./common/Rot');\n\nvar Math = require('./common/Math');\n\nvar Sweep = require('./common/Sweep');\n\nvar Transform = require('./common/Transform');\n\nvar Velocity = require('./common/Velocity');\n\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\n\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\n\nvar BodyDef = {\n  type: staticBody,\n  position: Vec2.zero(),\n  angle: 0.0,\n  linearVelocity: Vec2.zero(),\n  angularVelocity: 0.0,\n  linearDamping: 0.0,\n  angularDamping: 0.0,\n  fixedRotation: false,\n  bullet: false,\n  gravityScale: 1.0,\n  allowSleep: true,\n  awake: true,\n  active: true,\n  userData: null\n};\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\n\nfunction Body(world, def) {\n  def = options(def, BodyDef);\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n  this.m_world = world;\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  } // Rotational inertia about the center of mass.\n\n\n  this.m_I = 0.0;\n  this.m_invI = 0.0; // the body origin transform\n\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle); // the swept motion for CCD\n\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf); // position and velocity correction\n\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n  this.m_sleepTime = 0.0;\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n  this.m_prev = null;\n  this.m_next = null;\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function () {\n  var fixtures = [];\n\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n\n  return {\n    type: this.m_type,\n    bullet: this.m_bulletFlag,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures\n  };\n};\n\nBody._deserialize = function (data, world, restore) {\n  var body = new Body(world, data);\n\n  if (data.fixtures) {\n    for (var i = data.fixtures.length - 1; i >= 0; i--) {\n      var fixture = restore(Fixture, data.fixtures[i], body);\n\n      body._addFixture(fixture);\n    }\n  }\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function () {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function () {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function () {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function (data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function () {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function () {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function () {\n  return this.m_jointList;\n};\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\n\n\nBody.prototype.getContactList = function () {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function () {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function () {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function () {\n  return this.m_type == kinematicBody;\n};\n/**\n * This will alter the mass and velocity.\n */\n\n\nBody.prototype.setStatic = function () {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function () {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function () {\n  this.setType(kinematicBody);\n  return this;\n};\n/**\n * @private\n */\n\n\nBody.prototype.getType = function () {\n  return this.m_type;\n};\n/**\n * \n * @private\n */\n\n\nBody.prototype.setType = function (type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n  this.m_force.setZero();\n  this.m_torque = 0.0; // Delete the attached contacts.\n\n  var ce = this.m_contactList;\n\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n\n  this.m_contactList = null; // Touch the proxies so that new contacts will be created (when appropriate)\n\n  var broadPhase = this.m_world.m_broadPhase;\n\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function () {\n  return this.m_bulletFlag;\n};\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\n\n\nBody.prototype.setBullet = function (flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function () {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function (flag) {\n  this.m_autoSleepFlag = !!flag;\n\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function () {\n  return this.m_awakeFlag;\n};\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\n\n\nBody.prototype.setAwake = function (flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function () {\n  return this.m_activeFlag;\n};\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\n\n\nBody.prototype.setActive = function (flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    } // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    } // Destroy the attached contacts.\n\n\n    var ce = this.m_contactList;\n\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function () {\n  return this.m_fixedRotationFlag;\n};\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\n\n\nBody.prototype.setFixedRotation = function (flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n  this.m_angularVelocity = 0.0;\n  this.resetMassData();\n};\n/**\n * Get the world transform for the body's origin.\n */\n\n\nBody.prototype.getTransform = function () {\n  return this.m_xf;\n};\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\n\n\nBody.prototype.setTransform = function (position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n  var broadPhase = this.m_world.m_broadPhase;\n\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function () {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n/**\n * Update fixtures in broad-phase.\n */\n\n\nBody.prototype.synchronizeFixtures = function () {\n  var xf = Transform.identity();\n  this.m_sweep.getTransform(xf, 0);\n  var broadPhase = this.m_world.m_broadPhase;\n\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n/**\n * Used in TOI.\n */\n\n\nBody.prototype.advance = function (alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n/**\n * Get the world position for the body's origin.\n */\n\n\nBody.prototype.getPosition = function () {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function (p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n/**\n * Get the current world rotation angle in radians.\n */\n\n\nBody.prototype.getAngle = function () {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function (angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n/**\n * Get the world position of the center of mass.\n */\n\n\nBody.prototype.getWorldCenter = function () {\n  return this.m_sweep.c;\n};\n/**\n * Get the local position of the center of mass.\n */\n\n\nBody.prototype.getLocalCenter = function () {\n  return this.m_sweep.localCenter;\n};\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\n\n\nBody.prototype.getLinearVelocity = function () {\n  return this.m_linearVelocity;\n};\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\n\n\nBody.prototype.getLinearVelocityFromWorldPoint = function (worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity, localCenter));\n};\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\n\n\nBody.prototype.getLinearVelocityFromLocalPoint = function (localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\n\n\nBody.prototype.setLinearVelocity = function (v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n\n  this.m_linearVelocity.set(v);\n};\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\n\n\nBody.prototype.getAngularVelocity = function () {\n  return this.m_angularVelocity;\n};\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\n\n\nBody.prototype.setAngularVelocity = function (w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function () {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function (linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function () {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function (angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function () {\n  return this.m_gravityScale;\n};\n/**\n * Scale the gravity applied to this body.\n */\n\n\nBody.prototype.setGravityScale = function (scale) {\n  this.m_gravityScale = scale;\n};\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\n\n\nBody.prototype.getMass = function () {\n  return this.m_mass;\n};\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\n\n\nBody.prototype.getInertia = function () {\n  return this.m_I + this.m_mass * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\n\n\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n}\n\n;\n/**\n * Copy the mass data of the body to data.\n */\n\nBody.prototype.getMassData = function (data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\n\n\nBody.prototype.resetMassData = function () {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero(); // Static and kinematic bodies have zero mass.\n\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic()); // Accumulate mass over all fixtures.\n\n  var localCenter = Vec2.zero();\n\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  } // Compute center of mass.\n\n\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  } // Move center of mass.\n\n\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf); // Update center of mass velocity.\n\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(this.m_sweep.c, oldCenter)));\n};\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\n\n\nBody.prototype.setMassData = function (massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_mass = massData.mass;\n\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  } // Move center of mass.\n\n\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf); // Update center of mass velocity.\n\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(this.m_sweep.c, oldCenter)));\n};\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\n\n\nBody.prototype.applyForce = function (force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  } // Don't accumulate a force if the body is sleeping.\n\n\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\n\n\nBody.prototype.applyForceToCenter = function (force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  } // Don't accumulate a force if the body is sleeping\n\n\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\n\n\nBody.prototype.applyTorque = function (torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  } // Don't accumulate a force if the body is sleeping\n\n\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\n\n\nBody.prototype.applyLinearImpulse = function (impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  } // Don't accumulate velocity if the body is sleeping\n\n\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\n\n\nBody.prototype.applyAngularImpulse = function (impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  } // Don't accumulate velocity if the body is sleeping\n\n\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\n\n\nBody.prototype.shouldCollide = function (that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  } // Does a joint prevent collision?\n\n\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * @internal Used for deserialize.\n */\n\n\nBody.prototype._addFixture = function (fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture; // Adjust mass properties if needed.\n\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  } // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n\n\n  this.m_world.m_newFixture = true;\n  return fixture;\n};\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\n\n\nBody.prototype.createFixture = function (shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n\n  this._addFixture(fixture);\n\n  return fixture;\n};\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\n\n\nBody.prototype.destroyFixture = function (fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this); // Remove the fixture from this body's singly linked list.\n\n  var found = false;\n\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n  } else {\n    var node = this.m_fixtureList;\n\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n\n      node = node.m_next;\n    }\n  } // You tried to remove a shape that is not attached to this body.\n\n\n  _ASSERT && common.assert(found); // Destroy any contacts associated with the fixture.\n\n  var edge = this.m_contactList;\n\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n  this.m_world.publish('remove-fixture', fixture); // Reset the mass data.\n\n  this.resetMassData();\n};\n/**\n * Get the corresponding world point of a local point.\n */\n\n\nBody.prototype.getWorldPoint = function (localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n/**\n * Get the corresponding world vector of a local vector.\n */\n\n\nBody.prototype.getWorldVector = function (localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n/**\n * Gets the corresponding local point of a world point.\n */\n\n\nBody.prototype.getLocalPoint = function (worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\n\n\nBody.prototype.getLocalVector = function (worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\n\nvar Math = require('./Math');\n\nvar Vec2 = require('./Vec2');\n\nvar Rot = require('./Rot');\n\nvar Transform = require('./Transform');\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\n\n\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function (xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function (localCenter, xf) {\n  this.localCenter.set(localCenter);\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\n\n\nSweep.prototype.getTransform = function (xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine(1.0 - beta, this.c0, beta, this.c); // shift to origin\n\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\n\n\nSweep.prototype.advance = function (alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function () {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\n\n\nSweep.prototype.normalize = function () {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function () {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function (that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\n\nvar Math = require('./Math');\n\nvar Vec2 = require('./Vec2');\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\n\n\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d);\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero();\n  }\n}\n\n;\n\nMat22.prototype.toString = function () {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function (o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function (a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number' && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n  } else {\n    _ASSERT && common.assert(false);\n  }\n};\n\nMat22.prototype.setIdentity = function () {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n};\n\nMat22.prototype.setZero = function () {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n};\n\nMat22.prototype.getInverse = function () {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n};\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\n\n\nMat22.prototype.solve = function (v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n};\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\n\n\nMat22.mul = function (mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n  } else if (v && 'ex' in v && 'ey' in v) {\n    // Mat22\n    _ASSERT && Mat22.assert(v); // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n};\n\nMat22.mulVec2 = function (mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n};\n\nMat22.mulMat22 = function (mx, v) {\n  _ASSERT && Mat22.assert(v); // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n};\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\n\n\nMat22.mulT = function (mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n  } else if (v && 'ex' in v && 'ey' in v) {\n    // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n};\n\nMat22.mulTVec2 = function (mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n};\n\nMat22.mulTMat22 = function (mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n};\n\nMat22.abs = function (mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n};\n\nMat22.add = function (mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\n\n\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n}\n\n;\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData: null,\n  collideConnected: false\n};\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\n\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n  this.m_type = 'unknown-joint';\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n  this.m_prev = null;\n  this.m_next = null;\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n}\n\n;\nJoint.TYPES = {};\n\nJoint._deserialize = function (data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\n\n\nJoint.prototype.isActive = function () {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n};\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\n\n\nJoint.prototype.getType = function () {\n  return this.m_type;\n};\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\n\n\nJoint.prototype.getBodyA = function () {\n  return this.m_bodyA;\n};\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\n\n\nJoint.prototype.getBodyB = function () {\n  return this.m_bodyB;\n};\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\n\n\nJoint.prototype.getNext = function () {\n  return this.m_next;\n};\n\nJoint.prototype.getUserData = function () {\n  return this.m_userData;\n};\n\nJoint.prototype.setUserData = function (data) {\n  this.m_userData = data;\n};\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\n\n\nJoint.prototype.getCollideConnected = function () {\n  return this.m_collideConnected;\n};\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\n\n\nJoint.prototype.getAnchorA = function () {};\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\n\n\nJoint.prototype.getAnchorB = function () {};\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\n\n\nJoint.prototype.getReactionForce = function (inv_dt) {};\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\n\n\nJoint.prototype.getReactionTorque = function (inv_dt) {};\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\n\n\nJoint.prototype.shiftOrigin = function (newOrigin) {};\n/**\n */\n\n\nJoint.prototype.initVelocityConstraints = function (step) {};\n/**\n */\n\n\nJoint.prototype.solveVelocityConstraints = function (step) {};\n/**\n * This returns true if the position errors are within tolerance.\n */\n\n\nJoint.prototype.solvePositionConstraints = function (step) {};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\n\n\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\n\nvar Rot = require('./Rot');\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\n\n\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function (xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\n\nvar Math = require('./Math');\n\nvar Vec2 = require('./Vec2');\n\nvar Vec3 = require('./Vec3');\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\n\n\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n}\n\n;\n\nMat33.prototype.toString = function () {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function (o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n/**\n * Set this matrix to all zeros.\n */\n\n\nMat33.prototype.setZero = function () {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n};\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\n\n\nMat33.prototype.solve33 = function (v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n};\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\n\n\nMat33.prototype.solve22 = function (v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n};\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\n\n\nMat33.prototype.getInverse22 = function (M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n};\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\n\n\nMat33.prototype.getSymInverse33 = function (M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n};\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\n\n\nMat33.mul = function (a, b) {\n  _ASSERT && Mat33.assert(a);\n\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n};\n\nMat33.mulVec3 = function (a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n};\n\nMat33.mulVec2 = function (a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n};\n\nMat33.add = function (a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(Vec3.add(a.ex, b.ex), Vec3.add(a.ey, b.ey), Vec3.add(a.ez, b.ez));\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\n\n\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function () {};\n\nShape.prototype._serialize = function () {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function (data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function (shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function () {\n  return this.m_radius;\n};\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\n\n\nShape.prototype.getType = function () {\n  return this.m_type;\n};\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\n\n\nShape.prototype._clone = function () {};\n/**\n * // Get the number of child primitives.\n */\n\n\nShape.prototype.getChildCount = function () {};\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\n\n\nShape.prototype.testPoint = function (xf, p) {};\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\n\n\nShape.prototype.rayCast = function (output, input, transform, childIndex) {};\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\n\n\nShape.prototype.computeAABB = function (aabb, xf, childIndex) {};\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\n\n\nShape.prototype.computeMass = function (massData, density) {};\n/**\n * @param {DistanceProxy} proxy\n */\n\n\nShape.prototype.computeDistanceProxy = function (proxy) {};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n}\n\n;\n/**\n * Verify that the bounds are sorted.\n */\n\nAABB.prototype.isValid = function () {\n  return AABB.isValid(this);\n};\n\nAABB.isValid = function (aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n};\n\nAABB.assert = function (o) {\n  if (!_ASSERT) return;\n\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n};\n/**\n * Get the center of the AABB.\n */\n\n\nAABB.prototype.getCenter = function () {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n};\n/**\n * Get the extents of the AABB (half-widths).\n */\n\n\nAABB.prototype.getExtents = function () {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n};\n/**\n * Get the perimeter length.\n */\n\n\nAABB.prototype.getPerimeter = function () {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n};\n/**\n * Combine one or two AABB into this one.\n */\n\n\nAABB.prototype.combine = function (a, b) {\n  b = b || this;\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n};\n\nAABB.prototype.combinePoints = function (a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n};\n\nAABB.prototype.set = function (aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n};\n\nAABB.prototype.contains = function (aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n};\n\nAABB.prototype.extend = function (value) {\n  AABB.extend(this, value);\n  return this;\n};\n\nAABB.extend = function (aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n};\n\nAABB.testOverlap = function (a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n\n  return true;\n};\n\nAABB.areEqual = function (a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n};\n\nAABB.diff = function (a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x));\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n  return wA * hA + wB * hB - wD * hD;\n};\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\n\n\nAABB.prototype.rayCast = function (output, input) {\n  // From Real-time Collision Detection, p179.\n  var tmin = -Infinity;\n  var tmax = Infinity;\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = f === 'x' ? 'y' : null) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d; // Sign of the normal vector.\n\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      } // Push the min up\n\n\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      } // Pull the max down\n\n\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  } // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n\n\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  } // Intersection.\n\n\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n};\n\nAABB.prototype.toString = function () {\n  return JSON.stringify(this);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\n\nvar Vec2 = require('./common/Vec2');\n\nvar Transform = require('./common/Transform');\n\nvar Mat22 = require('./common/Mat22');\n\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\n\nvar Manifold = require('./Manifold');\n\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\n\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n}\n\n;\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\n\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n  this.m_evaluateFcn = evaluateFcn;\n  this.m_manifold = new Manifold();\n  this.m_prev = null;\n  this.m_next = null;\n  this.m_toi = 1.0;\n  this.m_toiCount = 0; // This contact has a valid TOI in m_toi\n\n  this.m_toiFlag = false;\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\n  this.m_tangentSpeed = 0.0; // This contact can be disabled (by user)\n\n  this.m_enabledFlag = true; // Used when crawling contact graph when forming islands.\n\n  this.m_islandFlag = false; // Set when the shapes are touching.\n\n  this.m_touchingFlag = false; // This contact needs filtering because a fixture filter was changed.\n\n  this.m_filterFlag = false; // This bullet contact had a TOI event\n\n  this.m_bulletHitFlag = false;\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n  this.p_localPoints = []; // Vec2[maxManifoldPoints];\n\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function (step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n  var manifold = this.getManifold();\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n  this.v_pointCount = pointCount;\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n  }\n};\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\n\n\nContact.prototype.getManifold = function () {\n  return this.m_manifold;\n};\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\n\n\nContact.prototype.getWorldManifold = function (worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(), shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n};\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\n\n\nContact.prototype.setEnabled = function (flag) {\n  this.m_enabledFlag = !!flag;\n};\n/**\n * Has this contact been disabled?\n */\n\n\nContact.prototype.isEnabled = function () {\n  return this.m_enabledFlag;\n};\n/**\n * Is this contact touching?\n */\n\n\nContact.prototype.isTouching = function () {\n  return this.m_touchingFlag;\n};\n/**\n * Get the next contact in the world's contact list.\n */\n\n\nContact.prototype.getNext = function () {\n  return this.m_next;\n};\n/**\n * Get fixture A in this contact.\n */\n\n\nContact.prototype.getFixtureA = function () {\n  return this.m_fixtureA;\n};\n/**\n * Get fixture B in this contact.\n */\n\n\nContact.prototype.getFixtureB = function () {\n  return this.m_fixtureB;\n};\n/**\n * Get the child primitive index for fixture A.\n */\n\n\nContact.prototype.getChildIndexA = function () {\n  return this.m_indexA;\n};\n/**\n * Get the child primitive index for fixture B.\n */\n\n\nContact.prototype.getChildIndexB = function () {\n  return this.m_indexB;\n};\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\n\n\nContact.prototype.flagForFiltering = function () {\n  this.m_filterFlag = true;\n};\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\n\n\nContact.prototype.setFriction = function (friction) {\n  this.m_friction = friction;\n};\n/**\n * Get the friction.\n */\n\n\nContact.prototype.getFriction = function () {\n  return this.m_friction;\n};\n/**\n * Reset the friction mixture to the default value.\n */\n\n\nContact.prototype.resetFriction = function () {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\n};\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\n\n\nContact.prototype.setRestitution = function (restitution) {\n  this.m_restitution = restitution;\n};\n/**\n * Get the restitution.\n */\n\n\nContact.prototype.getRestitution = function () {\n  return this.m_restitution;\n};\n/**\n * Reset the restitution to the default value.\n */\n\n\nContact.prototype.resetRestitution = function () {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\n};\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\n\n\nContact.prototype.setTangentSpeed = function (speed) {\n  this.m_tangentSpeed = speed;\n};\n/**\n * Get the desired tangent speed. In meters per second.\n */\n\n\nContact.prototype.getTangentSpeed = function () {\n  return this.m_tangentSpeed;\n};\n/**\n * Called by Update method, and implemented by subclasses.\n */\n\n\nContact.prototype.evaluate = function (manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB, this.m_fixtureB, this.m_indexB);\n};\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\n\n\nContact.prototype.update = function (listener) {\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform(); // Is this contact a sensor?\n\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB); // Sensors don't generate manifolds.\n\n    this.m_manifold.pointCount = 0;\n  } else {\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0; // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n\n        if (omp.id.key == nmp.id.key) {\n          // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n};\n\nContact.prototype.solvePositionConstraint = function (step) {\n  return this._solvePositionConstraint(step, false);\n};\n\nContact.prototype.solvePositionConstraintTOI = function (step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n};\n\nContact.prototype._solvePositionConstraint = function (step, toi, toiA, toiB) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n  var mA = 0.0;\n  var iA = 0.0;\n\n  if (!toi || bodyA == toiA || bodyA == toiB) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n\n  if (!toi || bodyB == toiA || bodyB == toiB) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var minSeparation = 0.0; // Solve normal constraints\n\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB)); // PositionSolverManifold\n\n    var normal, point, separation;\n\n    switch (this.p_type) {\n      case Manifold.e_circles:\n        var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n        var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n        normal = Vec2.sub(pointB, pointA);\n        normal.normalize();\n        point = Vec2.combine(0.5, pointA, 0.5, pointB);\n        separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA - this.p_radiusB;\n        break;\n\n      case Manifold.e_faceA:\n        normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n        var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n        var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n        separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal) - this.p_radiusA - this.p_radiusB;\n        point = clipPoint;\n        break;\n\n      case Manifold.e_faceB:\n        normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n        var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n        var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n        separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal) - this.p_radiusA - this.p_radiusB;\n        point = clipPoint; // Ensure normal points from A to B\n\n        normal.mul(-1);\n        break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB); // Track max constraint error.\n\n    minSeparation = Math.min(minSeparation, separation);\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection; // Prevent large corrections and allow slop.\n\n    var C = Math.clamp(baumgarte * (separation + linearSlop), -maxLinearCorrection, 0.0); // Compute the effective mass.\n\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB; // Compute normal impulse\n\n    var impulse = K > 0.0 ? -C / K : 0.0;\n    var P = Vec2.mul(impulse, normal);\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  positionB.c.set(cB);\n  positionB.a = aB;\n  return minSeparation;\n}; // TODO merge with ManifoldPoint\n\n\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function (step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n  _ASSERT && common.assert(manifold.pointCount > 0);\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0; // Setup a velocity bias for restitution.\n\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB) + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB)) - Vec2.dot(this.v_normal, vA) - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  } // If we have two points, then prepare the block solver.\n\n\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B; // Ensure a reasonable condition number.\n\n    var k_maxConditionNumber = 1000.0;\n\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function (step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function (step) {\n  var manifold = this.m_manifold;\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function (step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2); // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n    // Relative velocity at contact\n\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA)); // Compute tangent force\n\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * -vt; // Clamp the accumulated force\n\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction, maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse; // Apply contact impulse\n\n    var P = Vec2.mul(lambda, tangent);\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  } // Solve normal constraints\n\n\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n      // Relative velocity at contact\n\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA)); // Compute normal impulse\n\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias); // Clamp the accumulated impulse\n\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse; // Apply contact impulse\n\n      var P = Vec2.mul(lambda, normal);\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0); // Relative velocity at contact\n\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA)); // Compute normal velocity\n\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias); // Compute b'\n\n    b.sub(Mat22.mulVec2(this.v_K, a));\n    var k_errorTol = 1e-3; // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a); // Apply incremental impulse\n\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2)); // Accumulate\n\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA); // Compute normal velocity\n\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n\n        break;\n      } //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n\n\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a); // Apply incremental impulse\n\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2)); // Accumulate\n\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A); // Compute normal velocity\n\n          vn1 = Vec2.dot(dv1, normal);\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n\n        break;\n      } //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n\n\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a); // Apply incremental impulse\n\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2)); // Accumulate\n\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A); // Compute normal velocity\n\n          vn2 = Vec2.dot(dv2, normal);\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n\n        break;\n      } //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n\n\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a); // Apply incremental impulse\n\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2)); // Accumulate\n\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n        break;\n      } // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n\n\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\n\n\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\n\n\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\n\nContact.addType = function (type1, type2, callback) {\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n};\n\nContact.create = function (fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n\n  var typeB = fixtureB.getType(); // Shape.Type\n  // TODO: pool contacts\n\n  var contact, evaluateFcn;\n\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  } // Contact creation may swap fixtures.\n\n\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody(); // Connect to body A\n\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n\n  bodyA.m_contactList = contact.m_nodeA; // Connect to body B\n\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n\n  bodyB.m_contactList = contact.m_nodeB; // Wake up the bodies\n\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n};\n\nContact.destroy = function (contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  } // Remove from body 1\n\n\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  } // Remove from body 2\n\n\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\n\nvar Transform = require('./common/Transform');\n\nvar Math = require('./common/Math');\n\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState; // Manifold Type\n\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2; // ContactFeature Type\n\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\n\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [new ManifoldPoint(), new ManifoldPoint()];\n  this.pointCount = 0;\n}\n\n;\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\n\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n}\n\n;\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\n\nfunction ContactID() {\n  this.cf = new ContactFeature();\n}\n\n;\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function get() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function (o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\n\n\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n}\n\n;\n\nContactFeature.prototype.set = function (o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\n\n\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n\n  this.separations = []; // float[maxManifoldPoints]\n}\n\n;\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\n\nManifold.prototype.getWorldManifold = function (wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations; // TODO: improve\n\n  switch (this.type) {\n    case Manifold.e_circles:\n      normal = Vec2.neo(1.0, 0.0);\n      var pointA = Transform.mulVec2(xfA, this.localPoint);\n      var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n      var dist = Vec2.sub(pointB, pointA);\n\n      if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n        normal.set(dist);\n        normal.normalize();\n      }\n\n      var cA = pointA.clone().addMul(radiusA, normal);\n      var cB = pointB.clone().addMul(-radiusB, normal);\n      points[0] = Vec2.mid(cA, cB);\n      separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n      points.length = 1;\n      separations.length = 1;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n      for (var i = 0; i < this.pointCount; ++i) {\n        var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n        var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n        var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n        points[i] = Vec2.mid(cA, cB);\n        separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n      }\n\n      points.length = this.pointCount;\n      separations.length = this.pointCount;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n      for (var i = 0; i < this.pointCount; ++i) {\n        var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n        var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n        var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n        points[i] = Vec2.mid(cA, cB);\n        separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n      }\n\n      points.length = this.pointCount;\n      separations.length = this.pointCount; // Ensure normal points from A to B.\n\n      normal.mul(-1);\n      break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n};\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\n\n\nvar PointState = {\n  // TODO: use constants\n  nullState: 0,\n  addState: 1,\n  persistState: 2,\n  removeState: 3\n};\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\n\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id; // ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  } // Detect persists and adds.\n\n\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id; // ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\n\n\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n}\n\n;\n\nClipVertex.prototype.set = function (o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\n\n\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0; // Calculate the distance of end points to the line\n\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset; // If the points are behind the plane\n\n  if (distance0 <= 0.0) vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0) vOut[numOut++].set(vIn[1]); // If the points are on different sides of the plane\n\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v); // VertexA is hitting edgeB.\n\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Rot = require('../common/Rot');\n\nvar Vec2 = require('../common/Vec2');\n\nvar AABB = require('../collision/AABB');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = Object.create(PolygonShape._super.prototype);\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\n\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    vertices: this.m_vertices\n  };\n};\n\nPolygonShape._deserialize = function (data, fixture, restore) {\n  var vertices = [];\n\n  if (data.vertices) {\n    for (var i = 0; i < data.vertices.length; i++) {\n      vertices.push(restore(Vec2, data.vertices[i]));\n    }\n  }\n\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function (index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n};\n/**\n * @deprecated\n */\n\n\nPolygonShape.prototype._clone = function () {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n\n  return clone;\n};\n\nPolygonShape.prototype.getChildCount = function () {\n  return 1;\n};\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n  var c = Vec2.zero();\n  var area = 0.0; // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n\n  var pRef = Vec2.zero();\n\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n    var D = Vec2.cross(e1, e2);\n    var triangleArea = 0.5 * D;\n    area += triangleArea; // Area weighted centroid\n\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  } // Centroid\n\n\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function () {\n  this._set(this.m_vertices);\n};\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\n\n\nPolygonShape.prototype._set = function (vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices); // Perform welding and copy vertices into local buffer.\n\n  var ps = []; // [Settings.maxPolygonVertices];\n\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n    var unique = true;\n\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n\n    this._setAsBox(1.0, 1.0);\n\n    return;\n  } // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n\n\n  var i0 = 0;\n  var x0 = ps[0].x;\n\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n\n    if (x > x0 || x === x0 && ps[i].y < ps[i0].y) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n    var ie = 0;\n\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v); // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n\n      if (c < 0.0) {\n        ie = j;\n      } // Collinearity check\n\n\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n\n    this._setAsBox(1.0, 1.0);\n\n    return;\n  }\n\n  this.m_count = m; // Copy vertices.\n\n  this.m_vertices = [];\n\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  } // Compute normals. Ensure the edges have non-zero length.\n\n\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  } // Compute the polygon centroid.\n\n\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n};\n/**\n * @private\n */\n\n\nPolygonShape.prototype._setAsBox = function (hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n    this.m_centroid.set(center);\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle); // Transform vertices and normals.\n\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n};\n\nPolygonShape.prototype.testPoint = function (xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nPolygonShape.prototype.rayCast = function (output, input, xf, childIndex) {\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n  var lower = 0.0;\n  var upper = input.maxFraction;\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    } // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n\n\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function (aabb, xf, childIndex) {\n  var minX = Infinity,\n      minY = Infinity;\n  var maxX = -Infinity,\n      maxY = -Infinity;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n};\n\nPolygonShape.prototype.computeMass = function (massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n  _ASSERT && common.assert(this.m_count >= 3);\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0; // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n\n  var s = Vec2.zero(); // This code would put the reference point inside the polygon.\n\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n\n  s.mul(1.0 / this.m_count);\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2.sub(this.m_vertices[0], s);\n    var D = Vec2.cross(e1, e2);\n    var triangleArea = 0.5 * D;\n    area += triangleArea; // Area weighted centroid\n\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n    I += 0.25 * k_inv3 * D * (intx2 + inty2);\n  } // Total mass\n\n\n  massData.mass = density * area; // Center of mass\n\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s); // Inertia tensor relative to the local origin (point s).\n\n  massData.I = density * I; // Shift to center of mass then to original body origin.\n\n  massData.I += massData.mass * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}; // Validate convexity. This is a very time consuming operation.\n// @returns true if valid\n\n\nPolygonShape.prototype.validate = function () {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nPolygonShape.prototype.computeDistanceProxy = function (proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\n\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n}\n\n;\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\n\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\n\n\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n}\n\n;\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\n\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB; // Initialize the simplex.\n\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB); // Get simplex vertices as an array.\n\n  var vertices = simplex.m_v; // SimplexVertex\n\n  var k_maxIters = Settings.maxDistnceIterations; // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n\n  var saveA = [];\n  var saveB = []; // int[3]\n\n  var saveCount = 0;\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity; // Main iteration loop.\n\n  var iter = 0;\n\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve(); // If we have 3 points, then the origin is in the corresponding triangle.\n\n    if (simplex.m_count == 3) {\n      break;\n    } // Compute closest point.\n\n\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared(); // Ensure progress\n\n    if (distanceSqr2 >= distanceSqr1) {// break;\n    }\n\n    distanceSqr1 = distanceSqr2; // Get search direction.\n\n    var d = simplex.getSearchDirection(); // Ensure the search direction is numerically fit.\n\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    } // Compute a tentative new simplex vertex using support points.\n\n\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA); // Iteration count is equated to the number of support point calls.\n\n    ++iter;\n    ++stats.gjkIters; // Check for duplicate support points. This is the main termination\n    // criteria.\n\n    var duplicate = false;\n\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    } // If we found a duplicate support point we must exit to avoid cycling.\n\n\n    if (duplicate) {\n      break;\n    } // New vertex is ok and needed.\n\n\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter); // Prepare output.\n\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter; // Cache the simplex.\n\n  simplex.writeCache(cache); // Apply radii if requested.\n\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\n\n\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n\n  this.m_vertices = []; // Vec2[]\n\n  this.m_count = 0;\n  this.m_radius = 0;\n}\n\n;\n/**\n * Get the vertex count.\n */\n\nDistanceProxy.prototype.getVertexCount = function () {\n  return this.m_count;\n};\n/**\n * Get a vertex by index. Used by Distance.\n */\n\n\nDistanceProxy.prototype.getVertex = function (index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n};\n/**\n * Get the supporting vertex index in the given direction.\n */\n\n\nDistanceProxy.prototype.getSupport = function (d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n\n  return bestIndex;\n};\n/**\n * Get the supporting vertex in the given direction.\n */\n\n\nDistanceProxy.prototype.getSupportVertex = function (d) {\n  return this.m_vertices[this.getSupport(d)];\n};\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\n\n\nDistanceProxy.prototype.set = function (shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n};\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n\n  this.indexB; // wB index\n\n  this.wA = Vec2.zero(); // support point in proxyA\n\n  this.wB = Vec2.zero(); // support point in proxyB\n\n  this.w = Vec2.zero(); // wB - wA\n\n  this.a; // barycentric coordinate for closest point\n}\n\n;\n\nSimplexVertex.prototype.set = function (v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [this.m_v1, this.m_v2, this.m_v3];\n  this.m_count;\n}\n\n;\n\nSimplex.prototype.print = function () {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count, this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y, this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y, this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y].toString();\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count, this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y, this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y].toString();\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count, this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y].toString();\n  } else {\n    return \"+\" + this.m_count;\n  }\n}; // (SimplexCache, DistanceProxy, ...)\n\n\nSimplex.prototype.readCache = function (cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3); // Copy data from cache.\n\n  this.m_count = cache.count;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  } // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n\n\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2 || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  } // If the cache is empty or invalid...\n\n\n  if (this.m_count == 0) {\n    var v = this.m_v[0]; // SimplexVertex\n\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}; // (SimplexCache)\n\n\nSimplex.prototype.writeCache = function (cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n};\n\nSimplex.prototype.getSearchDirection = function () {\n  switch (this.m_count) {\n    case 1:\n      return Vec2.neg(this.m_v1.w);\n\n    case 2:\n      {\n        var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n        var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n\n        if (sgn > 0.0) {\n          // Origin is left of e12.\n          return Vec2.cross(1.0, e12);\n        } else {\n          // Origin is right of e12.\n          return Vec2.cross(e12, 1.0);\n        }\n      }\n\n    default:\n      _ASSERT && common.assert(false);\n      return Vec2.zero();\n  }\n};\n\nSimplex.prototype.getClosestPoint = function () {\n  switch (this.m_count) {\n    case 0:\n      _ASSERT && common.assert(false);\n      return Vec2.zero();\n\n    case 1:\n      return Vec2.clone(this.m_v1.w);\n\n    case 2:\n      return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n    case 3:\n      return Vec2.zero();\n\n    default:\n      _ASSERT && common.assert(false);\n      return Vec2.zero();\n  }\n};\n\nSimplex.prototype.getWitnessPoints = function (pA, pB) {\n  switch (this.m_count) {\n    case 0:\n      _ASSERT && common.assert(false);\n      break;\n\n    case 1:\n      pA.set(this.m_v1.wA);\n      pB.set(this.m_v1.wB);\n      break;\n\n    case 2:\n      pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n      pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n      break;\n\n    case 3:\n      pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n      pA.addMul(this.m_v3.a, this.m_v3.wA);\n      pB.set(pA);\n      break;\n\n    default:\n      _ASSERT && common.assert(false);\n      break;\n  }\n};\n\nSimplex.prototype.getMetric = function () {\n  switch (this.m_count) {\n    case 0:\n      _ASSERT && common.assert(false);\n      return 0.0;\n\n    case 1:\n      return 0.0;\n\n    case 2:\n      return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n    case 3:\n      return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w, this.m_v1.w));\n\n    default:\n      _ASSERT && common.assert(false);\n      return 0.0;\n  }\n};\n\nSimplex.prototype.solve = function () {\n  switch (this.m_count) {\n    case 1:\n      break;\n\n    case 2:\n      this.solve2();\n      break;\n\n    case 3:\n      this.solve3();\n      break;\n\n    default:\n      _ASSERT && common.assert(false);\n  }\n}; // Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\n\n\nSimplex.prototype.solve2 = function () {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1); // w1 region\n\n  var d12_2 = -Vec2.dot(w1, e12);\n\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  } // w2 region\n\n\n  var d12_1 = Vec2.dot(w2, e12);\n\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  } // Must be in e12 region.\n\n\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}; // Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\n\n\nSimplex.prototype.solve3 = function () {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w; // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12; // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13; // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n\n  var e23 = Vec2.sub(w3, w2); // Vec2\n\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23; // Triangle123\n\n  var n123 = Vec2.cross(e12, e13);\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2); // w1 region\n\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  } // e12\n\n\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  } // e13\n\n\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  } // w2 region\n\n\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  } // w3 region\n\n\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  } // e23\n\n\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  } // Must be in triangle123\n\n\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n};\n/**\n * Determine if two generic shapes overlap.\n */\n\n\nDistance.testOverlap = function (shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n  var cache = new SimplexCache();\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n  return output.distance < 10.0 * Math.EPSILON;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Rot = require('../common/Rot');\n\nvar Vec2 = require('../common/Vec2');\n\nvar AABB = require('../collision/AABB');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = Object.create(CircleShape._super.prototype);\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    p: this.m_p,\n    radius: this.m_radius\n  };\n};\n\nCircleShape._deserialize = function (data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function () {\n  return this.m_radius;\n};\n\nCircleShape.prototype.getCenter = function () {\n  return this.m_p;\n};\n\nCircleShape.prototype.getVertex = function (index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n};\n\nCircleShape.prototype.getVertexCount = function (index) {\n  return 1;\n};\n/**\n * @deprecated\n */\n\n\nCircleShape.prototype._clone = function () {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n};\n\nCircleShape.prototype.getChildCount = function () {\n  return 1;\n};\n\nCircleShape.prototype.testPoint = function (xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}; // Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\n\n\nCircleShape.prototype.rayCast = function (output, input, xf, childIndex) {\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius; // Solve quadratic equation.\n\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b; // Check for negative discriminant and short segment.\n\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  } // Find the point of intersection of the line with the circle.\n\n\n  var a = -(c + Math.sqrt(sigma)); // Is the intersection point on the segment?\n\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n};\n\nCircleShape.prototype.computeAABB = function (aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n};\n\nCircleShape.prototype.computeMass = function (massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p; // inertia about the local origin\n\n  massData.I = massData.mass * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n};\n\nCircleShape.prototype.computeDistanceProxy = function (proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Rot = require('../common/Rot');\n\nvar Vec2 = require('../common/Vec2');\n\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = Object.create(EdgeShape._super.prototype);\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\n\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius; // These are the edge vertices\n\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero(); // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3\n  };\n};\n\nEdgeShape._deserialize = function (data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function (v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function (v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n\n  return this;\n};\n/**\n * Set this as an isolated edge.\n */\n\n\nEdgeShape.prototype._set = function (v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n};\n/**\n * @deprecated\n */\n\n\nEdgeShape.prototype._clone = function () {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n};\n\nEdgeShape.prototype.getChildCount = function () {\n  return 1;\n};\n\nEdgeShape.prototype.testPoint = function (xf, p) {\n  return false;\n}; // p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\n\n\nEdgeShape.prototype.rayCast = function (output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize(); // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d)); // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n\n  return true;\n};\n\nEdgeShape.prototype.computeAABB = function (aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius);\n};\n\nEdgeShape.prototype.computeMass = function (massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n};\n\nEdgeShape.prototype.computeDistanceProxy = function (proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\n\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\n\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\n\n\nvar FixtureDef = {\n  userData: null,\n  friction: 0.2,\n  restitution: 0.0,\n  density: 0.0,\n  isSensor: false,\n  filterGroupIndex: 0,\n  filterCategoryBits: 0x0001,\n  filterMaskBits: 0xFFFF\n};\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\n\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n}\n\n;\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\n\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n  } else if (typeof def === 'number') {\n    def = {\n      density: def\n    };\n  }\n\n  def = options(def, FixtureDef);\n  this.m_body = body;\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits; // TODO validate shape\n\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n  var childCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n}\n\n;\n/**\n * Re-setup fixture.\n * @private\n */\n\nFixture.prototype._reset = function () {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n\n  var childCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function () {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n    shape: this.m_shape\n  };\n};\n\nFixture._deserialize = function (data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\n\n\nFixture.prototype.getType = function () {\n  return this.m_shape.getType();\n};\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\n\n\nFixture.prototype.getShape = function () {\n  return this.m_shape;\n};\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\n\n\nFixture.prototype.isSensor = function () {\n  return this.m_isSensor;\n};\n/**\n * Set if this fixture is a sensor.\n */\n\n\nFixture.prototype.setSensor = function (sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n};\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\n\n\nFixture.prototype.getUserData = function () {\n  return this.m_userData;\n};\n/**\n * Set the user data. Use this to store your application specific data.\n */\n\n\nFixture.prototype.setUserData = function (data) {\n  this.m_userData = data;\n};\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\n\n\nFixture.prototype.getBody = function () {\n  return this.m_body;\n};\n/**\n * Get the next fixture in the parent body's fixture list.\n */\n\n\nFixture.prototype.getNext = function () {\n  return this.m_next;\n};\n/**\n * Get the density of this fixture.\n */\n\n\nFixture.prototype.getDensity = function () {\n  return this.m_density;\n};\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\n\n\nFixture.prototype.setDensity = function (density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n};\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\n\n\nFixture.prototype.getFriction = function () {\n  return this.m_friction;\n};\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\n\n\nFixture.prototype.setFriction = function (friction) {\n  this.m_friction = friction;\n};\n/**\n * Get the coefficient of restitution.\n */\n\n\nFixture.prototype.getRestitution = function () {\n  return this.m_restitution;\n};\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\n\n\nFixture.prototype.setRestitution = function (restitution) {\n  this.m_restitution = restitution;\n};\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\n\n\nFixture.prototype.testPoint = function (p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n};\n/**\n * Cast a ray against this shape.\n */\n\n\nFixture.prototype.rayCast = function (output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n};\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\n\n\nFixture.prototype.getMassData = function (massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n};\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\n\n\nFixture.prototype.getAABB = function (childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n};\n/**\n * These support body activation/deactivation.\n */\n\n\nFixture.prototype.createProxies = function (broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0); // Create proxies in the broad-phase.\n\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n};\n\nFixture.prototype.destroyProxies = function (broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n};\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\n\n\nFixture.prototype.synchronize = function (broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i]; // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n    proxy.aabb.combine(aabb1, aabb2);\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n};\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\n\n\nFixture.prototype.setFilterData = function (filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n};\n\nFixture.prototype.getFilterGroupIndex = function () {\n  return this.m_filterGroupIndex;\n};\n\nFixture.prototype.setFilterGroupIndex = function (groupIndex) {\n  return this.m_filterGroupIndex = groupIndex;\n};\n\nFixture.prototype.getFilterCategoryBits = function () {\n  return this.m_filterCategoryBits;\n};\n\nFixture.prototype.setFilterCategoryBits = function (categoryBits) {\n  this.m_filterCategoryBits = categoryBits;\n};\n\nFixture.prototype.getFilterMaskBits = function () {\n  return this.m_filterMaskBits;\n};\n\nFixture.prototype.setFilterMaskBits = function (maskBits) {\n  this.m_filterMaskBits = maskBits;\n};\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\n\n\nFixture.prototype.refilter = function () {\n  if (this.m_body == null) {\n    return;\n  } // Flag associated contacts for filtering.\n\n\n  var edge = this.m_body.getContactList();\n\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  } // Touch each proxy so that new pairs may be created\n\n\n  var broadPhase = world.m_broadPhase;\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n};\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} that\n */\n\n\nFixture.prototype.shouldCollide = function (that) {\n  if (that.m_filterGroupIndex === this.m_filterGroupIndex && that.m_filterGroupIndex !== 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collideA = (that.m_filterMaskBits & this.m_filterCategoryBits) !== 0;\n  var collideB = (that.m_filterCategoryBits & this.m_filterMaskBits) !== 0;\n  var collide = collideA && collideB;\n  return collide;\n};","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function (newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n\n  return string;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Rot = require('../common/Rot');\n\nvar Vec2 = require('../common/Vec2');\n\nvar AABB = require('../collision/AABB');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = Object.create(ChainShape._super.prototype);\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n *\n * WARNING: The chain will not collide properly if there are self-intersections.\n */\n\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function () {\n  var data = {\n    type: this.m_type,\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex\n  };\n\n  if (this.m_prevVertex) {\n    data.prevVertex = this.m_prevVertex;\n  }\n\n  if (this.m_nextVertex) {\n    data.nextVertex = this.m_nextVertex;\n  }\n\n  return data;\n};\n\nChainShape._deserialize = function (data, fixture, restore) {\n  var vertices = [];\n\n  if (data.vertices) {\n    for (var i = 0; i < data.vertices.length; i++) {\n      vertices.push(restore(Vec2, data.vertices[i]));\n    }\n  }\n\n  var shape = new ChainShape(vertices, data.isLoop);\n\n  if (data.prevVertex) {\n    shape.setPrevVertex(data.prevVertex);\n  }\n\n  if (data.nextVertex) {\n    shape.setNextVertex(data.nextVertex);\n  }\n\n  return shape;\n}; // ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\n\n\nChainShape.prototype._createLoop = function (vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i]; // If the code crashes here, it means your vertices are too close together.\n\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices = [];\n  this.m_count = vertices.length + 1;\n\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n\n  this.m_vertices[vertices.length] = Vec2.clone(vertices[0]);\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n};\n/**\n * Create a chain with isolated end vertices.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\n\n\nChainShape.prototype._createChain = function (vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n};\n\nChainShape.prototype._reset = function () {\n  if (this.m_isLoop) {\n    this._createLoop(this.m_vertices);\n  } else {\n    this._createChain(this.m_vertices);\n  }\n};\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\n\n\nChainShape.prototype.setPrevVertex = function (prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n};\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\n\n\nChainShape.prototype.setNextVertex = function (nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n};\n/**\n * @deprecated\n */\n\n\nChainShape.prototype._clone = function () {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n};\n\nChainShape.prototype.getChildCount = function () {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}; // Get a child edge.\n\n\nChainShape.prototype.getChildEdge = function (edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n};\n\nChainShape.prototype.getVertex = function (index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n};\n/**\n * This always return false.\n */\n\n\nChainShape.prototype.testPoint = function (xf, p) {\n  return false;\n};\n\nChainShape.prototype.rayCast = function (output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n};\n\nChainShape.prototype.computeAABB = function (aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n  aabb.combinePoints(v1, v2);\n};\n/**\n * Chains have zero mass.\n */\n\n\nChainShape.prototype.computeMass = function (massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n};\n\nChainShape.prototype.computeDistanceProxy = function (proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\n\nvar BroadPhase = require('./collision/BroadPhase');\n\nvar Solver = require('./Solver');\n\nvar Body = require('./Body');\n\nvar Joint = require('./Joint');\n\nvar Contact = require('./Contact');\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = true]\n * @prop {boolean} [continuousPhysics = true]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\n\n\nvar WorldDef = {\n  gravity: Vec2.zero(),\n  allowSleep: true,\n  warmStarting: true,\n  continuousPhysics: true,\n  subStepping: false,\n  blockSolve: true,\n  velocityIterations: 8,\n  positionIterations: 3\n};\n/**\n * @param {WorldDef|Vec2} def World definition or gravity vector.\n */\n\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      gravity: def\n    };\n  }\n\n  def = options(def, WorldDef);\n  this.m_solver = new Solver(this);\n  this.m_broadPhase = new BroadPhase();\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n  this.m_stepComplete = true;\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false; // These are for debugging the solver.\n\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n  this.m_t = 0; // Broad-phase callback.\n\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function () {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints\n  };\n};\n\nWorld._deserialize = function (data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  if (data.bodies) {\n    for (var i = data.bodies.length - 1; i >= 0; i -= 1) {\n      world._addBody(restore(Body, data.bodies[i], world));\n    }\n  }\n\n  if (data.joints) {\n    for (var i = data.joints.length - 1; i >= 0; i--) {\n      world.createJoint(restore(Joint, data.joints[i], world));\n    }\n  }\n\n  return world;\n};\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\n\n\nWorld.prototype.getBodyList = function () {\n  return this.m_bodyList;\n};\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\n\n\nWorld.prototype.getJointList = function () {\n  return this.m_jointList;\n};\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\n\n\nWorld.prototype.getContactList = function () {\n  return this.m_contactList;\n};\n\nWorld.prototype.getBodyCount = function () {\n  return this.m_bodyCount;\n};\n\nWorld.prototype.getJointCount = function () {\n  return this.m_jointCount;\n};\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\n\n\nWorld.prototype.getContactCount = function () {\n  return this.m_contactCount;\n};\n/**\n * Change the global gravity vector.\n */\n\n\nWorld.prototype.setGravity = function (gravity) {\n  this.m_gravity = gravity;\n};\n/**\n * Get the global gravity vector.\n */\n\n\nWorld.prototype.getGravity = function () {\n  return this.m_gravity;\n};\n/**\n * Is the world locked (in the middle of a time step).\n */\n\n\nWorld.prototype.isLocked = function () {\n  return this.m_locked;\n};\n/**\n * Enable/disable sleep.\n */\n\n\nWorld.prototype.setAllowSleeping = function (flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n};\n\nWorld.prototype.getAllowSleeping = function () {\n  return this.m_allowSleep;\n};\n/**\n * Enable/disable warm starting. For testing.\n */\n\n\nWorld.prototype.setWarmStarting = function (flag) {\n  this.m_warmStarting = flag;\n};\n\nWorld.prototype.getWarmStarting = function () {\n  return this.m_warmStarting;\n};\n/**\n * Enable/disable continuous physics. For testing.\n */\n\n\nWorld.prototype.setContinuousPhysics = function (flag) {\n  this.m_continuousPhysics = flag;\n};\n\nWorld.prototype.getContinuousPhysics = function () {\n  return this.m_continuousPhysics;\n};\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\n\n\nWorld.prototype.setSubStepping = function (flag) {\n  this.m_subStepping = flag;\n};\n\nWorld.prototype.getSubStepping = function () {\n  return this.m_subStepping;\n};\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\n\n\nWorld.prototype.setAutoClearForces = function (flag) {\n  this.m_clearForces = flag;\n};\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\n\n\nWorld.prototype.getAutoClearForces = function () {\n  return this.m_clearForces;\n};\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\n\n\nWorld.prototype.clearForces = function () {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n};\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\n\n\nWorld.prototype.queryAABB = function (aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function (proxyId) {\n    //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n\n    return queryCallback(proxy.fixture);\n  });\n};\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\n\n\nWorld.prototype.rayCast = function (point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.rayCast({\n    maxFraction: 1.0,\n    p1: point1,\n    p2: point2\n  }, function (input, proxyId) {\n    // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n\n    var hit = fixture.rayCast(output, input, index);\n\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul(1.0 - fraction, input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n\n    return input.maxFraction;\n  });\n};\n/**\n * Get the number of broad-phase proxies.\n */\n\n\nWorld.prototype.getProxyCount = function () {\n  return this.m_broadPhase.getProxyCount();\n};\n/**\n * Get the height of broad-phase dynamic tree.\n */\n\n\nWorld.prototype.getTreeHeight = function () {\n  return this.m_broadPhase.getTreeHeight();\n};\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\n\n\nWorld.prototype.getTreeBalance = function () {\n  return this.m_broadPhase.getTreeBalance();\n};\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\n\n\nWorld.prototype.getTreeQuality = function () {\n  return this.m_broadPhase.getTreeQuality();\n};\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\n\n\nWorld.prototype.shiftOrigin = function (newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n};\n/**\n * @internal Used for deserialize.\n */\n\n\nWorld.prototype._addBody = function (body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n\n  if (this.isLocked()) {\n    return;\n  } // Add to world doubly linked list.\n\n\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n};\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\n\n\nWorld.prototype.createBody = function (def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position: def,\n      angle: angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n};\n\nWorld.prototype.createDynamicBody = function (def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = {\n      position: def,\n      angle: angle\n    };\n  }\n\n  def.type = 'dynamic';\n  return this.createBody(def);\n};\n\nWorld.prototype.createKinematicBody = function (def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = {\n      position: def,\n      angle: angle\n    };\n  }\n\n  def.type = 'kinematic';\n  return this.createBody(def);\n};\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\n\n\nWorld.prototype.destroyBody = function (b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  } // Delete the attached joints.\n\n\n  var je = b.m_jointList;\n\n  while (je) {\n    var je0 = je;\n    je = je.next;\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n    b.m_jointList = je;\n  }\n\n  b.m_jointList = null; // Delete the attached contacts.\n\n  var ce = b.m_contactList;\n\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.destroyContact(ce0.contact);\n    b.m_contactList = ce;\n  }\n\n  b.m_contactList = null; // Delete the attached fixtures. This destroys broad-phase proxies.\n\n  var f = b.m_fixtureList;\n\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n    b.m_fixtureList = f;\n  }\n\n  b.m_fixtureList = null; // Remove world body list.\n\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n  --this.m_bodyCount;\n  this.publish('remove-body', b);\n  return true;\n};\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\n\n\nWorld.prototype.createJoint = function (joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n\n  if (this.isLocked()) {\n    return null;\n  } // Connect to the world list.\n\n\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n\n  this.m_jointList = joint;\n  ++this.m_jointCount; // Connect to the bodies' doubly linked lists.\n\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList) joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList) joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB; // If the joint prevents collisions, then flag any contacts for filtering.\n\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  } // Note: creating a joint doesn't wake the bodies.\n\n\n  return joint;\n};\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\n\n\nWorld.prototype.destroyJoint = function (joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n\n  if (this.isLocked()) {\n    return;\n  } // Remove from the doubly linked list.\n\n\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  } // Disconnect from bodies.\n\n\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB; // Wake up connected bodies.\n\n  bodyA.setAwake(true);\n  bodyB.setAwake(true); // Remove from body 1.\n\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null; // Remove from body 2\n\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount; // If the joint prevents collisions, then flag any contacts for filtering.\n\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n};\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\n\nWorld.prototype.step = function (timeStep, velocityIterations, positionIterations) {\n  this.publish('pre-step', timeStep);\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations; // If new fixtures were added, we need to find the new contacts.\n\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve; // Update contacts. This is where some contacts are destroyed.\n\n  this.updateContacts(); // Integrate velocities, solve velocity constraints, and integrate positions.\n\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step); // Synchronize fixtures, check for out of range bodies.\n\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      } // Update fixtures (for broad-phase).\n\n\n      b.synchronizeFixtures();\n    } // Look for new contacts.\n\n\n    this.findNewContacts();\n  } // Handle TOI events.\n\n\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n  this.publish('post-step', timeStep);\n};\n/**\n * Call this method to find new contacts.\n */\n\n\nWorld.prototype.findNewContacts = function () {\n  this.m_broadPhase.updatePairs(this.addPair);\n};\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\n\n\nWorld.prototype.createContact = function (proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody(); // Are the fixtures on the same body?\n\n  if (bodyA == bodyB) {\n    return;\n  } // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n\n\n  var edge = bodyB.getContactList(); // ContactEdge\n\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  } // Call the factory.\n\n\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n\n  if (contact == null) {\n    return;\n  } // Insert into the world.\n\n\n  contact.m_prev = null;\n\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n\n  this.m_contactList = contact;\n  ++this.m_contactCount;\n};\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\n\n\nWorld.prototype.updateContacts = function () {\n  // Update awake contacts.\n  var c,\n      next_c = this.m_contactList;\n\n  while (c = next_c) {\n    next_c = c.getNext();\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody(); // Is this contact flagged for filtering?\n\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      } // Clear the filtering flag.\n\n\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic(); // At least one body must be awake and it must be dynamic or kinematic.\n\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB); // Here we destroy contacts that cease to overlap in the broad-phase.\n\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    } // The contact persists.\n\n\n    c.update(this);\n  }\n};\n/**\n * @param {Contact} contact\n */\n\n\nWorld.prototype.destroyContact = function (contact) {\n  Contact.destroy(contact, this); // Remove from the world.\n\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n};\n\nWorld.prototype._listeners = null;\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\n\nWorld.prototype.on = function (name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n\n  this._listeners[name].push(listener);\n\n  return this;\n};\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\n\n\nWorld.prototype.off = function (name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n\n  var listeners = this._listeners && this._listeners[name];\n\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n\n  var index = listeners.indexOf(listener);\n\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n\n  return this;\n};\n\nWorld.prototype.publish = function (name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n\n  return listeners.length;\n};\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\n\n\nWorld.prototype.beginContact = function (contact) {\n  this.publish('begin-contact', contact);\n};\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\n\n\nWorld.prototype.endContact = function (contact) {\n  this.publish('end-contact', contact);\n};\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\n\n\nWorld.prototype.preSolve = function (contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\n\n\nWorld.prototype.postSolve = function (contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\n\nvar Pool = require('../util/Pool');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Math = require('../common/Math');\n\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\n\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function () {\n    return this.id + \": \" + this.userData;\n  };\n}\n\n;\n\nTreeNode.prototype.isLeaf = function () {\n  return this.child1 == null;\n};\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\n\n\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {};\n  this.m_lastProxyId = 0;\n  this.m_pool = new Pool({\n    create: function create() {\n      return new TreeNode();\n    }\n  });\n}\n\n;\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\n\nDynamicTree.prototype.getUserData = function (id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n};\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\n\n\nDynamicTree.prototype.getFatAABB = function (id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n};\n\nDynamicTree.prototype.allocateNode = function () {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n};\n\nDynamicTree.prototype.freeNode = function (node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n};\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\n\n\nDynamicTree.prototype.createProxy = function (aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var node = this.allocateNode();\n  node.aabb.set(aabb); // Fatten the aabb.\n\n  AABB.extend(node.aabb, Settings.aabbExtension);\n  node.userData = userData;\n  node.height = 0;\n  this.insertLeaf(node);\n  return node.id;\n};\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\n\n\nDynamicTree.prototype.destroyProxy = function (id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n  this.removeLeaf(node);\n  this.freeNode(node);\n};\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\n\n\nDynamicTree.prototype.moveProxy = function (id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n  node.aabb.set(aabb); // Extend AABB.\n\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension); // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n  return true;\n};\n\nDynamicTree.prototype.insertLeaf = function (leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  } // Find the best sibling for this node\n\n\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n    var area = index.aabb.getPerimeter();\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter(); // Cost of creating a new parent for this node and the new leaf\n\n    var cost = 2.0 * combinedArea; // Minimum cost of pushing the leaf further down the tree\n\n    var inheritanceCost = 2.0 * (combinedArea - area); // Cost of descending into child1\n\n    var cost1;\n\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = newArea - oldArea + inheritanceCost;\n    } // Cost of descending into child2\n\n\n    var cost2;\n\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    } // Descend according to the minimum cost.\n\n\n    if (cost < cost1 && cost < cost2) {\n      break;\n    } // Descend\n\n\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index; // Create a new parent.\n\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  } // Walk back up the tree fixing heights and AABBs\n\n\n  index = leaf.parent;\n\n  while (index != null) {\n    index = this.balance(index);\n    var child1 = index.child1;\n    var child2 = index.child2;\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n    index = index.parent;\n  } // validate();\n\n};\n\nDynamicTree.prototype.removeLeaf = function (leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n\n    sibling.parent = grandParent;\n    this.freeNode(parent); // Adjust ancestor bounds.\n\n    var index = grandParent;\n\n    while (index != null) {\n      index = this.balance(index);\n      var child1 = index.child1;\n      var child2 = index.child2;\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  } // validate();\n\n};\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\n\n\nDynamicTree.prototype.balance = function (iA) {\n  _ASSERT && common.assert(iA != null);\n  var A = iA;\n\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n  var balance = C.height - B.height; // Rotate C up\n\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2; // Swap A and C\n\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C; // A's old parent should point to C\n\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    } // Rotate\n\n\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  } // Rotate B up\n\n\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2; // Swap A and B\n\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B; // A's old parent should point to B\n\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    } // Rotate\n\n\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n};\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\n\n\nDynamicTree.prototype.getHeight = function () {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n};\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\n\n\nDynamicTree.prototype.getAreaRatio = function () {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n  var totalArea = 0.0;\n  var node,\n      it = iteratorPool.allocate().preorder(this.m_root);\n\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n  return totalArea / rootArea;\n};\n/**\n * Compute the height of a sub-tree.\n */\n\n\nDynamicTree.prototype.computeHeight = function (id) {\n  var node;\n\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  } // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n};\n\nDynamicTree.prototype.validateStructure = function (node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  } // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n};\n\nDynamicTree.prototype.validateMetrics = function (node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  } // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}; // Validate this tree. For testing.\n\n\nDynamicTree.prototype.validate = function () {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n};\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\n\n\nDynamicTree.prototype.getMaxBalance = function () {\n  var maxBalance = 0;\n  var node,\n      it = iteratorPool.allocate().preorder(this.m_root);\n\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n\n  iteratorPool.release(it);\n  return maxBalance;\n};\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\n\n\nDynamicTree.prototype.rebuildBottomUp = function () {\n  var nodes = [];\n  var count = 0; // Build array of leaves. Free the rest.\n\n  var node,\n      it = iteratorPool.allocate().preorder(this.m_root);\n\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1,\n        jMin = -1;\n\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n    child1.parent = parent;\n    child2.parent = parent;\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n  this.validate();\n};\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\n\n\nDynamicTree.prototype.shiftOrigin = function (newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node,\n      it = iteratorPool.allocate().preorder(this.m_root);\n\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n\n  iteratorPool.release(it);\n};\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\n\n\nDynamicTree.prototype.query = function (aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var stack = stackPool.allocate();\n  stack.push(this.m_root);\n\n  while (stack.length > 0) {\n    var node = stack.pop();\n\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n};\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\n\n\nDynamicTree.prototype.rayCast = function (input, rayCastCallback) {\n  // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function');\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize(); // v is perpendicular to the segment.\n\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v); // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction; // Build a bounding box for the segment.\n\n  var segmentAABB = new AABB();\n  var t = Vec2.combine(1 - maxFraction, p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n  stack.push(this.m_root);\n\n  while (stack.length > 0) {\n    var node = stack.pop();\n\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    } // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n\n\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c))) - Vec2.dot(abs_v, h);\n\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine(1 - maxFraction, p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n};\n\nvar inputPool = new Pool({\n  create: function create() {\n    return {};\n  },\n  release: function release(stack) {}\n});\nvar stackPool = new Pool({\n  create: function create() {\n    return [];\n  },\n  release: function release(stack) {\n    stack.length = 0;\n  }\n});\nvar iteratorPool = new Pool({\n  create: function create() {\n    return new Iterator();\n  },\n  release: function release(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder: function preorder(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next: function next() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n\n        if (states[i] === 1) {\n          states[i] = 2;\n\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n\n        if (states[i] === 2) {\n          states[i] = 3;\n\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n\n        parents.pop();\n        states.pop();\n      }\n    },\n    close: function close() {\n      parents.length = 0;\n    }\n  };\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\n\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\n\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\n\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n}\n\n; // TOIOutput State\n\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\n\nfunction TOIOutput() {\n  this.state;\n  this.t;\n}\n\n;\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\n\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n  ++stats.toiCalls;\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n  var proxyA = input.proxyA; // DistanceProxy\n\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n\n  var sweepB = input.sweepB; // Sweep\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n\n  sweepA.normalize();\n  sweepB.normalize();\n  var tMax = input.tMax;\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0; // Prepare input for distance query.\n\n  var cache = new SimplexCache();\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false; // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1); // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput); // If the shapes are overlapped, we give up on continuous collision.\n\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    } // Initialize the separating axis.\n\n\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1); // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB; // Is the final configuration separated?\n\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      } // Has the separation reached tolerance?\n\n\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      } // Compute the initial separation of the witness points.\n\n\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB; // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      } // Check for touching\n\n\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      } // Compute 1D root of: f(x) - target = 0\n\n\n      var rootIterCount = 0;\n      var a1 = t1,\n          a2 = t2;\n\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        } // Ensure we continue to bracket the root.\n\n\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n} // SeparationFunction Type\n\n\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA; // Sweep\n\n  this.m_sweepB; // Sweep\n\n  this.indexA; // integer\n\n  this.indexB; // integer\n\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n}\n\n; // TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\n\nSeparationFunction.prototype.initialize = function (cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n\n    return s;\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function (find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n    case e_points:\n      {\n        if (find) {\n          var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n          var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n          this.indexA = this.m_proxyA.getSupport(axisA);\n          this.indexB = this.m_proxyB.getSupport(axisB);\n        }\n\n        var localPointA = this.m_proxyA.getVertex(this.indexA);\n        var localPointB = this.m_proxyB.getVertex(this.indexB);\n        var pointA = Transform.mulVec2(xfA, localPointA);\n        var pointB = Transform.mulVec2(xfB, localPointB);\n        var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n        return sep;\n      }\n\n    case e_faceA:\n      {\n        var normal = Rot.mulVec2(xfA.q, this.m_axis);\n        var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n        if (find) {\n          var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n          this.indexA = -1;\n          this.indexB = this.m_proxyB.getSupport(axisB);\n        }\n\n        var localPointB = this.m_proxyB.getVertex(this.indexB);\n        var pointB = Transform.mulVec2(xfB, localPointB);\n        var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n        return sep;\n      }\n\n    case e_faceB:\n      {\n        var normal = Rot.mulVec2(xfB.q, this.m_axis);\n        var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n        if (find) {\n          var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n          this.indexB = -1;\n          this.indexA = this.m_proxyA.getSupport(axisA);\n        }\n\n        var localPointA = this.m_proxyA.getVertex(this.indexA);\n        var pointA = Transform.mulVec2(xfA, localPointA);\n        var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n        return sep;\n      }\n\n    default:\n      _ASSERT && common.assert(false);\n\n      if (find) {\n        this.indexA = -1;\n        this.indexB = -1;\n      }\n\n      return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function (t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function (t) {\n  return this.compute(false, t);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\nRevoluteJoint.TYPE = 'revolute-joint';\nJoint.TYPES[RevoluteJoint.TYPE] = RevoluteJoint;\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = Object.create(RevoluteJoint._super.prototype);\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n *\n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n *\n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle: 0.0,\n  upperAngle: 0.0,\n  maxMotorTorque: 0.0,\n  motorSpeed: 0.0,\n  enableLimit: false,\n  enableMotor: false\n};\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = RevoluteJoint.TYPE;\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor; // Solver temp\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n\n  this.m_mass = new Mat33(); // effective mass for motor/limit angular constraint.\n\n  this.m_motorMass; // float\n\n  this.m_limitState = inactiveLimit; // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nRevoluteJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    lowerAngle: this.m_lowerAngle,\n    upperAngle: this.m_upperAngle,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle\n  };\n};\n\nRevoluteJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RevoluteJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nRevoluteJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nRevoluteJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nRevoluteJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * Get the reference angle.\n */\n\n\nRevoluteJoint.prototype.getReferenceAngle = function () {\n  return this.m_referenceAngle;\n};\n/**\n * Get the current joint angle in radians.\n */\n\n\nRevoluteJoint.prototype.getJointAngle = function () {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n};\n/**\n * Get the current joint angle speed in radians per second.\n */\n\n\nRevoluteJoint.prototype.getJointSpeed = function () {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n};\n/**\n * Is the joint motor enabled?\n */\n\n\nRevoluteJoint.prototype.isMotorEnabled = function () {\n  return this.m_enableMotor;\n};\n/**\n * Enable/disable the joint motor.\n */\n\n\nRevoluteJoint.prototype.enableMotor = function (flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n};\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\n\n\nRevoluteJoint.prototype.getMotorTorque = function (inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n};\n/**\n * Set the motor speed in radians per second.\n */\n\n\nRevoluteJoint.prototype.setMotorSpeed = function (speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n};\n/**\n * Get the motor speed in radians per second.\n */\n\n\nRevoluteJoint.prototype.getMotorSpeed = function () {\n  return this.m_motorSpeed;\n};\n/**\n * Set the maximum motor torque, usually in N-m.\n */\n\n\nRevoluteJoint.prototype.setMaxMotorTorque = function (torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n};\n\nRevoluteJoint.prototype.getMaxMotorTorque = function () {\n  return this.m_maxMotorTorque;\n};\n/**\n * Is the joint limit enabled?\n */\n\n\nRevoluteJoint.prototype.isLimitEnabled = function () {\n  return this.m_enableLimit;\n};\n/**\n * Enable/disable the joint limit.\n */\n\n\nRevoluteJoint.prototype.enableLimit = function (flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n};\n/**\n * Get the lower joint limit in radians.\n */\n\n\nRevoluteJoint.prototype.getLowerLimit = function () {\n  return this.m_lowerAngle;\n};\n/**\n * Get the upper joint limit in radians.\n */\n\n\nRevoluteJoint.prototype.getUpperLimit = function () {\n  return this.m_upperAngle;\n};\n/**\n * Set the joint limits in radians.\n */\n\n\nRevoluteJoint.prototype.setLimits = function (lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n};\n\nRevoluteJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nRevoluteJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\n\n\nRevoluteJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\n\n\nRevoluteJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nRevoluteJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = iA + iB === 0.0; // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n  this.m_motorMass = iA + iB;\n\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n\n      this.m_limitState = atLowerLimit;\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n\n      this.m_limitState = atUpperLimit;\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nRevoluteJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = iA + iB === 0.0; // bool\n  // Solve motor constraint.\n\n  if (this.m_enableMotor && this.m_limitState != equalLimits && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  } // Solve limit constraint.\n\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nRevoluteJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var angularError = 0.0; // float\n\n  var positionError = 0.0; // float\n\n  var fixedRotation = this.m_invIA + this.m_invIB == 0.0; // bool\n  // Solve angular limit constraint.\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle, -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n\n      angularError = -C; // Prevent large angular corrections and allow some slop.\n\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection, 0.0);\n      limitImpulse = -this.m_motorMass * C;\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n\n      angularError = C; // Prevent large angular corrections and allow some slop.\n\n      C = Math.clamp(C - Settings.angularSlop, 0.0, Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  } // Solve point-to-point constraint.\n\n\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  return positionError <= Settings.linearSlop && angularError <= Settings.angularSlop;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\nPrismaticJoint.TYPE = 'prismatic-joint';\nJoint.TYPES[PrismaticJoint.TYPE] = PrismaticJoint;\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = Object.create(PrismaticJoint._super.prototype);\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit: false,\n  lowerTranslation: 0.0,\n  upperTranslation: 0.0,\n  enableMotor: false,\n  maxMotorForce: 0.0,\n  motorSpeed: 0.0\n};\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = PrismaticJoint.TYPE;\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0));\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero(); // Solver temp\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_axis, this.m_perp; // Vec2\n\n  this.m_s1, this.m_s2; // float\n\n  this.m_a1, this.m_a2; // float\n\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\nPrismaticJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    lowerTranslation: this.m_lowerTranslation,\n    upperTranslation: this.m_upperTranslation,\n    maxMotorForce: this.m_maxMotorForce,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n    referenceAngle: this.m_referenceAngle\n  };\n};\n\nPrismaticJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.localAxisA = Vec2(data.localAxisA);\n  var joint = new PrismaticJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nPrismaticJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nPrismaticJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nPrismaticJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * The local joint axis relative to bodyA.\n */\n\n\nPrismaticJoint.prototype.getLocalAxisA = function () {\n  return this.m_localXAxisA;\n};\n/**\n * Get the reference angle.\n */\n\n\nPrismaticJoint.prototype.getReferenceAngle = function () {\n  return this.m_referenceAngle;\n};\n/**\n * Get the current joint translation, usually in meters.\n */\n\n\nPrismaticJoint.prototype.getJointTranslation = function () {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n  var translation = Vec2.dot(d, axis);\n  return translation;\n};\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\n\n\nPrismaticJoint.prototype.getJointSpeed = function () {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n\n  var d = Vec2.sub(p2, p1); // Vec2\n\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n\n  var vB = bB.m_linearVelocity; // Vec2\n\n  var wA = bA.m_angularVelocity; // float\n\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis)) + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n\n  return speed;\n};\n/**\n * Is the joint limit enabled?\n */\n\n\nPrismaticJoint.prototype.isLimitEnabled = function () {\n  return this.m_enableLimit;\n};\n/**\n * Enable/disable the joint limit.\n */\n\n\nPrismaticJoint.prototype.enableLimit = function (flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n};\n/**\n * Get the lower joint limit, usually in meters.\n */\n\n\nPrismaticJoint.prototype.getLowerLimit = function () {\n  return this.m_lowerTranslation;\n};\n/**\n * Get the upper joint limit, usually in meters.\n */\n\n\nPrismaticJoint.prototype.getUpperLimit = function () {\n  return this.m_upperTranslation;\n};\n/**\n * Set the joint limits, usually in meters.\n */\n\n\nPrismaticJoint.prototype.setLimits = function (lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n};\n/**\n * Is the joint motor enabled?\n */\n\n\nPrismaticJoint.prototype.isMotorEnabled = function () {\n  return this.m_enableMotor;\n};\n/**\n * Enable/disable the joint motor.\n */\n\n\nPrismaticJoint.prototype.enableMotor = function (flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n};\n/**\n * Set the motor speed, usually in meters per second.\n */\n\n\nPrismaticJoint.prototype.setMotorSpeed = function (speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n};\n/**\n * Set the maximum motor force, usually in N.\n */\n\n\nPrismaticJoint.prototype.setMaxMotorForce = function (force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n};\n\nPrismaticJoint.prototype.getMaxMotorForce = function () {\n  return this.m_maxMotorForce;\n};\n/**\n * Get the motor speed, usually in meters per second.\n */\n\n\nPrismaticJoint.prototype.getMotorSpeed = function () {\n  return this.m_motorSpeed;\n};\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\n\n\nPrismaticJoint.prototype.getMotorForce = function (inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n};\n\nPrismaticJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nPrismaticJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nPrismaticJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n};\n\nPrismaticJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * this.m_impulse.y;\n};\n\nPrismaticJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB); // Compute the effective masses.\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n  var mA = this.m_invMassA,\n      mB = this.m_invMassB;\n  var iA = this.m_invIA,\n      iB = this.m_invIB; // Compute motor Jacobian and effective mass.\n\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } // Prismatic constraint.\n\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n    var s1test = Vec2.cross(rA, this.m_perp);\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  } // Compute motor and limit terms.\n\n  if (this.m_enableLimit) {\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nPrismaticJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // Solve linear motor constraint.\n\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    } // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n\n\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n    df = Vec3.sub(this.m_impulse, f1);\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n\n    var LA = df.x * this.m_s1 + df.y; // float\n\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nPrismaticJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // Compute fresh Jacobians\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n\n  var a2 = Vec2.cross(rB, axis); // float\n\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n  var linearError = Math.abs(C1.x); // float\n\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n  var active = false; // bool\n\n  var C2 = 0.0; // float\n\n  if (this.m_enableLimit) {\n    var translation = Vec2.dot(axis, d); // float\n\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop, -maxLinearCorrection, 0.0);\n      linearError = Math.max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0, maxLinearCorrection);\n      linearError = Math.max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n\n    var k12 = iA * s1 + iB * s2; // float\n\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n\n    var k22 = iA + iB; // float\n\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n\n    var k23 = iA * a1 + iB * a2; // float\n\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33();\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n\n    var k12 = iA * s1 + iB * s2; // float\n\n    var k22 = iA + iB; // float\n\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n  return linearError <= Settings.linearSlop && angularError <= Settings.angularSlop;\n};","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","/** @license React v16.7.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    A = n ? Symbol.for(\"react.memo\") : 60115,\n    B = n ? Symbol.for(\"react.lazy\") : 60116,\n    C = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction aa(a, b, e, c, d, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [e, c, d, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction D(a) {\n  for (var b = arguments.length - 1, e = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    e += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  aa(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", e);\n}\n\nvar E = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    F = {};\n\nfunction G(a, b, e) {\n  this.props = a;\n  this.context = b;\n  this.refs = F;\n  this.updater = e || E;\n}\n\nG.prototype.isReactComponent = {};\n\nG.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? D(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nG.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction H() {}\n\nH.prototype = G.prototype;\n\nfunction I(a, b, e) {\n  this.props = a;\n  this.context = b;\n  this.refs = F;\n  this.updater = e || E;\n}\n\nvar J = I.prototype = new H();\nJ.constructor = I;\nk(J, G.prototype);\nJ.isPureReactComponent = !0;\nvar K = {\n  current: null,\n  currentDispatcher: null\n},\n    L = Object.prototype.hasOwnProperty,\n    M = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction N(a, b, e) {\n  var c = void 0,\n      d = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    L.call(b, c) && !M.hasOwnProperty(c) && (d[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) d.children = e;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    d.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === d[c] && (d[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: d,\n    _owner: K.current\n  };\n}\n\nfunction ba(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction O(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar P = /\\/+/g,\n    Q = [];\n\nfunction R(a, b, e, c) {\n  if (Q.length) {\n    var d = Q.pop();\n    d.result = a;\n    d.keyPrefix = b;\n    d.func = e;\n    d.context = c;\n    d.count = 0;\n    return d;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: e,\n    context: c,\n    count: 0\n  };\n}\n\nfunction S(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > Q.length && Q.push(a);\n}\n\nfunction T(a, b, e, c) {\n  var d = typeof a;\n  if (\"undefined\" === d || \"boolean\" === d) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (d) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return e(c, a, \"\" === b ? \".\" + U(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    d = a[h];\n    var f = b + U(d, h);\n    g += T(d, f, e, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = C && a[C] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(d = a.next()).done;) {\n    d = d.value, f = b + U(d, h++), g += T(d, f, e, c);\n  } else \"object\" === d && (e = \"\" + a, D(\"31\", \"[object Object]\" === e ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : e, \"\"));\n  return g;\n}\n\nfunction V(a, b, e) {\n  return null == a ? 0 : T(a, \"\", b, e);\n}\n\nfunction U(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ca(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction da(a, b, e) {\n  var c = a.result,\n      d = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? W(a, c, e, function (a) {\n    return a;\n  }) : null != a && (O(a) && (a = ba(a, d + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(P, \"$&/\") + \"/\") + e)), c.push(a));\n}\n\nfunction W(a, b, e, c, d) {\n  var g = \"\";\n  null != e && (g = (\"\" + e).replace(P, \"$&/\") + \"/\");\n  b = R(b, g, c, d);\n  V(a, da, b);\n  S(b);\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, e) {\n      if (null == a) return a;\n      var c = [];\n      W(a, c, null, b, e);\n      return c;\n    },\n    forEach: function forEach(a, b, e) {\n      if (null == a) return a;\n      b = R(null, null, b, e);\n      V(a, ca, b);\n      S(b);\n    },\n    count: function count(a) {\n      return V(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      W(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      O(a) ? void 0 : D(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: G,\n  PureComponent: I,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: B,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: A,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: N,\n  cloneElement: function cloneElement(a, b, e) {\n    null === a || void 0 === a ? D(\"267\", a) : void 0;\n    var c = void 0,\n        d = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = K.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        L.call(b, c) && !M.hasOwnProperty(c) && (d[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) d.children = e;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      d.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: d,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = N.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: O,\n  version: \"16.7.0\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentOwner: K,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.7.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    ba = require(\"scheduler\");\n\nfunction ca(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var k = [c, d, e, f, g, h],\n          l = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return k[l++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction t(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : t(\"227\");\n\nfunction da(a, b, c, d, e, f, g, h, k) {\n  var l = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, l);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar ea = !1,\n    fa = null,\n    ha = !1,\n    ia = null,\n    ja = {\n  onError: function onError(a) {\n    ea = !0;\n    fa = a;\n  }\n};\n\nfunction ka(a, b, c, d, e, f, g, h, k) {\n  ea = !1;\n  fa = null;\n  da.apply(ja, arguments);\n}\n\nfunction la(a, b, c, d, e, f, g, h, k) {\n  ka.apply(this, arguments);\n\n  if (ea) {\n    if (ea) {\n      var l = fa;\n      ea = !1;\n      fa = null;\n    } else t(\"198\"), l = void 0;\n\n    ha || (ha = !0, ia = l);\n  }\n}\n\nvar ma = null,\n    na = {};\n\nfunction oa() {\n  if (ma) for (var a in na) {\n    var b = na[a],\n        c = ma.indexOf(a);\n    -1 < c ? void 0 : t(\"96\", a);\n\n    if (!pa[c]) {\n      b.extractEvents ? void 0 : t(\"97\", a);\n      pa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        qa.hasOwnProperty(h) ? t(\"99\", h) : void 0;\n        qa[h] = f;\n        var k = f.phasedRegistrationNames;\n\n        if (k) {\n          for (e in k) {\n            k.hasOwnProperty(e) && ra(k[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (ra(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : t(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction ra(a, b, c) {\n  sa[a] ? t(\"100\", a) : void 0;\n  sa[a] = b;\n  ta[a] = b.eventTypes[c].dependencies;\n}\n\nvar pa = [],\n    qa = {},\n    sa = {},\n    ta = {},\n    ua = null,\n    va = null,\n    wa = null;\n\nfunction xa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = wa(c);\n  la(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction ya(a, b) {\n  null == b ? t(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction za(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar Aa = null;\n\nfunction Ba(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      xa(a, b[d], c[d]);\n    } else b && xa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ca = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    ma ? t(\"101\") : void 0;\n    ma = Array.prototype.slice.call(a);\n    oa();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        na.hasOwnProperty(c) && na[c] === d || (na[c] ? t(\"102\", c) : void 0, na[c] = d, b = !0);\n      }\n    }\n\n    b && oa();\n  }\n};\n\nfunction Da(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ua(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? t(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Ea(a) {\n  null !== a && (Aa = ya(Aa, a));\n  a = Aa;\n  Aa = null;\n  if (a && (za(a, Ba), Aa ? t(\"95\") : void 0, ha)) throw a = ia, ha = !1, ia = null, a;\n}\n\nvar Fa = Math.random().toString(36).slice(2),\n    Ga = \"__reactInternalInstance$\" + Fa,\n    Ha = \"__reactEventHandlers$\" + Fa;\n\nfunction Ia(a) {\n  if (a[Ga]) return a[Ga];\n\n  for (; !a[Ga];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Ga];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ja(a) {\n  a = a[Ga];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ka(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  t(\"33\");\n}\n\nfunction La(a) {\n  return a[Ha] || null;\n}\n\nfunction Ma(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Na(a, b, c) {\n  if (b = Da(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = ya(c._dispatchListeners, b), c._dispatchInstances = ya(c._dispatchInstances, a);\n}\n\nfunction Oa(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = Ma(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Na(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Na(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Pa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Da(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = ya(c._dispatchListeners, b), c._dispatchInstances = ya(c._dispatchInstances, a));\n}\n\nfunction Qa(a) {\n  a && a.dispatchConfig.registrationName && Pa(a._targetInst, null, a);\n}\n\nfunction Ra(a) {\n  za(a, Oa);\n}\n\nvar Sa = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Ta(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ua = {\n  animationend: Ta(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Ta(\"Animation\", \"AnimationIteration\"),\n  animationstart: Ta(\"Animation\", \"AnimationStart\"),\n  transitionend: Ta(\"Transition\", \"TransitionEnd\")\n},\n    Va = {},\n    Wa = {};\nSa && (Wa = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ua.animationend.animation, delete Ua.animationiteration.animation, delete Ua.animationstart.animation), \"TransitionEvent\" in window || delete Ua.transitionend.transition);\n\nfunction Xa(a) {\n  if (Va[a]) return Va[a];\n  if (!Ua[a]) return a;\n  var b = Ua[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Wa) return Va[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Ya = Xa(\"animationend\"),\n    Za = Xa(\"animationiteration\"),\n    $a = Xa(\"animationstart\"),\n    ab = Xa(\"transitionend\"),\n    bb = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    cb = null,\n    eb = null,\n    fb = null;\n\nfunction gb() {\n  if (fb) return fb;\n  var a,\n      b = eb,\n      c = b.length,\n      d,\n      e = \"value\" in cb ? cb.value : cb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return fb = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction hb() {\n  return !0;\n}\n\nfunction ib() {\n  return !1;\n}\n\nfunction z(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? hb : ib;\n  this.isPropagationStopped = ib;\n  return this;\n}\n\nn(z.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = hb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = hb);\n  },\n  persist: function persist() {\n    this.isPersistent = hb;\n  },\n  isPersistent: ib,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = ib;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\nz.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nz.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  jb(c);\n  return c;\n};\n\njb(z);\n\nfunction kb(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction lb(a) {\n  a instanceof this ? void 0 : t(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction jb(a) {\n  a.eventPool = [];\n  a.getPooled = kb;\n  a.release = lb;\n}\n\nvar mb = z.extend({\n  data: null\n}),\n    nb = z.extend({\n  data: null\n}),\n    ob = [9, 13, 27, 32],\n    pb = Sa && \"CompositionEvent\" in window,\n    qb = null;\nSa && \"documentMode\" in document && (qb = document.documentMode);\nvar rb = Sa && \"TextEvent\" in window && !qb,\n    sb = Sa && (!pb || qb && 8 < qb && 11 >= qb),\n    tb = String.fromCharCode(32),\n    ub = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    vb = !1;\n\nfunction wb(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== ob.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction xb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar yb = !1;\n\nfunction zb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return xb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      vb = !0;\n      return tb;\n\n    case \"textInput\":\n      return a = b.data, a === tb && vb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction Ab(a, b) {\n  if (yb) return \"compositionend\" === a || !pb && wb(a, b) ? (a = gb(), fb = eb = cb = null, yb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return sb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar Bb = {\n  eventTypes: ub,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (pb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = ub.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = ub.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = ub.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else yb ? wb(a, c) && (e = ub.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = ub.compositionStart);\n    e ? (sb && \"ko\" !== c.locale && (yb || e !== ub.compositionStart ? e === ub.compositionEnd && yb && (f = gb()) : (cb = d, eb = \"value\" in cb ? cb.value : cb.textContent, yb = !0)), e = mb.getPooled(e, b, c, d), f ? e.data = f : (f = xb(c), null !== f && (e.data = f)), Ra(e), f = e) : f = null;\n    (a = rb ? zb(a, c) : Ab(a, c)) ? (b = nb.getPooled(ub.beforeInput, b, c, d), b.data = a, Ra(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Cb = null,\n    Db = null,\n    Eb = null;\n\nfunction Hb(a) {\n  if (a = va(a)) {\n    \"function\" !== typeof Cb ? t(\"280\") : void 0;\n    var b = ua(a.stateNode);\n    Cb(a.stateNode, a.type, b);\n  }\n}\n\nfunction Ib(a) {\n  Db ? Eb ? Eb.push(a) : Eb = [a] : Db = a;\n}\n\nfunction Jb() {\n  if (Db) {\n    var a = Db,\n        b = Eb;\n    Eb = Db = null;\n    Hb(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Hb(b[a]);\n    }\n  }\n}\n\nfunction Kb(a, b) {\n  return a(b);\n}\n\nfunction Lb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Mb() {}\n\nvar Nb = !1;\n\nfunction Ob(a, b) {\n  if (Nb) return a(b);\n  Nb = !0;\n\n  try {\n    return Kb(a, b);\n  } finally {\n    if (Nb = !1, null !== Db || null !== Eb) Mb(), Jb();\n  }\n}\n\nvar Pb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Qb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Pb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Rb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Sb(a) {\n  if (!Sa) return !1;\n  a = \"on\" + a;\n  var b = (a in document);\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Tb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Ub(a) {\n  var b = Tb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Vb(a) {\n  a._valueTracker || (a._valueTracker = Ub(a));\n}\n\nfunction Wb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Tb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Xb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n    Yb = /^(.*)[\\\\\\/]/,\n    D = \"function\" === typeof Symbol && Symbol.for,\n    Zb = D ? Symbol.for(\"react.element\") : 60103,\n    $b = D ? Symbol.for(\"react.portal\") : 60106,\n    ac = D ? Symbol.for(\"react.fragment\") : 60107,\n    bc = D ? Symbol.for(\"react.strict_mode\") : 60108,\n    cc = D ? Symbol.for(\"react.profiler\") : 60114,\n    dc = D ? Symbol.for(\"react.provider\") : 60109,\n    ec = D ? Symbol.for(\"react.context\") : 60110,\n    fc = D ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    gc = D ? Symbol.for(\"react.forward_ref\") : 60112,\n    hc = D ? Symbol.for(\"react.suspense\") : 60113,\n    ic = D ? Symbol.for(\"react.memo\") : 60115,\n    jc = D ? Symbol.for(\"react.lazy\") : 60116,\n    kc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction lc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = kc && a[kc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction mc(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case fc:\n      return \"ConcurrentMode\";\n\n    case ac:\n      return \"Fragment\";\n\n    case $b:\n      return \"Portal\";\n\n    case cc:\n      return \"Profiler\";\n\n    case bc:\n      return \"StrictMode\";\n\n    case hc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ec:\n      return \"Context.Consumer\";\n\n    case dc:\n      return \"Context.Provider\";\n\n    case gc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ic:\n      return mc(a.type);\n\n    case jc:\n      if (a = 1 === a._status ? a._result : null) return mc(a);\n  }\n  return null;\n}\n\nfunction nc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = mc(a.type);\n        c = null;\n        d && (c = mc(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Yb, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar oc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    pc = Object.prototype.hasOwnProperty,\n    qc = {},\n    rc = {};\n\nfunction sc(a) {\n  if (pc.call(rc, a)) return !0;\n  if (pc.call(qc, a)) return !1;\n  if (oc.test(a)) return rc[a] = !0;\n  qc[a] = !0;\n  return !1;\n}\n\nfunction tc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction uc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || tc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction E(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar F = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  F[a] = new E(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  F[b] = new E(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  F[a] = new E(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  F[a] = new E(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  F[a] = new E(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  F[a] = new E(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  F[a] = new E(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  F[a] = new E(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  F[a] = new E(a, 5, !1, a.toLowerCase(), null);\n});\nvar vc = /[\\-:]([a-z])/g;\n\nfunction wc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(vc, wc);\n  F[b] = new E(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(vc, wc);\n  F[b] = new E(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(vc, wc);\n  F[b] = new E(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\nF.tabIndex = new E(\"tabIndex\", 1, !1, \"tabindex\", null);\n\nfunction xc(a, b, c, d) {\n  var e = F.hasOwnProperty(b) ? F[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (uc(b, c, e, d) && (c = null), d || null === e ? sc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction yc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction zc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction Ac(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = yc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction Bc(a, b) {\n  b = b.checked;\n  null != b && xc(a, \"checked\", b, !1);\n}\n\nfunction Cc(a, b) {\n  Bc(a, b);\n  var c = yc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? Dc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && Dc(a, b.type, yc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ec(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction Dc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Fc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Gc(a, b, c) {\n  a = z.getPooled(Fc.change, a, b, c);\n  a.type = \"change\";\n  Ib(c);\n  Ra(a);\n  return a;\n}\n\nvar Jc = null,\n    Kc = null;\n\nfunction Lc(a) {\n  Ea(a);\n}\n\nfunction Mc(a) {\n  var b = Ka(a);\n  if (Wb(b)) return a;\n}\n\nfunction Nc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Oc = !1;\nSa && (Oc = Sb(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Pc() {\n  Jc && (Jc.detachEvent(\"onpropertychange\", Qc), Kc = Jc = null);\n}\n\nfunction Qc(a) {\n  \"value\" === a.propertyName && Mc(Kc) && (a = Gc(Kc, a, Rb(a)), Ob(Lc, a));\n}\n\nfunction Rc(a, b, c) {\n  \"focus\" === a ? (Pc(), Jc = b, Kc = c, Jc.attachEvent(\"onpropertychange\", Qc)) : \"blur\" === a && Pc();\n}\n\nfunction Sc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Mc(Kc);\n}\n\nfunction Tc(a, b) {\n  if (\"click\" === a) return Mc(b);\n}\n\nfunction Uc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Mc(b);\n}\n\nvar Vc = {\n  eventTypes: Fc,\n  _isInputEventSupported: Oc,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ka(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Nc : Qb(e) ? Oc ? f = Uc : (f = Sc, g = Rc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Tc);\n    if (f && (f = f(a, b))) return Gc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && Dc(e, \"number\", e.value);\n  }\n},\n    Wc = z.extend({\n  view: null,\n  detail: null\n}),\n    Xc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Yc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Xc[a]) ? !!b[a] : !1;\n}\n\nfunction Zc() {\n  return Yc;\n}\n\nvar $c = 0,\n    ad = 0,\n    bd = !1,\n    cd = !1,\n    dd = Wc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Zc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = $c;\n    $c = a.screenX;\n    return bd ? \"mousemove\" === a.type ? a.screenX - b : 0 : (bd = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = ad;\n    ad = a.screenY;\n    return cd ? \"mousemove\" === a.type ? a.screenY - b : 0 : (cd = !0, 0);\n  }\n}),\n    ed = dd.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    fd = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    gd = {\n  eventTypes: fd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ia(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        k = void 0,\n        l = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = dd, h = fd.mouseLeave, k = fd.mouseEnter, l = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = ed, h = fd.pointerLeave, k = fd.pointerEnter, l = \"pointer\";\n    var m = null == f ? e : Ka(f);\n    e = null == b ? e : Ka(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = l + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(k, b, c, d);\n    c.type = l + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      l = 0;\n\n      for (g = b; g; g = Ma(g)) {\n        l++;\n      }\n\n      g = 0;\n\n      for (k = e; k; k = Ma(k)) {\n        g++;\n      }\n\n      for (; 0 < l - g;) {\n        b = Ma(b), l--;\n      }\n\n      for (; 0 < g - l;) {\n        e = Ma(e), g--;\n      }\n\n      for (; l--;) {\n        if (b === e || b === e.alternate) break a;\n        b = Ma(b);\n        e = Ma(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      l = f.alternate;\n      if (null !== l && l === e) break;\n      b.push(f);\n      f = Ma(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      l = d.alternate;\n      if (null !== l && l === e) break;\n      f.push(d);\n      d = Ma(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Pa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Pa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n},\n    hd = Object.prototype.hasOwnProperty;\n\nfunction id(a, b) {\n  return a === b ? 0 !== a || 0 !== b || 1 / a === 1 / b : a !== a && b !== b;\n}\n\nfunction jd(a, b) {\n  if (id(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!hd.call(b, c[d]) || !id(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction kd(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction ld(a) {\n  2 !== kd(a) ? t(\"188\") : void 0;\n}\n\nfunction md(a) {\n  var b = a.alternate;\n  if (!b) return b = kd(a), 3 === b ? t(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return ld(e), a;\n        if (g === d) return ld(e), b;\n        g = g.sibling;\n      }\n\n      t(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : t(\"189\");\n      }\n    }\n    c.alternate !== d ? t(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? t(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction nd(a) {\n  a = md(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar od = z.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    pd = z.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    qd = Wc.extend({\n  relatedTarget: null\n});\n\nfunction rd(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar sd = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    td = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    ud = Wc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = sd[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = rd(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? td[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Zc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? rd(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? rd(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    vd = dd.extend({\n  dataTransfer: null\n}),\n    wd = Wc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Zc\n}),\n    xd = z.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    yd = dd.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    zd = [[\"abort\", \"abort\"], [Ya, \"animationEnd\"], [Za, \"animationIteration\"], [$a, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [ab, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    Ad = {},\n    Bd = {};\n\nfunction Cd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  Ad[a] = b;\n  Bd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  Cd(a, !0);\n});\nzd.forEach(function (a) {\n  Cd(a, !1);\n});\nvar Dd = {\n  eventTypes: Ad,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = Bd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = Bd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === rd(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = ud;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = qd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = dd;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = vd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = wd;\n        break;\n\n      case Ya:\n      case Za:\n      case $a:\n        a = od;\n        break;\n\n      case ab:\n        a = xd;\n        break;\n\n      case \"scroll\":\n        a = Wc;\n        break;\n\n      case \"wheel\":\n        a = yd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = pd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = ed;\n        break;\n\n      default:\n        a = z;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Ra(b);\n    return b;\n  }\n},\n    Ed = Dd.isInteractiveTopLevelEventType,\n    Fd = [];\n\nfunction Gd(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ia(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Rb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < pa.length; h++) {\n      var k = pa[h];\n      k && (k = k.extractEvents(d, b, f, e)) && (g = ya(g, k));\n    }\n\n    Ea(g);\n  }\n}\n\nvar Hd = !0;\n\nfunction H(a, b) {\n  if (!b) return null;\n  var c = (Ed(a) ? Id : Jd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Kd(a, b) {\n  if (!b) return null;\n  var c = (Ed(a) ? Id : Jd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Id(a, b) {\n  Lb(Jd, a, b);\n}\n\nfunction Jd(a, b) {\n  if (Hd) {\n    var c = Rb(b);\n    c = Ia(c);\n    null === c || \"number\" !== typeof c.tag || 2 === kd(c) || (c = null);\n\n    if (Fd.length) {\n      var d = Fd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Ob(Gd, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > Fd.length && Fd.push(a);\n    }\n  }\n}\n\nvar Ld = {},\n    Md = 0,\n    Nd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Od(a) {\n  Object.prototype.hasOwnProperty.call(a, Nd) || (a[Nd] = Md++, Ld[a[Nd]] = {});\n  return Ld[a[Nd]];\n}\n\nfunction Pd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Qd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Rd(a, b) {\n  var c = Qd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Qd(c);\n  }\n}\n\nfunction Sd(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Sd(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Td() {\n  for (var a = window, b = Pd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      a = b.contentDocument.defaultView;\n    } catch (c) {\n      break;\n    }\n\n    b = Pd(a.document);\n  }\n\n  return b;\n}\n\nfunction Ud(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nvar Vd = Sa && \"documentMode\" in document && 11 >= document.documentMode,\n    Wd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Xd = null,\n    Yd = null,\n    Zd = null,\n    $d = !1;\n\nfunction ae(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if ($d || null == Xd || Xd !== Pd(c)) return null;\n  c = Xd;\n  \"selectionStart\" in c && Ud(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Zd && jd(Zd, c) ? null : (Zd = c, a = z.getPooled(Wd.select, Yd, a, b), a.type = \"select\", a.target = Xd, Ra(a), a);\n}\n\nvar be = {\n  eventTypes: Wd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Od(e);\n        f = ta.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ka(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Qb(e) || \"true\" === e.contentEditable) Xd = e, Yd = b, Zd = null;\n        break;\n\n      case \"blur\":\n        Zd = Yd = Xd = null;\n        break;\n\n      case \"mousedown\":\n        $d = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return $d = !1, ae(c, d);\n\n      case \"selectionchange\":\n        if (Vd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return ae(c, d);\n    }\n\n    return null;\n  }\n};\nCa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nua = La;\nva = Ja;\nwa = Ka;\nCa.injectEventPluginsByName({\n  SimpleEventPlugin: Dd,\n  EnterLeaveEventPlugin: gd,\n  ChangeEventPlugin: Vc,\n  SelectEventPlugin: be,\n  BeforeInputEventPlugin: Bb\n});\n\nfunction de(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction ee(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = de(b.children)) a.children = b;\n  return a;\n}\n\nfunction fe(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + yc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction ge(a, b) {\n  null != b.dangerouslySetInnerHTML ? t(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction he(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? t(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : t(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: yc(c)\n  };\n}\n\nfunction ie(a, b) {\n  var c = yc(b.value),\n      d = yc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction je(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar ke = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction le(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction me(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? le(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ne = void 0,\n    oe = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== ke.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ne = ne || document.createElement(\"div\");\n    ne.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ne.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction pe(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar qe = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    re = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(qe).forEach(function (a) {\n  re.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    qe[b] = qe[a];\n  });\n});\n\nfunction se(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || qe.hasOwnProperty(a) && qe[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction te(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = se(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar ue = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction ve(a, b) {\n  b && (ue[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? t(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? t(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : t(\"61\")), null != b.style && \"object\" !== typeof b.style ? t(\"62\", \"\") : void 0);\n}\n\nfunction we(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction xe(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Od(a);\n  b = ta[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Kd(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Kd(\"focus\", a);\n          Kd(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Sb(e) && Kd(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === bb.indexOf(e) && H(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction ye() {}\n\nvar ze = null,\n    Ae = null;\n\nfunction Be(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction Ce(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar De = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    Ee = \"function\" === typeof clearTimeout ? clearTimeout : void 0;\n\nfunction Fe(a, b, c, d, e) {\n  a[Ha] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && Bc(a, e);\n  we(c, d);\n  d = we(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? te(a, h) : \"dangerouslySetInnerHTML\" === g ? oe(a, h) : \"children\" === g ? pe(a, h) : xc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      Cc(a, e);\n      break;\n\n    case \"textarea\":\n      ie(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? fe(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? fe(a, !!e.multiple, e.defaultValue, !0) : fe(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction Ge(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction He(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Ie = [],\n    Je = -1;\n\nfunction I(a) {\n  0 > Je || (a.current = Ie[Je], Ie[Je] = null, Je--);\n}\n\nfunction J(a, b) {\n  Je++;\n  Ie[Je] = a.current;\n  a.current = b;\n}\n\nvar Ke = {},\n    K = {\n  current: Ke\n},\n    L = {\n  current: !1\n},\n    Le = Ke;\n\nfunction Me(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return Ke;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction M(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ne(a) {\n  I(L, a);\n  I(K, a);\n}\n\nfunction Oe(a) {\n  I(L, a);\n  I(K, a);\n}\n\nfunction Pe(a, b, c) {\n  K.current !== Ke ? t(\"168\") : void 0;\n  J(K, b, a);\n  J(L, c, a);\n}\n\nfunction Qe(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : t(\"108\", mc(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Re(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || Ke;\n  Le = K.current;\n  J(K, b, a);\n  J(L, L.current, a);\n  return !0;\n}\n\nfunction Se(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : t(\"169\");\n  c ? (b = Qe(a, b, Le), d.__reactInternalMemoizedMergedChildContext = b, I(L, a), I(K, a), J(K, b, a)) : I(L, a);\n  J(L, c, a);\n}\n\nvar Te = null,\n    Ue = null;\n\nfunction Ve(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction We(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Te = Ve(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Ue = Ve(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Xe(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.firstContextDependency = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction N(a, b, c, d) {\n  return new Xe(a, b, c, d);\n}\n\nfunction Ye(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction Ze(a) {\n  if (\"function\" === typeof a) return Ye(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === gc) return 11;\n    if (a === ic) return 14;\n  }\n\n  return 2;\n}\n\nfunction $e(a, b) {\n  var c = a.alternate;\n  null === c ? (c = N(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.firstContextDependency = a.firstContextDependency;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction af(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ye(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case ac:\n      return bf(c.children, e, f, b);\n\n    case fc:\n      return cf(c, e | 3, f, b);\n\n    case bc:\n      return cf(c, e | 2, f, b);\n\n    case cc:\n      return a = N(12, c, b, e | 4), a.elementType = cc, a.type = cc, a.expirationTime = f, a;\n\n    case hc:\n      return a = N(13, c, b, e), a.elementType = hc, a.type = hc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case dc:\n          g = 10;\n          break a;\n\n        case ec:\n          g = 9;\n          break a;\n\n        case gc:\n          g = 11;\n          break a;\n\n        case ic:\n          g = 14;\n          break a;\n\n        case jc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      t(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = N(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction bf(a, b, c, d) {\n  a = N(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction cf(a, b, c, d) {\n  a = N(8, a, d, b);\n  b = 0 === (b & 1) ? bc : fc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction df(a, b, c) {\n  a = N(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction ef(a, b, c) {\n  b = N(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  gf(b, a);\n}\n\nfunction hf(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  gf(b, a);\n}\n\nfunction jf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction gf(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nvar kf = !1;\n\nfunction lf(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction mf(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: 0,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction of(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = lf(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = lf(a.memoizedState), e = c.updateQueue = lf(c.memoizedState)) : d = a.updateQueue = mf(e) : null === e && (e = c.updateQueue = mf(d));\n\n  null === e || d === e ? of(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (of(d, b), of(e, b)) : (of(d, b), e.lastUpdate = b);\n}\n\nfunction qf(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = lf(a.memoizedState) : rf(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction rf(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = mf(b));\n  return b;\n}\n\nfunction sf(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case 1:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case 3:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case 0:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case 2:\n      kf = !0;\n  }\n\n  return d;\n}\n\nfunction tf(a, b, c, d, e) {\n  kf = !1;\n  b = rf(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, k = b.firstUpdate, l = f; null !== k;) {\n    var m = k.expirationTime;\n    m < e ? (null === g && (g = k, f = l), h < m && (h = m)) : (l = sf(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = k : (b.lastEffect.nextEffect = k, b.lastEffect = k)));\n    k = k.next;\n  }\n\n  m = null;\n\n  for (k = b.firstCapturedUpdate; null !== k;) {\n    var r = k.expirationTime;\n    r < e ? (null === m && (m = k, null === g && (f = l)), h < r && (h = r)) : (l = sf(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = k : (b.lastCapturedEffect.nextEffect = k, b.lastCapturedEffect = k)));\n    k = k.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = l);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = l;\n}\n\nfunction uf(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  vf(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  vf(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction vf(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? t(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction wf(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: nc(b)\n  };\n}\n\nvar xf = {\n  current: null\n},\n    yf = null,\n    zf = null,\n    Af = null;\n\nfunction Bf(a, b) {\n  var c = a.type._context;\n  J(xf, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Cf(a) {\n  var b = xf.current;\n  I(xf, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Df(a) {\n  yf = a;\n  Af = zf = null;\n  a.firstContextDependency = null;\n}\n\nfunction Ef(a, b) {\n  if (Af !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Af = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === zf ? (null === yf ? t(\"293\") : void 0, yf.firstContextDependency = zf = b) : zf = zf.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar Ff = {},\n    O = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? t(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  J(Hf, b, a);\n  J(Gf, a, a);\n  J(O, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : me(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = me(b, c);\n  }\n\n  I(O, a);\n  J(O, b, a);\n}\n\nfunction Kf(a) {\n  I(O, a);\n  I(Gf, a);\n  I(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(O.current);\n  var c = me(b, a.type);\n  b !== c && (J(Gf, a, a), J(O, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (I(O, a), I(Gf, a));\n}\n\nfunction P(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction Nf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      throw a._status = 0, b = a._ctor, b = b(), b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      }), a._result = b, b;\n  }\n}\n\nvar Of = Xb.ReactCurrentOwner,\n    Pf = new aa.Component().refs;\n\nfunction Qf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar Vf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === kd(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = Rf();\n    d = Sf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    Tf();\n    pf(a, e);\n    Uf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = Rf();\n    d = Sf(d, a);\n    var e = nf(d);\n    e.tag = 1;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    Tf();\n    pf(a, e);\n    Uf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = Rf();\n    c = Sf(c, a);\n    var d = nf(c);\n    d.tag = 2;\n    void 0 !== b && null !== b && (d.callback = b);\n    Tf();\n    pf(a, d);\n    Uf(a, c);\n  }\n};\n\nfunction Wf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !jd(c, d) || !jd(e, f) : !0;\n}\n\nfunction Xf(a, b, c) {\n  var d = !1,\n      e = Ke;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = Of.currentDispatcher.readContext(f) : (e = M(b) ? Le : K.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Me(a, e) : Ke);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = Vf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction Zf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && Vf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction $f(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = Pf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = Of.currentDispatcher.readContext(f) : (f = M(b) ? Le : K.current, e.context = Me(a, f));\n  f = a.updateQueue;\n  null !== f && (tf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (Qf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Vf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (tf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar ag = Array.isArray;\n\nfunction bg(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? t(\"289\") : void 0, d = c.stateNode);\n      d ? void 0 : t(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === Pf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? t(\"284\") : void 0;\n    c._owner ? void 0 : t(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction cg(a, b) {\n  \"textarea\" !== a.type && t(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction dg(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = $e(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = df(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function k(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = bg(a, b, c), d.return = a, d;\n    d = af(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = bg(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function l(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = ef(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, g) {\n    if (null === b || 7 !== b.tag) return b = bf(c, a.mode, d, g), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function r(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = df(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Zb:\n          return c = af(b.type, b.key, b.props, null, a.mode, c), c.ref = bg(a, null, b), c.return = a, c;\n\n        case $b:\n          return b = ef(b, a.mode, c), b.return = a, b;\n      }\n\n      if (ag(b) || lc(b)) return b = bf(b, a.mode, c, null), b.return = a, b;\n      cg(a, b);\n    }\n\n    return null;\n  }\n\n  function w(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Zb:\n          return c.key === e ? c.type === ac ? m(a, b, c.props.children, d, e) : k(a, b, c, d) : null;\n\n        case $b:\n          return c.key === e ? l(a, b, c, d) : null;\n      }\n\n      if (ag(c) || lc(c)) return null !== e ? null : m(a, b, c, d, null);\n      cg(a, c);\n    }\n\n    return null;\n  }\n\n  function y(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Zb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === ac ? m(b, a, d.props.children, e, d.key) : k(b, a, d, e);\n\n        case $b:\n          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);\n      }\n\n      if (ag(d) || lc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      cg(b, d);\n    }\n\n    return null;\n  }\n\n  function B(e, g, h, k) {\n    for (var l = null, q = null, m = g, u = g = 0, p = null; null !== m && u < h.length; u++) {\n      m.index > u ? (p = m, m = null) : p = m.sibling;\n      var v = w(e, m, h[u], k);\n\n      if (null === v) {\n        null === m && (m = p);\n        break;\n      }\n\n      a && m && null === v.alternate && b(e, m);\n      g = f(v, g, u);\n      null === q ? l = v : q.sibling = v;\n      q = v;\n      m = p;\n    }\n\n    if (u === h.length) return c(e, m), l;\n\n    if (null === m) {\n      for (; u < h.length; u++) {\n        if (m = r(e, h[u], k)) g = f(m, g, u), null === q ? l = m : q.sibling = m, q = m;\n      }\n\n      return l;\n    }\n\n    for (m = d(e, m); u < h.length; u++) {\n      if (p = y(m, e, u, h[u], k)) a && null !== p.alternate && m.delete(null === p.key ? u : p.key), g = f(p, g, u), null === q ? l = p : q.sibling = p, q = p;\n    }\n\n    a && m.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = lc(h);\n    \"function\" !== typeof l ? t(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? t(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, p = null, v = h.next(); null !== q && !v.done; u++, v = h.next()) {\n      q.index > u ? (p = q, q = null) : p = q.sibling;\n      var A = w(e, q, v.value, k);\n\n      if (null === A) {\n        q || (q = p);\n        break;\n      }\n\n      a && q && null === A.alternate && b(e, q);\n      g = f(A, g, u);\n      null === m ? l = A : m.sibling = A;\n      m = A;\n      q = p;\n    }\n\n    if (v.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !v.done; u++, v = h.next()) {\n        v = r(e, v.value, k), null !== v && (g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !v.done; u++, v = h.next()) {\n      v = y(q, e, u, v.value, k), null !== v && (a && null !== v.alternate && q.delete(null === v.key ? u : v.key), g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === ac && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Zb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === ac : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === ac ? f.props.children : f.props, h);\n                d.ref = bg(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === ac ? (d = bf(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = af(f.type, f.key, f.props, null, a.mode, h), h.ref = bg(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case $b:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = ef(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = df(f, a.mode, h), d.return = a, a = d), g(a);\n    if (ag(f)) return B(a, d, f, h);\n    if (lc(f)) return R(a, d, f, h);\n    l && cg(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, t(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar eg = dg(!0),\n    fg = dg(!1),\n    gg = null,\n    hg = null,\n    ig = !1;\n\nfunction jg(a, b) {\n  var c = N(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction kg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction lg(a) {\n  if (ig) {\n    var b = hg;\n\n    if (b) {\n      var c = b;\n\n      if (!kg(a, b)) {\n        b = Ge(c);\n\n        if (!b || !kg(a, b)) {\n          a.effectTag |= 2;\n          ig = !1;\n          gg = a;\n          return;\n        }\n\n        jg(gg, c);\n      }\n\n      gg = a;\n      hg = He(b);\n    } else a.effectTag |= 2, ig = !1, gg = a;\n  }\n}\n\nfunction mg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag;) {\n    a = a.return;\n  }\n\n  gg = a;\n}\n\nfunction ng(a) {\n  if (a !== gg) return !1;\n  if (!ig) return mg(a), ig = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !Ce(b, a.memoizedProps)) for (b = hg; b;) {\n    jg(a, b), b = Ge(b);\n  }\n  mg(a);\n  hg = gg ? Ge(a.stateNode) : null;\n  return !0;\n}\n\nfunction og() {\n  hg = gg = null;\n  ig = !1;\n}\n\nvar pg = Xb.ReactCurrentOwner;\n\nfunction Q(a, b, c, d) {\n  b.child = null === a ? fg(b, null, c, d) : eg(b, a.child, c, d);\n}\n\nfunction qg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Df(b, e);\n  d = c(d, f);\n  b.effectTag |= 1;\n  Q(a, b, d, e);\n  return b.child;\n}\n\nfunction rg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ye(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, sg(a, b, g, d, e, f);\n    a = af(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : jd, c(e, d) && a.ref === b.ref)) return tg(a, b, f);\n  b.effectTag |= 1;\n  a = $e(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction sg(a, b, c, d, e, f) {\n  return null !== a && e < f && jd(a.memoizedProps, d) && a.ref === b.ref ? tg(a, b, f) : ug(a, b, c, d, f);\n}\n\nfunction vg(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction ug(a, b, c, d, e) {\n  var f = M(c) ? Le : K.current;\n  f = Me(b, f);\n  Df(b, e);\n  c = c(d, f);\n  b.effectTag |= 1;\n  Q(a, b, c, e);\n  return b.child;\n}\n\nfunction wg(a, b, c, d, e) {\n  if (M(c)) {\n    var f = !0;\n    Re(b);\n  } else f = !1;\n\n  Df(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), Xf(b, c, d, e), $f(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var k = g.context,\n        l = c.contextType;\n    \"object\" === typeof l && null !== l ? l = Of.currentDispatcher.readContext(l) : (l = M(c) ? Le : K.current, l = Me(b, l));\n    var m = c.getDerivedStateFromProps,\n        r = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    r || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zf(b, g, d, l);\n    kf = !1;\n    var w = b.memoizedState;\n    k = g.state = w;\n    var y = b.updateQueue;\n    null !== y && (tf(b, y, d, g, e), k = b.memoizedState);\n    h !== d || w !== k || L.current || kf ? (\"function\" === typeof m && (Qf(b, c, m, d), k = b.memoizedState), (h = kf || Wf(b, c, h, d, w, k, l)) ? (r || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : P(b.type, h), k = g.context, l = c.contextType, \"object\" === typeof l && null !== l ? l = Of.currentDispatcher.readContext(l) : (l = M(c) ? Le : K.current, l = Me(b, l)), m = c.getDerivedStateFromProps, (r = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zf(b, g, d, l), kf = !1, k = b.memoizedState, w = g.state = k, y = b.updateQueue, null !== y && (tf(b, y, d, g, e), w = b.memoizedState), h !== d || k !== w || L.current || kf ? (\"function\" === typeof m && (Qf(b, c, m, d), w = b.memoizedState), (m = kf || Wf(b, c, h, d, k, w, l)) ? (r || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, w, l), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, w, l)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = w), g.props = d, g.state = w, g.context = l, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return xg(a, b, c, d, f, e);\n}\n\nfunction xg(a, b, c, d, e, f) {\n  vg(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Se(b, c, !1), tg(a, b, f);\n  d = b.stateNode;\n  pg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = eg(b, a.child, null, f), b.child = eg(b, null, h, f)) : Q(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Se(b, c, !0);\n  return b.child;\n}\n\nfunction yg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Pe(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Pe(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction zg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = bf(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = bf(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = fg(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = $e(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = $e(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = eg(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = bf(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = bf(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = eg(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction tg(a, b, c) {\n  null !== a && (b.firstContextDependency = a.firstContextDependency);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? t(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = $e(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = $e(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Ag(a, b, c) {\n  var d = b.expirationTime;\n\n  if (null !== a && a.memoizedProps === b.pendingProps && !L.current && d < c) {\n    switch (b.tag) {\n      case 3:\n        yg(b);\n        og();\n        break;\n\n      case 5:\n        Lf(b);\n        break;\n\n      case 1:\n        M(b.type) && Re(b);\n        break;\n\n      case 4:\n        Jf(b, b.stateNode.containerInfo);\n        break;\n\n      case 10:\n        Bf(b, b.memoizedProps.value);\n        break;\n\n      case 13:\n        if (null !== b.memoizedState) {\n          d = b.child.childExpirationTime;\n          if (0 !== d && d >= c) return zg(a, b, c);\n          b = tg(a, b, c);\n          return null !== b ? b.sibling : null;\n        }\n\n    }\n\n    return tg(a, b, c);\n  }\n\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Me(b, K.current);\n      Df(b, c);\n      e = d(a, e);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n\n        if (M(d)) {\n          var f = !0;\n          Re(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && Qf(b, d, g, a);\n        e.updater = Vf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        $f(b, d, a, c);\n        b = xg(null, b, d, !0, f, c);\n      } else b.tag = 0, Q(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = Nf(e);\n      b.type = a;\n      e = b.tag = Ze(a);\n      f = P(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = ug(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = wg(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = qg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = rg(null, b, a, P(a.type, f), d, c);\n          break;\n\n        default:\n          t(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), ug(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), wg(a, b, d, e, c);\n\n    case 3:\n      yg(b);\n      d = b.updateQueue;\n      null === d ? t(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      tf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) og(), b = tg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) hg = He(b.stateNode.containerInfo), gg = b, e = ig = !0;\n        e ? (b.effectTag |= 2, b.child = fg(b, null, d, c)) : (Q(a, b, d, c), og());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && lg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ce(d, e) ? g = null : null !== f && Ce(d, f) && (b.effectTag |= 16), vg(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = 1, b = null) : (Q(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && lg(b), null;\n\n    case 13:\n      return zg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = eg(b, null, d, c) : Q(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), qg(a, b, d, e, c);\n\n    case 7:\n      return Q(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return Q(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return Q(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Bf(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = h === f && (0 !== h || 1 / h === 1 / f) || h !== h && f !== f ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !L.current) {\n              b = tg(a, b, c);\n              break a;\n            }\n          } else for (g = b.child, null !== g && (g.return = b); null !== g;) {\n            h = g.firstContextDependency;\n\n            if (null !== h) {\n              do {\n                if (h.context === d && 0 !== (h.observedBits & f)) {\n                  if (1 === g.tag) {\n                    var k = nf(c);\n                    k.tag = 2;\n                    pf(g, k);\n                  }\n\n                  g.expirationTime < c && (g.expirationTime = c);\n                  k = g.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n\n                  for (var l = g.return; null !== l;) {\n                    k = l.alternate;\n                    if (l.childExpirationTime < c) l.childExpirationTime = c, null !== k && k.childExpirationTime < c && (k.childExpirationTime = c);else if (null !== k && k.childExpirationTime < c) k.childExpirationTime = c;else break;\n                    l = l.return;\n                  }\n                }\n\n                k = g.child;\n                h = h.next;\n              } while (null !== h);\n            } else k = 10 === g.tag ? g.type === b.type ? null : g.child : g.child;\n\n            if (null !== k) k.return = g;else for (k = g; null !== k;) {\n              if (k === b) {\n                k = null;\n                break;\n              }\n\n              g = k.sibling;\n\n              if (null !== g) {\n                g.return = k.return;\n                k = g;\n                break;\n              }\n\n              k = k.return;\n            }\n            g = k;\n          }\n        }\n\n        Q(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Df(b, c), e = Ef(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, Q(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = P(e, b.pendingProps), f = P(e.type, f), rg(a, b, e, f, d, c);\n\n    case 15:\n      return sg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, M(d) ? (a = !0, Re(b)) : a = !1, Df(b, c), Xf(b, d, e, c), $f(b, d, e, c), xg(null, b, d, !0, a, c);\n\n    default:\n      t(\"156\");\n  }\n}\n\nfunction Bg(a) {\n  a.effectTag |= 4;\n}\n\nvar Cg = void 0,\n    Gg = void 0,\n    Hg = void 0,\n    Ig = void 0;\n\nCg = function Cg(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nGg = function Gg() {};\n\nHg = function Hg(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(O.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = zc(g, f);\n        d = zc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = ee(g, f);\n        d = ee(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = ge(g, f);\n        d = ge(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = ye);\n    }\n\n    ve(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var k = f[c];\n\n        for (g in k) {\n          k.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (sa.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var l = d[c];\n      k = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && l !== k && (null != l || null != k)) if (\"style\" === c) {\n        if (k) {\n          for (g in k) {\n            !k.hasOwnProperty(g) || l && l.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in l) {\n            l.hasOwnProperty(g) && k[g] !== l[g] && (h || (h = {}), h[g] = l[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = l;\n      } else \"dangerouslySetInnerHTML\" === c ? (l = l ? l.__html : void 0, k = k ? k.__html : void 0, null != l && k !== l && (a = a || []).push(c, \"\" + l)) : \"children\" === c ? k === l || \"string\" !== typeof l && \"number\" !== typeof l || (a = a || []).push(c, \"\" + l) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (sa.hasOwnProperty(c) ? (null != l && xe(e, c), a || k === l || (a = [])) : (a = a || []).push(c, l));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && Bg(b);\n  }\n};\n\nIg = function Ig(a, b, c, d) {\n  c !== d && Bg(b);\n};\n\nvar Jg = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction Kg(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = nc(c));\n  null !== c && mc(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && mc(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction Lg(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    Mg(a, c);\n  } else b.current = null;\n}\n\nfunction Ng(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = se(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction Og(a) {\n  \"function\" === typeof Ue && Ue(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (null !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              Mg(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      Lg(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        Mg(a, f);\n      }\n      break;\n\n    case 5:\n      Lg(a);\n      break;\n\n    case 4:\n      Pg(a);\n  }\n}\n\nfunction Qg(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction Rg(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (Qg(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    t(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      t(\"161\");\n  }\n\n  c.effectTag & 16 && (pe(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || Qg(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = ye)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction Pg(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? t(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (Og(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag ? (d = b.stateNode.containerInfo, e = !0) : Og(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction Sg(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Fe(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? t(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = Rf()));\n      null !== a && Ng(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new Jg());\n        c.forEach(function (a) {\n          var c = Tg.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      t(\"163\");\n  }\n}\n\nvar Ug = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Vg(a, b, c) {\n  c = nf(c);\n  c.tag = 3;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Wg(d);\n    Kg(a, b);\n  };\n\n  return c;\n}\n\nfunction Xg(a, b, c) {\n  c = nf(c);\n  c.tag = 3;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Yg ? Yg = new Set([this]) : Yg.add(this));\n    var c = b.value,\n        e = b.stack;\n    Kg(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Zg(a) {\n  switch (a.tag) {\n    case 1:\n      M(a.type) && Ne(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Oe(a), b = a.effectTag, 0 !== (b & 64) ? t(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Cf(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar $g = {\n  readContext: Ef\n},\n    ah = Xb.ReactCurrentOwner,\n    bh = 1073741822,\n    ch = 0,\n    dh = !1,\n    S = null,\n    T = null,\n    U = 0,\n    eh = -1,\n    fh = !1,\n    V = null,\n    gh = !1,\n    hh = null,\n    ih = null,\n    Yg = null;\n\nfunction jh() {\n  if (null !== S) for (var a = S.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ne(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Oe(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Cf(b);\n    }\n\n    a = a.return;\n  }\n  T = null;\n  U = 0;\n  eh = -1;\n  fh = !1;\n  S = null;\n}\n\nfunction Tf() {\n  null !== ih && (ba.unstable_cancelCallback(hh), ih());\n}\n\nfunction kh(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      S = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            M(b.type) && Ne(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Oe(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) ng(b), b.effectTag &= -3;\n            Gg(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) Hg(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var k = If(O.current);\n\n              if (ng(b)) {\n                g = b;\n                e = g.stateNode;\n                var l = g.type,\n                    m = g.memoizedProps,\n                    r = h;\n                e[Ga] = g;\n                e[Ha] = m;\n                f = void 0;\n                h = l;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    H(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (l = 0; l < bb.length; l++) {\n                      H(bb[l], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    H(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    H(\"error\", e);\n                    H(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    H(\"reset\", e);\n                    H(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    H(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    Ac(e, m);\n                    H(\"invalid\", e);\n                    xe(r, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    H(\"invalid\", e);\n                    xe(r, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    he(e, m), H(\"invalid\", e), xe(r, \"onChange\");\n                }\n\n                ve(h, m);\n                l = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (k = m[f], \"children\" === f ? \"string\" === typeof k ? e.textContent !== k && (l = [\"children\", k]) : \"number\" === typeof k && e.textContent !== \"\" + k && (l = [\"children\", \"\" + k]) : sa.hasOwnProperty(f) && null != k && xe(r, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Vb(e);\n                    Ec(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Vb(e);\n                    je(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = ye);\n                }\n\n                f = l;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && Bg(b);\n              } else {\n                m = b;\n                e = f;\n                r = g;\n                l = 9 === h.nodeType ? h : h.ownerDocument;\n                k === ke.html && (k = le(e));\n                k === ke.html ? \"script\" === e ? (e = l.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", l = e.removeChild(e.firstChild)) : \"string\" === typeof r.is ? l = l.createElement(e, {\n                  is: r.is\n                }) : (l = l.createElement(e), \"select\" === e && r.multiple && (l.multiple = !0)) : l = l.createElementNS(k, e);\n                e = l;\n                e[Ga] = m;\n                e[Ha] = g;\n                Cg(e, b, !1, !1);\n                r = e;\n                l = f;\n                m = g;\n                var w = h,\n                    y = we(l, m);\n\n                switch (l) {\n                  case \"iframe\":\n                  case \"object\":\n                    H(\"load\", r);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < bb.length; h++) {\n                      H(bb[h], r);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    H(\"error\", r);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    H(\"error\", r);\n                    H(\"load\", r);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    H(\"reset\", r);\n                    H(\"submit\", r);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    H(\"toggle\", r);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    Ac(r, m);\n                    h = zc(r, m);\n                    H(\"invalid\", r);\n                    xe(w, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = ee(r, m);\n                    break;\n\n                  case \"select\":\n                    r._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    H(\"invalid\", r);\n                    xe(w, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    he(r, m);\n                    h = ge(r, m);\n                    H(\"invalid\", r);\n                    xe(w, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                ve(l, h);\n                k = void 0;\n                var B = l,\n                    R = r,\n                    v = h;\n\n                for (k in v) {\n                  if (v.hasOwnProperty(k)) {\n                    var q = v[k];\n                    \"style\" === k ? te(R, q) : \"dangerouslySetInnerHTML\" === k ? (q = q ? q.__html : void 0, null != q && oe(R, q)) : \"children\" === k ? \"string\" === typeof q ? (\"textarea\" !== B || \"\" !== q) && pe(R, q) : \"number\" === typeof q && pe(R, \"\" + q) : \"suppressContentEditableWarning\" !== k && \"suppressHydrationWarning\" !== k && \"autoFocus\" !== k && (sa.hasOwnProperty(k) ? null != q && xe(w, k) : null != q && xc(R, k, q, y));\n                  }\n                }\n\n                switch (l) {\n                  case \"input\":\n                    Vb(r);\n                    Ec(r, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Vb(r);\n                    je(r, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && r.setAttribute(\"value\", \"\" + yc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = r;\n                    h.multiple = !!m.multiple;\n                    r = m.value;\n                    null != r ? fe(h, !!m.multiple, r, !1) : null != m.defaultValue && fe(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (r.onclick = ye);\n                }\n\n                (g = Be(f, g)) && Bg(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? t(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? Ig(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? t(\"166\") : void 0), e = If(Hf.current), If(O.current), ng(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Ga] = g, (g = f.nodeValue !== e) && Bg(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Ga] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              S = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g !== f || 0 === (b.effectTag & 1) && g) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            Gg(b);\n            break;\n\n          case 10:\n            Cf(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            M(b.type) && Ne(b);\n            break;\n\n          default:\n            t(\"156\");\n        }\n\n        S = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== S) return S;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Zg(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction lh(a) {\n  var b = Ag(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = kh(a));\n  ah.current = null;\n  return b;\n}\n\nfunction mh(a, b) {\n  dh ? t(\"243\") : void 0;\n  Tf();\n  dh = !0;\n  ah.currentDispatcher = $g;\n  var c = a.nextExpirationTimeToWorkOn;\n  if (c !== U || a !== T || null === S) jh(), T = a, U = c, S = $e(T.current, null, U), a.pendingCommitExpirationTime = 0;\n  var d = !1;\n\n  do {\n    try {\n      if (b) for (; null !== S && !nh();) {\n        S = lh(S);\n      } else for (; null !== S;) {\n        S = lh(S);\n      }\n    } catch (B) {\n      if (Af = zf = yf = null, null === S) d = !0, Wg(B);else {\n        null === S ? t(\"271\") : void 0;\n        var e = S,\n            f = e.return;\n        if (null === f) d = !0, Wg(B);else {\n          a: {\n            var g = a,\n                h = f,\n                k = e,\n                l = B;\n            f = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== l && \"object\" === typeof l && \"function\" === typeof l.then) {\n              var m = l;\n              l = h;\n              var r = -1,\n                  w = -1;\n\n              do {\n                if (13 === l.tag) {\n                  var y = l.alternate;\n\n                  if (null !== y && (y = y.memoizedState, null !== y)) {\n                    w = 10 * (1073741822 - y.timedOutAt);\n                    break;\n                  }\n\n                  y = l.pendingProps.maxDuration;\n                  if (\"number\" === typeof y) if (0 >= y) r = 0;else if (-1 === r || y < r) r = y;\n                }\n\n                l = l.return;\n              } while (null !== l);\n\n              l = h;\n\n              do {\n                if (y = 13 === l.tag) y = void 0 === l.memoizedProps.fallback ? !1 : null === l.memoizedState;\n\n                if (y) {\n                  h = l.updateQueue;\n                  null === h ? l.updateQueue = new Set([m]) : h.add(m);\n\n                  if (0 === (l.mode & 1)) {\n                    l.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (f = nf(1073741823), f.tag = 2, pf(k, f)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = g.pingCache;\n                  null === k ? (k = g.pingCache = new Ug(), h = new Set(), k.set(m, h)) : (h = k.get(m), void 0 === h && (h = new Set(), k.set(m, h)));\n                  h.has(f) || (h.add(f), k = oh.bind(null, g, m, f), m.then(k, k));\n                  -1 === r ? g = 1073741823 : (-1 === w && (w = 10 * (1073741822 - jf(g, f)) - 5E3), g = w + r);\n                  0 <= g && eh < g && (eh = g);\n                  l.effectTag |= 2048;\n                  l.expirationTime = f;\n                  break a;\n                }\n\n                l = l.return;\n              } while (null !== l);\n\n              l = Error((mc(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + nc(k));\n            }\n\n            fh = !0;\n            l = wf(l, k);\n            g = h;\n\n            do {\n              switch (g.tag) {\n                case 3:\n                  g.effectTag |= 2048;\n                  g.expirationTime = f;\n                  f = Vg(g, l, f);\n                  qf(g, f);\n                  break a;\n\n                case 1:\n                  if (m = l, r = g.type, w = g.stateNode, 0 === (g.effectTag & 64) && (\"function\" === typeof r.getDerivedStateFromError || null !== w && \"function\" === typeof w.componentDidCatch && (null === Yg || !Yg.has(w)))) {\n                    g.effectTag |= 2048;\n                    g.expirationTime = f;\n                    f = Xg(g, m, f);\n                    qf(g, f);\n                    break a;\n                  }\n\n              }\n\n              g = g.return;\n            } while (null !== g);\n          }\n\n          S = kh(e);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  dh = !1;\n  Af = zf = yf = ah.currentDispatcher = null;\n  if (d) T = null, a.finishedWork = null;else if (null !== S) a.finishedWork = null;else {\n    d = a.current.alternate;\n    null === d ? t(\"281\") : void 0;\n    T = null;\n\n    if (fh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < c || 0 !== f && f < c || 0 !== g && g < c) {\n        hf(a, c);\n        ph(a, d, c, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        c = a.nextExpirationTimeToWorkOn = c;\n        b = a.expirationTime = 1073741823;\n        ph(a, d, c, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== eh ? (hf(a, c), b = 10 * (1073741822 - jf(a, c)), b < eh && (eh = b), b = 10 * (1073741822 - Rf()), b = eh - b, ph(a, d, c, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = c, a.finishedWork = d);\n  }\n}\n\nfunction Mg(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Yg || !Yg.has(d))) {\n          a = wf(b, a);\n          a = Xg(c, a, 1073741823);\n          pf(c, a);\n          Uf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = wf(b, a);\n        a = Vg(c, a, 1073741823);\n        pf(c, a);\n        Uf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = wf(b, a), c = Vg(a, c, 1073741823), pf(a, c), Uf(a, 1073741823));\n}\n\nfunction Sf(a, b) {\n  0 !== ch ? a = ch : dh ? a = gh ? 1073741823 : U : b.mode & 1 ? (a = qh ? 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1) : 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1), null !== T && a === U && --a) : a = 1073741823;\n  qh && (0 === rh || a < rh) && (rh = a);\n  return a;\n}\n\nfunction oh(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== T && U === c) T = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    gf(c, a);\n    c = a.expirationTime;\n    0 !== c && sh(a, c);\n  }\n}\n\nfunction Tg(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = Rf();\n  b = Sf(b, a);\n  a = th(a, b);\n  null !== a && (ff(a, b), b = a.expirationTime, 0 !== b && sh(a, b));\n}\n\nfunction th(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction Uf(a, b) {\n  a = th(a, b);\n  null !== a && (!dh && 0 !== U && b > U && jh(), ff(a, b), dh && !gh && T === a || sh(a, a.expirationTime), uh > vh && (uh = 0, t(\"185\")));\n}\n\nfunction wh(a, b, c, d, e) {\n  var f = ch;\n  ch = 1073741823;\n\n  try {\n    return a(b, c, d, e);\n  } finally {\n    ch = f;\n  }\n}\n\nvar xh = null,\n    W = null,\n    yh = 0,\n    zh = void 0,\n    X = !1,\n    Ah = null,\n    Y = 0,\n    rh = 0,\n    Bh = !1,\n    Ch = null,\n    Z = !1,\n    Dh = !1,\n    qh = !1,\n    Eh = null,\n    Fh = ba.unstable_now(),\n    Gh = 1073741822 - (Fh / 10 | 0),\n    Hh = Gh,\n    vh = 50,\n    uh = 0,\n    Ih = null;\n\nfunction Jh() {\n  Gh = 1073741822 - ((ba.unstable_now() - Fh) / 10 | 0);\n}\n\nfunction Kh(a, b) {\n  if (0 !== yh) {\n    if (b < yh) return;\n    null !== zh && ba.unstable_cancelCallback(zh);\n  }\n\n  yh = b;\n  a = ba.unstable_now() - Fh;\n  zh = ba.unstable_scheduleCallback(Lh, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction ph(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || nh() ? 0 < e && (a.timeoutHandle = De(Mh.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Mh(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  Jh();\n  Hh = Gh;\n  Nh(a, c);\n}\n\nfunction Rf() {\n  if (X) return Hh;\n  Oh();\n  if (0 === Y || 1 === Y) Jh(), Hh = Gh;\n  return Hh;\n}\n\nfunction sh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === W ? (xh = W = a, a.nextScheduledRoot = a) : (W = W.nextScheduledRoot = a, W.nextScheduledRoot = xh)) : b > a.expirationTime && (a.expirationTime = b);\n  X || (Z ? Dh && (Ah = a, Y = 1073741823, Ph(a, 1073741823, !1)) : 1073741823 === b ? Qh(1073741823, !1) : Kh(a, b));\n}\n\nfunction Oh() {\n  var a = 0,\n      b = null;\n  if (null !== W) for (var c = W, d = xh; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === W ? t(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        xh = W = d.nextScheduledRoot = null;\n        break;\n      } else if (d === xh) xh = e = d.nextScheduledRoot, W.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === W) {\n        W = c;\n        W.nextScheduledRoot = xh;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === W) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  Ah = b;\n  Y = a;\n}\n\nvar Rh = !1;\n\nfunction nh() {\n  return Rh ? !0 : ba.unstable_shouldYield() ? Rh = !0 : !1;\n}\n\nfunction Lh() {\n  try {\n    if (!nh() && null !== xh) {\n      Jh();\n      var a = xh;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && Gh <= b && (a.nextExpirationTimeToWorkOn = Gh);\n        a = a.nextScheduledRoot;\n      } while (a !== xh);\n    }\n\n    Qh(0, !0);\n  } finally {\n    Rh = !1;\n  }\n}\n\nfunction Qh(a, b) {\n  Oh();\n  if (b) for (Jh(), Hh = Gh; null !== Ah && 0 !== Y && a <= Y && !(Rh && Gh > Y);) {\n    Ph(Ah, Y, Gh > Y), Oh(), Jh(), Hh = Gh;\n  } else for (; null !== Ah && 0 !== Y && a <= Y;) {\n    Ph(Ah, Y, !1), Oh();\n  }\n  b && (yh = 0, zh = null);\n  0 !== Y && Kh(Ah, Y);\n  uh = 0;\n  Ih = null;\n  if (null !== Eh) for (a = Eh, Eh = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      Bh || (Bh = !0, Ch = d);\n    }\n  }\n  if (Bh) throw a = Ch, Ch = null, Bh = !1, a;\n}\n\nfunction Nh(a, b) {\n  X ? t(\"253\") : void 0;\n  Ah = a;\n  Y = b;\n  Ph(a, b, !1);\n  Qh(1073741823, !1);\n}\n\nfunction Ph(a, b, c) {\n  X ? t(\"245\") : void 0;\n  X = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Sh(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, Ee(d)), mh(a, c), d = a.finishedWork, null !== d && (nh() ? a.finishedWork = d : Sh(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Sh(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, Ee(d)), mh(a, c), d = a.finishedWork, null !== d && Sh(a, d, b));\n\n  X = !1;\n}\n\nfunction Sh(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === Eh ? Eh = [d] : Eh.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === Ih ? uh++ : (Ih = a, uh = 0);\n  gh = dh = !0;\n  a.current === b ? t(\"177\") : void 0;\n  c = a.pendingCommitExpirationTime;\n  0 === c ? t(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  d = b.expirationTime;\n  var e = b.childExpirationTime;\n  d = e > d ? e : d;\n  a.didError = !1;\n  0 === d ? (a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0) : (d < a.latestPingedTime && (a.latestPingedTime = 0), e = a.latestPendingTime, 0 !== e && (e > d ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > d && (a.earliestPendingTime = a.latestPendingTime)), e = a.earliestSuspendedTime, 0 === e ? ff(a, d) : d < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, ff(a, d)) : d > e && ff(a, d));\n  gf(0, a);\n  ah.current = null;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ze = Hd;\n  e = Td();\n\n  if (Ud(e)) {\n    if (\"selectionStart\" in e) var f = {\n      start: e.selectionStart,\n      end: e.selectionEnd\n    };else a: {\n      f = (f = e.ownerDocument) && f.defaultView || window;\n      var g = f.getSelection && f.getSelection();\n\n      if (g && 0 !== g.rangeCount) {\n        f = g.anchorNode;\n        var h = g.anchorOffset,\n            k = g.focusNode;\n        g = g.focusOffset;\n\n        try {\n          f.nodeType, k.nodeType;\n        } catch (db) {\n          f = null;\n          break a;\n        }\n\n        var l = 0,\n            m = -1,\n            r = -1,\n            w = 0,\n            y = 0,\n            B = e,\n            R = null;\n\n        b: for (;;) {\n          for (var v;;) {\n            B !== f || 0 !== h && 3 !== B.nodeType || (m = l + h);\n            B !== k || 0 !== g && 3 !== B.nodeType || (r = l + g);\n            3 === B.nodeType && (l += B.nodeValue.length);\n            if (null === (v = B.firstChild)) break;\n            R = B;\n            B = v;\n          }\n\n          for (;;) {\n            if (B === e) break b;\n            R === f && ++w === h && (m = l);\n            R === k && ++y === g && (r = l);\n            if (null !== (v = B.nextSibling)) break;\n            B = R;\n            R = B.parentNode;\n          }\n\n          B = v;\n        }\n\n        f = -1 === m || -1 === r ? null : {\n          start: m,\n          end: r\n        };\n      } else f = null;\n    }\n    f = f || {\n      start: 0,\n      end: 0\n    };\n  } else f = null;\n\n  Ae = {\n    focusedElem: e,\n    selectionRange: f\n  };\n  Hd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      for (; null !== V;) {\n        if (V.effectTag & 256) a: {\n          var q = V.alternate;\n          h = V;\n\n          switch (h.tag) {\n            case 0:\n            case 11:\n            case 15:\n              break a;\n\n            case 1:\n              if (h.effectTag & 256 && null !== q) {\n                var u = q.memoizedProps,\n                    A = q.memoizedState,\n                    Yf = h.stateNode,\n                    Vh = Yf.getSnapshotBeforeUpdate(h.elementType === h.type ? u : P(h.type, u), A);\n                Yf.__reactInternalSnapshotBeforeUpdate = Vh;\n              }\n\n              break a;\n\n            case 3:\n            case 5:\n            case 6:\n            case 4:\n            case 17:\n              break a;\n\n            default:\n              t(\"163\");\n          }\n        }\n        V = V.nextEffect;\n      }\n    } catch (db) {\n      e = !0, f = db;\n    }\n\n    e && (null === V ? t(\"178\") : void 0, Mg(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    q = !1;\n    u = void 0;\n\n    try {\n      for (; null !== V;) {\n        var x = V.effectTag;\n        x & 16 && pe(V.stateNode, \"\");\n\n        if (x & 128) {\n          var C = V.alternate;\n\n          if (null !== C) {\n            var p = C.ref;\n            null !== p && (\"function\" === typeof p ? p(null) : p.current = null);\n          }\n        }\n\n        switch (x & 14) {\n          case 2:\n            Rg(V);\n            V.effectTag &= -3;\n            break;\n\n          case 6:\n            Rg(V);\n            V.effectTag &= -3;\n            Sg(V.alternate, V);\n            break;\n\n          case 4:\n            Sg(V.alternate, V);\n            break;\n\n          case 8:\n            A = V;\n            Pg(A);\n            A.return = null;\n            A.child = null;\n            A.memoizedState = null;\n            A.updateQueue = null;\n            var G = A.alternate;\n            null !== G && (G.return = null, G.child = null, G.memoizedState = null, G.updateQueue = null);\n        }\n\n        V = V.nextEffect;\n      }\n    } catch (db) {\n      q = !0, u = db;\n    }\n\n    q && (null === V ? t(\"178\") : void 0, Mg(V, u), null !== V && (V = V.nextEffect));\n  }\n\n  p = Ae;\n  C = Td();\n  x = p.focusedElem;\n  q = p.selectionRange;\n\n  if (C !== x && x && x.ownerDocument && Sd(x.ownerDocument.documentElement, x)) {\n    null !== q && Ud(x) && (C = q.start, p = q.end, void 0 === p && (p = C), \"selectionStart\" in x ? (x.selectionStart = C, x.selectionEnd = Math.min(p, x.value.length)) : (p = (C = x.ownerDocument || document) && C.defaultView || window, p.getSelection && (p = p.getSelection(), u = x.textContent.length, G = Math.min(q.start, u), q = void 0 === q.end ? G : Math.min(q.end, u), !p.extend && G > q && (u = q, q = G, G = u), u = Rd(x, G), A = Rd(x, q), u && A && (1 !== p.rangeCount || p.anchorNode !== u.node || p.anchorOffset !== u.offset || p.focusNode !== A.node || p.focusOffset !== A.offset) && (C = C.createRange(), C.setStart(u.node, u.offset), p.removeAllRanges(), G > q ? (p.addRange(C), p.extend(A.node, A.offset)) : (C.setEnd(A.node, A.offset), p.addRange(C))))));\n    C = [];\n\n    for (p = x; p = p.parentNode;) {\n      1 === p.nodeType && C.push({\n        element: p,\n        left: p.scrollLeft,\n        top: p.scrollTop\n      });\n    }\n\n    \"function\" === typeof x.focus && x.focus();\n\n    for (x = 0; x < C.length; x++) {\n      p = C[x], p.element.scrollLeft = p.left, p.element.scrollTop = p.top;\n    }\n  }\n\n  Ae = null;\n  Hd = !!ze;\n  ze = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    d = !1;\n    x = void 0;\n\n    try {\n      for (C = c; null !== V;) {\n        var Fb = V.effectTag;\n\n        if (Fb & 36) {\n          var Gb = V.alternate;\n          p = V;\n          G = C;\n\n          switch (p.tag) {\n            case 0:\n            case 11:\n            case 15:\n              break;\n\n            case 1:\n              var Hc = p.stateNode;\n              if (p.effectTag & 4) if (null === Gb) Hc.componentDidMount();else {\n                var ii = p.elementType === p.type ? Gb.memoizedProps : P(p.type, Gb.memoizedProps);\n                Hc.componentDidUpdate(ii, Gb.memoizedState, Hc.__reactInternalSnapshotBeforeUpdate);\n              }\n              var Dg = p.updateQueue;\n              null !== Dg && uf(p, Dg, Hc, G);\n              break;\n\n            case 3:\n              var Eg = p.updateQueue;\n\n              if (null !== Eg) {\n                q = null;\n                if (null !== p.child) switch (p.child.tag) {\n                  case 5:\n                    q = p.child.stateNode;\n                    break;\n\n                  case 1:\n                    q = p.child.stateNode;\n                }\n                uf(p, Eg, q, G);\n              }\n\n              break;\n\n            case 5:\n              var ji = p.stateNode;\n              null === Gb && p.effectTag & 4 && Be(p.type, p.memoizedProps) && ji.focus();\n              break;\n\n            case 6:\n              break;\n\n            case 4:\n              break;\n\n            case 12:\n              break;\n\n            case 13:\n              break;\n\n            case 17:\n              break;\n\n            default:\n              t(\"163\");\n          }\n        }\n\n        if (Fb & 128) {\n          var Ic = V.ref;\n\n          if (null !== Ic) {\n            var Fg = V.stateNode;\n\n            switch (V.tag) {\n              case 5:\n                var ce = Fg;\n                break;\n\n              default:\n                ce = Fg;\n            }\n\n            \"function\" === typeof Ic ? Ic(ce) : Ic.current = ce;\n          }\n        }\n\n        V = V.nextEffect;\n      }\n    } catch (db) {\n      d = !0, x = db;\n    }\n\n    d && (null === V ? t(\"178\") : void 0, Mg(V, x), null !== V && (V = V.nextEffect));\n  }\n\n  dh = gh = !1;\n  \"function\" === typeof Te && Te(b.stateNode);\n  Fb = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > Fb ? b : Fb;\n  0 === b && (Yg = null);\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction Wg(a) {\n  null === Ah ? t(\"246\") : void 0;\n  Ah.expirationTime = 0;\n  Bh || (Bh = !0, Ch = a);\n}\n\nfunction Th(a, b) {\n  var c = Z;\n  Z = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (Z = c) || X || Qh(1073741823, !1);\n  }\n}\n\nfunction Uh(a, b) {\n  if (Z && !Dh) {\n    Dh = !0;\n\n    try {\n      return a(b);\n    } finally {\n      Dh = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Wh(a, b, c) {\n  if (qh) return a(b, c);\n  Z || X || 0 === rh || (Qh(rh, !1), rh = 0);\n  var d = qh,\n      e = Z;\n  Z = qh = !0;\n\n  try {\n    return a(b, c);\n  } finally {\n    qh = d, (Z = e) || X || Qh(1073741823, !1);\n  }\n}\n\nfunction Xh(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === kd(c) && 1 === c.tag ? void 0 : t(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (M(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      t(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (M(h)) {\n        c = Qe(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = Ke;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  Tf();\n  pf(f, e);\n  Uf(f, d);\n  return d;\n}\n\nfunction Yh(a, b, c, d) {\n  var e = b.current,\n      f = Rf();\n  e = Sf(f, e);\n  return Xh(a, b, c, e, d);\n}\n\nfunction Zh(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction $h(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: $b,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nCb = function Cb(a, b, c) {\n  switch (b) {\n    case \"input\":\n      Cc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = La(d);\n            e ? void 0 : t(\"90\");\n            Wb(d);\n            Cc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      ie(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && fe(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction ai(a) {\n  var b = 1073741822 - 25 * (((1073741822 - Rf() + 500) / 25 | 0) + 1);\n  b >= bh && (b = bh - 1);\n  this._expirationTime = bh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nai.prototype.render = function (a) {\n  this._defer ? void 0 : t(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new bi();\n  Xh(a, b, null, c, d._onCommit);\n  return d;\n};\n\nai.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nai.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : t(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? t(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Nh(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nai.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction bi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nbi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nbi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? t(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction ci(a, b, c) {\n  b = N(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nci.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new bi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Yh(a, c, null, d._onCommit);\n  return d;\n};\n\nci.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new bi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Yh(null, b, null, c._onCommit);\n  return c;\n};\n\nci.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new bi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Yh(b, d, a, e._onCommit);\n  return e;\n};\n\nci.prototype.createBatch = function () {\n  var a = new ai(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction di(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nKb = Th;\nLb = Wh;\n\nMb = function Mb() {\n  X || 0 === rh || (Qh(rh, !1), rh = 0);\n};\n\nfunction ei(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new ci(a, !1, b);\n}\n\nfunction fi(a, b, c, d, e) {\n  di(c) ? void 0 : t(\"200\");\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Zh(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = ei(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Zh(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Uh(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Zh(f._internalRoot);\n}\n\nfunction gi(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  di(b) ? void 0 : t(\"200\");\n  return $h(a, b, null, c);\n}\n\nvar ki = {\n  createPortal: gi,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? t(\"188\") : t(\"268\", Object.keys(a)));\n    a = nd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    return fi(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    return fi(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    null == a || void 0 === a._reactInternalFiber ? t(\"38\") : void 0;\n    return fi(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    di(a) ? void 0 : t(\"40\");\n    return a._reactRootContainer ? (Uh(function () {\n      fi(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return gi.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Th,\n  unstable_interactiveUpdates: Wh,\n  flushSync: function flushSync(a, b) {\n    X ? t(\"187\") : void 0;\n    var c = Z;\n    Z = !0;\n\n    try {\n      return wh(a, b);\n    } finally {\n      Z = c, Qh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: hi,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = Z;\n    Z = !0;\n\n    try {\n      wh(a);\n    } finally {\n      (Z = b) || X || Qh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ja, Ka, La, Ca.injectEventPluginsByName, qa, Ra, function (a) {\n      za(a, Qa);\n    }, Ib, Jb, Jd, Ea]\n  }\n};\n\nfunction hi(a, b) {\n  di(a) ? void 0 : t(\"299\", \"unstable_createRoot\");\n  return new ci(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return We(n({}, a, {\n    overrideProps: null,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = nd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ia,\n  bundleType: 0,\n  version: \"16.7.0\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar li = {\n  default: ki\n},\n    mi = li && ki || li;\nmodule.exports = mi.default || mi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.12.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar c = null,\n    f = !1,\n    h = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = c.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = c,\n      b = c.next;\n  if (c === b) c = null;else {\n    var d = c.previous;\n    c = d.next = b;\n    b.previous = d;\n  }\n  a.next = a.previous = null;\n  d = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var e = h,\n      Q = l;\n  h = a;\n  l = b;\n\n  try {\n    var g = d();\n  } finally {\n    h = e, l = Q;\n  }\n\n  if (\"function\" === typeof g) if (g = {\n    callback: g,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === c) c = g.next = g.previous = g;else {\n    d = null;\n    a = c;\n\n    do {\n      if (a.expirationTime >= b) {\n        d = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== c);\n\n    null === d ? d = c : d === c && (c = g, p());\n    b = d.previous;\n    b.next = d.previous = g;\n    g.next = d;\n    g.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== c && 1 === c.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== c && 1 === c.priorityLevel);\n    } finally {\n      m = !1, null !== c ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = f;\n  f = a;\n\n  try {\n    if (a) for (; null !== c;) {\n      var d = exports.unstable_now();\n\n      if (c.expirationTime <= d) {\n        do {\n          u();\n        } while (null !== c && c.expirationTime <= d);\n      } else break;\n    } else if (null !== c) {\n      do {\n        u();\n      } while (null !== c && !w());\n    }\n  } finally {\n    m = !1, f = b, null !== c ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var d = exports.unstable_now(),\n        e = !1;\n    if (0 >= P - d) if (-1 !== b && b <= d) e = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(e);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var d = h,\n      e = k;\n  h = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    h = d, k = e, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var d = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = d + b.timeout;else switch (h) {\n    case 1:\n      b = d + -1;\n      break;\n\n    case 2:\n      b = d + 250;\n      break;\n\n    case 5:\n      b = d + 1073741823;\n      break;\n\n    case 4:\n      b = d + 1E4;\n      break;\n\n    default:\n      b = d + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: h,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === c) c = a.next = a.previous = a, p();else {\n    d = null;\n    var e = c;\n\n    do {\n      if (e.expirationTime > b) {\n        d = e;\n        break;\n      }\n\n      e = e.next;\n    } while (e !== c);\n\n    null === d ? d = c : d === c && (c = a, p());\n    b = d.previous;\n    b.next = d.previous = a;\n    a.next = d;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) c = null;else {\n      a === c && (c = b);\n      var d = a.previous;\n      d.next = b;\n      b.previous = d;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = h;\n  return function () {\n    var d = h,\n        e = k;\n    h = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      h = d, k = e, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return h;\n};\n\nexports.unstable_shouldYield = function () {\n  return !f && (null !== c && c.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== c && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return c;\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","var World = require('../World');\n\nvar Body = require('../Body');\n\nvar Joint = require('../Joint');\n\nvar Fixture = require('../Fixture');\n\nvar Shape = require('../Shape');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar SID = 0;\n\nfunction Serializer(opts) {\n  opts = opts || {};\n  var rootClass = opts.rootClass || World;\n\n  var preSerialize = opts.preSerialize || function (obj) {\n    return obj;\n  };\n\n  var postSerialize = opts.postSerialize || function (data, obj) {\n    return data;\n  };\n\n  var preDeserialize = opts.preDeserialize || function (data) {\n    return data;\n  };\n\n  var postDeserialize = opts.postDeserialize || function (obj, data) {\n    return obj;\n  }; // This is used to create ref objects during serialize\n\n\n  var refTypes = {\n    'World': World,\n    'Body': Body,\n    'Joint': Joint,\n    'Fixture': Fixture,\n    'Shape': Shape\n  }; // This is used by restore to deserialize objects and refs\n\n  var restoreTypes = Object.assign({\n    'Vec2': Vec2,\n    'Vec3': Vec3\n  }, refTypes);\n\n  this.toJson = function (root) {\n    var json = [];\n    var queue = [root];\n    var refMap = {};\n\n    function storeRef(value, typeName) {\n      value.__sid = value.__sid || ++SID;\n\n      if (!refMap[value.__sid]) {\n        queue.push(value);\n        var index = json.length + queue.length;\n        var ref = {\n          refIndex: index,\n          refType: typeName\n        };\n        refMap[value.__sid] = ref;\n      }\n\n      return refMap[value.__sid];\n    }\n\n    function serialize(obj) {\n      obj = preSerialize(obj);\n\n      var data = obj._serialize();\n\n      data = postSerialize(data, obj);\n      return data;\n    }\n\n    function toJson(value, top) {\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n\n      if (typeof value._serialize === 'function') {\n        if (value !== top) {\n          for (var typeName in refTypes) {\n            if (value instanceof refTypes[typeName]) {\n              return storeRef(value, typeName);\n            }\n          }\n        }\n\n        value = serialize(value);\n      }\n\n      if (Array.isArray(value)) {\n        var newValue = [];\n\n        for (var key = 0; key < value.length; key++) {\n          newValue[key] = toJson(value[key]);\n        }\n\n        value = newValue;\n      } else {\n        var newValue = {};\n\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            newValue[key] = toJson(value[key]);\n          }\n        }\n\n        value = newValue;\n      }\n\n      return value;\n    }\n\n    while (queue.length) {\n      var obj = queue.shift();\n      var str = toJson(obj, obj);\n      json.push(str);\n    }\n\n    return json;\n  };\n\n  this.fromJson = function (json) {\n    var refMap = {};\n\n    function deserialize(cls, data, ctx) {\n      data = preDeserialize(data);\n\n      var obj = cls._deserialize(data, ctx, restoreRef);\n\n      obj = postDeserialize(obj, data);\n      return obj;\n    }\n\n    function restoreRef(cls, ref, ctx) {\n      if (!ref.refIndex) {\n        return cls && cls._deserialize && deserialize(cls, ref, ctx);\n      }\n\n      cls = restoreTypes[ref.refType] || cls;\n      var index = ref.refIndex;\n\n      if (!refMap[index]) {\n        var data = json[index];\n        var obj = deserialize(cls, data, ctx);\n        refMap[index] = obj;\n      }\n\n      return refMap[index];\n    }\n\n    var root = rootClass._deserialize(json[0], null, restoreRef);\n\n    return root;\n  };\n}\n\nmodule.exports = Serializer;\nvar serializer = new Serializer();\nmodule.exports.toJson = serializer.toJson;\nmodule.exports.fromJson = serializer.fromJson;","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar AABB = require('./AABB');\n\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\n\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n}\n\n;\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\n\nBroadPhase.prototype.getUserData = function (proxyId) {\n  return this.m_tree.getUserData(proxyId);\n};\n/**\n * Test overlap of fat AABBs.\n */\n\n\nBroadPhase.prototype.testOverlap = function (proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n};\n/**\n * Get the fat AABB for a proxy.\n */\n\n\nBroadPhase.prototype.getFatAABB = function (proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n};\n/**\n * Get the number of proxies.\n */\n\n\nBroadPhase.prototype.getProxyCount = function () {\n  return this.m_proxyCount;\n};\n/**\n * Get the height of the embedded tree.\n */\n\n\nBroadPhase.prototype.getTreeHeight = function () {\n  return this.m_tree.getHeight();\n};\n/**\n * Get the balance (integer) of the embedded tree.\n */\n\n\nBroadPhase.prototype.getTreeBalance = function () {\n  return this.m_tree.getMaxBalance();\n};\n/**\n * Get the quality metric of the embedded tree.\n */\n\n\nBroadPhase.prototype.getTreeQuality = function () {\n  return this.m_tree.getAreaRatio();\n};\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\n\n\nBroadPhase.prototype.query = function (aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n};\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\n\n\nBroadPhase.prototype.rayCast = function (input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n};\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\n\n\nBroadPhase.prototype.shiftOrigin = function (newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n};\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\n\n\nBroadPhase.prototype.createProxy = function (aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n};\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\n\n\nBroadPhase.prototype.destroyProxy = function (proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n};\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\n\n\nBroadPhase.prototype.moveProxy = function (proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n};\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\n\n\nBroadPhase.prototype.touchProxy = function (proxyId) {\n  this.bufferMove(proxyId);\n};\n\nBroadPhase.prototype.bufferMove = function (proxyId) {\n  this.m_moveBuffer.push(proxyId);\n};\n\nBroadPhase.prototype.unbufferMove = function (proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n};\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\n\n\nBroadPhase.prototype.updatePairs = function (addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback; // Perform tree queries for all moving proxies.\n\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n\n    if (this.m_queryProxyId === null) {\n      continue;\n    } // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n\n\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId); // Query tree, create pairs and add them pair buffer.\n\n    this.m_tree.query(fatAABB, this.queryCallback);\n  } // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n\n};\n\nBroadPhase.prototype.queryCallback = function (proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId); // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB); // Send the pairs back to the client.\n\n  this.m_callback(userDataA, userDataB);\n  return true;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function (n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n\n    return _max;\n  };\n\n  this.size = function () {\n    return _list.length;\n  };\n\n  this.allocate = function () {\n    var item;\n\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n\n    _outCount++;\n\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n\n    return item;\n  };\n\n  this.release = function (item) {\n    if (_list.length < _max) {\n      _inCount++;\n\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n\n      _list.push(item);\n    } else {\n      _discardCount++;\n\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function () {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\" + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\n\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\n\nvar Contact = require('./Contact');\n\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\n\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\n\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true; // timestep ratio for variable timestep\n\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function (dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n};\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\n\n\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function () {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n};\n\nSolver.prototype.addBody = function (body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body); // why?\n  //  body.c_position.c.setZero();\n  //  body.c_position.a = 0;\n  //  body.c_velocity.v.setZero();\n  //  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function (contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function (joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n/**\n * @param {TimeStep} step\n */\n\n\nSolver.prototype.solveWorld = function (step) {\n  var world = this.m_world; // Clear all the island flags.\n\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  } // Build and simulate all awake islands.\n\n\n  var stack = this.m_stack;\n  var loop = -1;\n\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    } // The seed can be dynamic or kinematic.\n\n\n    if (seed.isStatic()) {\n      continue;\n    } // Reset island and stack.\n\n\n    this.clear();\n    stack.push(seed);\n    seed.m_islandFlag = true; // Perform a depth first search (DFS) on the constraint graph.\n\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b); // Make sure the body is awake.\n\n      b.setAwake(true); // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n\n      if (b.isStatic()) {\n        continue;\n      } // Search all contacts connected to this body.\n\n\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact; // Has this contact already been added to an island?\n\n        if (contact.m_islandFlag) {\n          continue;\n        } // Is this contact solid and touching?\n\n\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        } // Skip sensors.\n\n\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n        var other = ce.other; // Was the other body already added to this island?\n\n        if (other.m_islandFlag) {\n          continue;\n        } // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n\n\n        stack.push(other);\n        other.m_islandFlag = true;\n      } // Search all joints connect to this body.\n\n\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other; // Don't simulate joints connected to inactive bodies.\n\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        } // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n\n\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step); // Post solve cleanup.\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n};\n/**\n * @param {TimeStep} step\n */\n\n\nSolver.prototype.solveIsland = function (step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n  var h = step.dt; // Integrate velocities and apply damping. Initialize the body state.\n\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity; // Store positions for continuous collision.\n\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n\n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: '); // Solve velocity constraints\n\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: '); // Store impulses for warm starting\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: '); // Integrate positions\n\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w; // Check for large velocities\n\n    var translation = Vec2.mul(h, v);\n\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    } // Integrate\n\n\n    c.addMul(h, v);\n    a += h * w;\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: '); // Solve position constraints\n\n  var positionSolved = false;\n\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    } // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n\n\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n    var jointsOkay = true;\n\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: '); // Copy state buffers back to the bodies\n\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if (body.m_autoSleepFlag == false || body.m_angularVelocity * body.m_angularVelocity > angTolSqr || Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function (tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\n\nSolver.prototype.solveWorldTOI = function (step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  } // Find TOI events and solve them.\n\n\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      } // Prevent excessive sub-stepping.\n\n\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB(); // Is there a sensor?\n\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic(); // Is at least one body active (awake and dynamic or kinematic)?\n\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic(); // Are these two non-bullet dynamic bodies?\n\n        if (collideA == false && collideB == false) {\n          continue;\n        } // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n\n\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep; // Compute the time of impact in interval [0, minTOI]\n\n        var input = new TOIInput(); // TODO: reuse\n\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n        var output = new TOIOutput(); // TODO: reuse\n\n        TimeOfImpact(output, input); // Beta is the fraction of the remaining portion of the [time?].\n\n        var beta = output.t;\n\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    } // Advance the bodies to the TOI.\n\n\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n    bA.advance(minAlpha);\n    bB.advance(minAlpha); // The TOI contact likely has some new contact points.\n\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount; // Is the contact solid?\n\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true); // Build the island\n\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true; // Get contacts on bodyA and bodyB.\n\n    var bodies = [bA, bB];\n\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n          var contact = ce.contact; // Has this contact already been added to the island?\n\n          if (contact.m_islandFlag) {\n            continue;\n          } // Only add if either is static, kinematic or bullet.\n\n\n          var other = ce.other;\n\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          } // Skip sensors.\n\n\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n\n          if (sensorA || sensorB) {\n            continue;\n          } // Tentatively advance the body to the TOI.\n\n\n          var backup = other.m_sweep.clone();\n\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          } // Update the contact points\n\n\n          contact.update(world); // Was the contact disabled by the user?\n          // Are there contact points?\n\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          } // Add the contact to the island\n\n\n          contact.m_islandFlag = true;\n          this.addContact(contact); // Has the other body already been added to the island?\n\n          if (other.m_islandFlag) {\n            continue;\n          } // Add the other body to the island.\n\n\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n    this.solveIslandTOI(s_subStep, bA, bB); // Reset island flags and synchronize broad-phase proxies.\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures(); // Invalidate all contact TOIs on this displaced body.\n\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    } // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n\n\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n};\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\n\n\nSolver.prototype.solveIslandTOI = function (subStep, toiA, toiB) {\n  var world = this.m_world; // Initialize the body state.\n\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  } // Solve position constraints.\n\n\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    } // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n\n\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  } // Leap of faith to new safe state.\n\n\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a; // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  } // Solve velocity constraints.\n\n\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  } // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n\n  var h = subStep.dt; // Integrate positions\n\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w; // Check for large velocities\n\n    var translation = Vec2.mul(h, v);\n\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    } // Integrate\n\n\n    c.addMul(h, v);\n    a += h * w;\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w; // Sync bodies\n\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\n\n\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n}\n\n;\n\nSolver.prototype.postSolveIsland = function () {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n\n    this.m_world.postSolve(contact, impulse);\n  }\n};","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function () {\n  return Date.now();\n};\n\nmodule.exports.diff = function (time) {\n  return Date.now() - time;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\n\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = Object.create(BoxShape._super.prototype);\nBoxShape.TYPE = 'polygon';\n/**\n * A rectangle polygon which extend PolygonShape.\n */\n\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nvar Contact = require('../Contact');\n\nvar Manifold = require('../Manifold');\n\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Rot = require('../common/Rot');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nvar Contact = require('../Contact');\n\nvar Manifold = require('../Manifold');\n\nvar EdgeShape = require('./EdgeShape');\n\nvar ChainShape = require('./ChainShape');\n\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n} // Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\n\n\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0; // Compute circle in frame of edge\n\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A); // Barycentric coordinates\n\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n  var radius = edgeA.m_radius + circleB.m_radius; // Region A\n\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n\n    if (dd > radius * radius) {\n      return;\n    } // Is there an edge connected to A?\n\n\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q)); // Is the circle in Region AB of the previous edge?\n\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  } // Region B\n\n\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n\n    if (dd > radius * radius) {\n      return;\n    } // Is there an edge connected to B?\n\n\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2)); // Is the circle in Region AB of the next edge?\n\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  } // Region AB\n\n\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n\n  n.normalize();\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Rot = require('../common/Rot');\n\nvar Vec2 = require('../common/Vec2');\n\nvar AABB = require('../collision/AABB');\n\nvar Settings = require('../Settings');\n\nvar Manifold = require('../Manifold');\n\nvar Contact = require('../Contact');\n\nvar Shape = require('../Shape');\n\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\n\n\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]); // Find deepest point for normal i.\n\n    var si = Infinity;\n\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  } // used to keep last FindMaxSeparation call values\n\n\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\n\n\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count); // Get the normal of the reference edge in poly2's frame.\n\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1])); // Find the incident edge on poly2.\n\n  var index = 0;\n  var minDot = Infinity;\n\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  } // Build the clip vertices for the incident edge.\n\n\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\n\n\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius) return;\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius) return;\n  var poly1; // reference polygon\n\n  var poly2; // incident polygon\n\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [new Manifold.clipVertex(), new Manifold.clipVertex()];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12); // Face offset.\n\n  var frontOffset = Vec2.dot(normal, v11); // Side offsets, extended by polytope skin thickness.\n\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius; // Clip incident edge against extruded edge1 side edges.\n\n  var clipPoints1 = [new Manifold.clipVertex(), new Manifold.clipVertex()];\n  var clipPoints2 = [new Manifold.clipVertex(), new Manifold.clipVertex()];\n  var np; // Clip to box side 1\n\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent), sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  } // Clip to negative box side 1\n\n\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  } // Now clipPoints2 contains the clipped points.\n\n\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n  var pointCount = 0;\n\n  for (var i = 0; i < clipPoints2.length\n  /* maxManifoldPoints */\n  ; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Rot = require('../common/Rot');\n\nvar Vec2 = require('../common/Vec2');\n\nvar AABB = require('../collision/AABB');\n\nvar Settings = require('../Settings');\n\nvar Manifold = require('../Manifold');\n\nvar Contact = require('../Contact');\n\nvar Shape = require('../Shape');\n\nvar CircleShape = require('./CircleShape');\n\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0; // Compute circle position in the frame of the polygon.\n\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c); // Find the min separating edge.\n\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  } // Vertices that subtend the incident face.\n\n\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2]; // If the center is inside the polygon ...\n\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p; // manifold.points[0].id.key = 0;\n\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  } // Compute barycentric coordinates\n\n\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1]) - Vec2.dot(faceCenter, normals[vertIndex1]);\n\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p); // manifold.points[0].id.key = 0;\n\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\n\nvar Math = require('../common/Math');\n\nvar Transform = require('../common/Transform');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Rot = require('../common/Rot');\n\nvar Settings = require('../Settings');\n\nvar Shape = require('../Shape');\n\nvar Contact = require('../Contact');\n\nvar Manifold = require('../Manifold');\n\nvar EdgeShape = require('./EdgeShape');\n\nvar ChainShape = require('./ChainShape');\n\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n} // EPAxis Type\n\n\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2; // VertexType unused?\n\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2; // This structure is used to keep track of the best separating axis.\n\nfunction EPAxis() {\n  this.type; // Type\n\n  this.index;\n  this.separation;\n}\n\n; // This holds polygon B expressed in frame A.\n\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n\n  this.count = 0;\n}\n\n; // Reference face used for clipping\n\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n\n  this.v1, this.v2; // v\n\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n}\n\n; // reused\n\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\n\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false; // Is there a preceding edge?\n\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  } // Is there a following edge?\n\n\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero(); // Determine front or back collision. Determine collision normal limits.\n\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 && offset2 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || offset0 >= 0.0 && offset1 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  } // Get polygonB in frameA\n\n\n  polygonBA.count = polygonB.m_count;\n\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n  manifold.pointCount = 0;\n  {\n    // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  } // If no valid normal can be found than this edge should not collide.\n\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  {\n    // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      } // Adjacency\n\n\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  } // Use hysteresis for jitter reduction.\n\n\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n  var primaryAxis;\n\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [new Manifold.clipVertex(), new Manifold.clipVertex()];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA; // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2); // Clip incident edge against extruded edge1 side edges.\n\n  var clipPoints1 = [new Manifold.clipVertex(), new Manifold.clipVertex()];\n  var clipPoints2 = [new Manifold.clipVertex(), new Manifold.clipVertex()];\n  var np; // Clip to box side 1\n\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  } // Clip to negative box side 1\n\n\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  } // Now clipPoints2 contains the clipped points.\n\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = Object.create(DistanceJoint._super.prototype);\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz: 0.0,\n  dampingRatio: 0.0\n};\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\n\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  } // order of constructor arguments is changed in v0.2\n\n\n  if (bodyB && anchorA && 'm_type' in anchorA && 'x' in bodyB && 'y' in bodyB) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = DistanceJoint.TYPE; // Solver shared\n\n  this.m_localAnchorA = Vec2.clone(anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero());\n  this.m_length = Math.isFinite(def.length) ? def.length : Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0; // Solver temp\n\n  this.m_u; // Vec2\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass; // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n}\n\n;\n\nDistanceJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias\n  };\n};\n\nDistanceJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nDistanceJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.length > 0) {\n    this.m_length = +def.length;\n  } else if (def.length < 0) {// don't change length\n  } else if (def.anchorA || def.anchorA || def.anchorA || def.anchorA) {\n    this.m_length = Vec2.distance(this.m_bodyA.getWorldPoint(this.m_localAnchorA), this.m_bodyB.getWorldPoint(this.m_localAnchorB));\n  }\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nDistanceJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nDistanceJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\n\n\nDistanceJoint.prototype.setLength = function (length) {\n  this.m_length = length;\n};\n\nDistanceJoint.prototype.getLength = function () {\n  return this.m_length;\n};\n\nDistanceJoint.prototype.setFrequency = function (hz) {\n  this.m_frequencyHz = hz;\n};\n\nDistanceJoint.prototype.getFrequency = function () {\n  return this.m_frequencyHz;\n};\n\nDistanceJoint.prototype.setDampingRatio = function (ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nDistanceJoint.prototype.getDampingRatio = function () {\n  return this.m_dampingRatio;\n};\n\nDistanceJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nDistanceJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nDistanceJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n};\n\nDistanceJoint.prototype.getReactionTorque = function (inv_dt) {\n  return 0.0;\n};\n\nDistanceJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA)); // Handle singularity.\n\n  var length = this.m_u.length();\n\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu; // Compute the effective mass matrix.\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length; // Frequency\n\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // Damping coefficient\n\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega; // Spring stiffness\n\n    var k = this.m_mass * omega * omega; // magic formulas\n\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nDistanceJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w; // Cdot = dot(u, v + cross(w, r))\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n  var impulse = -this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nDistanceJoint.prototype.solvePositionConstraints = function (step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math.clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  return Math.abs(C) < Settings.linearSlop;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nFrictionJoint.TYPE = 'friction-joint';\nJoint.TYPES[FrictionJoint.TYPE] = FrictionJoint;\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = Object.create(FrictionJoint._super.prototype);\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce: 0.0,\n  maxTorque: 0.0\n};\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\n\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = FrictionJoint.TYPE;\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero()); // Solver shared\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque; // Solver temp\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_linearMass; // Mat22\n\n  this.m_angularMass; // float\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nFrictionJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB\n  };\n};\n\nFrictionJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new FrictionJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nFrictionJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nFrictionJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nFrictionJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * Set the maximum friction force in N.\n */\n\n\nFrictionJoint.prototype.setMaxForce = function (force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n};\n/**\n * Get the maximum friction force in N.\n */\n\n\nFrictionJoint.prototype.getMaxForce = function () {\n  return this.m_maxForce;\n};\n/**\n * Set the maximum friction torque in N*m.\n */\n\n\nFrictionJoint.prototype.setMaxTorque = function (torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n};\n/**\n * Get the maximum friction torque in N*m.\n */\n\n\nFrictionJoint.prototype.getMaxTorque = function () {\n  return this.m_maxTorque;\n};\n\nFrictionJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nFrictionJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nFrictionJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n};\n\nFrictionJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n};\n\nFrictionJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA),\n      qB = Rot.neo(aB); // Compute the effective mass matrix.\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA,\n      mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA,\n      iB = this.m_invIB; // float\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x * this.m_rB.x;\n  this.m_linearMass = K.getInverse();\n  this.m_angularMass = iA + iB;\n\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nFrictionJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var mA = this.m_invMassA,\n      mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA,\n      iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n  // Solve angular friction\n\n  {\n    var Cdot = wB - wA; // float\n\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n\n    var maxImpulse = h * this.m_maxTorque; // float\n\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  } // Solve linear friction\n\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA, Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n\n    var oldImpulse = this.m_linearImpulse; // Vec2\n\n    this.m_linearImpulse.add(impulse);\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nFrictionJoint.prototype.solvePositionConstraints = function (step) {\n  return true;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nvar RevoluteJoint = require('./RevoluteJoint');\n\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\nJoint.TYPES[GearJoint.TYPE] = GearJoint;\nGearJoint._super = Joint;\nGearJoint.prototype = Object.create(GearJoint._super.prototype);\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio: 1.0\n};\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = GearJoint.TYPE;\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE || joint2.m_type === PrismaticJoint.TYPE);\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType(); // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB(); // Get geometry of joint1\n\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1; // RevoluteJoint\n\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB(); // Get geometry of joint2\n\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n  this.m_impulse = 0.0; // Solver temp\n\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n\n  this.m_JvAC, this.m_JvBD; // Vec2\n\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n\n  this.m_mass; // float\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n}\n\n;\n\nGearJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    joint1: this.m_joint1,\n    joint2: this.m_joint2,\n    ratio: this.m_ratio // _constant: this.m_constant,\n\n  };\n};\n\nGearJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.joint1 = restore(Joint, data.joint1, world);\n  data.joint2 = restore(Joint, data.joint2, world);\n  var joint = new GearJoint(data); // if (data._constant) joint.m_constant = data._constant;\n\n  return joint;\n};\n/**\n * Get the first joint.\n */\n\n\nGearJoint.prototype.getJoint1 = function () {\n  return this.m_joint1;\n};\n/**\n * Get the second joint.\n */\n\n\nGearJoint.prototype.getJoint2 = function () {\n  return this.m_joint2;\n};\n/**\n * Set/Get the gear ratio.\n */\n\n\nGearJoint.prototype.setRatio = function (ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n};\n\nGearJoint.prototype.getRatio = function () {\n  return this.m_ratio;\n};\n\nGearJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nGearJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nGearJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n};\n\nGearJoint.prototype.getReactionTorque = function (inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n\n  return inv_dt * L;\n};\n\nGearJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  } // Compute effective mass.\n\n\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n};\n\nGearJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC) + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n\n  Cdot += this.m_JwA * wA - this.m_JwC * wC + (this.m_JwB * wB - this.m_JwD * wD);\n  var impulse = -this.m_mass * Cdot; // float\n\n  this.m_impulse += impulse;\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n};\n\nGearJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n\n  var JwA, JwB, JwC, JwD; // float\n\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = coordinateA + this.m_ratio * coordinateB - this.m_constant; // float\n\n  var impulse = 0.0; // float\n\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD; // TODO_ERIN not implemented\n\n  return linearError < Settings.linearSlop;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nMotorJoint.TYPE = 'motor-joint';\nJoint.TYPES[MotorJoint.TYPE] = MotorJoint;\nMotorJoint._super = Joint;\nMotorJoint.prototype = Object.create(MotorJoint._super.prototype);\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce: 1.0,\n  maxTorque: 1.0,\n  correctionFactor: 0.3\n};\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = MotorJoint.TYPE;\n  this.m_linearOffset = Math.isFinite(def.linearOffset) ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n  this.m_angularOffset = Math.isFinite(def.angularOffset) ? def.angularOffset : bodyB.getAngle() - bodyA.getAngle();\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor; // Solver temp\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_linearError; // Vec2\n\n  this.m_angularError; // float\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_linearMass; // Mat22\n\n  this.m_angularMass; // float\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nMotorJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n    correctionFactor: this.m_correctionFactor,\n    linearOffset: this.m_linearOffset,\n    angularOffset: this.m_angularOffset\n  };\n};\n\nMotorJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new MotorJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nMotorJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n};\n/**\n * Set the maximum friction force in N.\n */\n\n\nMotorJoint.prototype.setMaxForce = function (force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n};\n/**\n * Get the maximum friction force in N.\n */\n\n\nMotorJoint.prototype.getMaxForce = function () {\n  return this.m_maxForce;\n};\n/**\n * Set the maximum friction torque in N*m.\n */\n\n\nMotorJoint.prototype.setMaxTorque = function (torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n};\n/**\n * Get the maximum friction torque in N*m.\n */\n\n\nMotorJoint.prototype.getMaxTorque = function () {\n  return this.m_maxTorque;\n};\n/**\n * Set the position correction factor in the range [0,1].\n */\n\n\nMotorJoint.prototype.setCorrectionFactor = function (factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n};\n/**\n * Get the position correction factor in the range [0,1].\n */\n\n\nMotorJoint.prototype.getCorrectionFactor = function () {\n  return this.m_correctionFactor;\n};\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\n\n\nMotorJoint.prototype.setLinearOffset = function (linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n};\n\nMotorJoint.prototype.getLinearOffset = function () {\n  return this.m_linearOffset;\n};\n/**\n * Set/get the target angular offset, in radians.\n */\n\n\nMotorJoint.prototype.setAngularOffset = function (angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n};\n\nMotorJoint.prototype.getAngularOffset = function () {\n  return this.m_angularOffset;\n};\n\nMotorJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getPosition();\n};\n\nMotorJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getPosition();\n};\n\nMotorJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n};\n\nMotorJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n};\n\nMotorJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA),\n      qB = Rot.neo(aB); // Compute the effective mass matrix.\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB)); // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x * this.m_rB.x;\n  this.m_linearMass = K.getInverse();\n  this.m_angularMass = iA + iB;\n\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nMotorJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var mA = this.m_invMassA,\n      mB = this.m_invMassB;\n  var iA = this.m_invIA,\n      iB = this.m_invIB;\n  var h = step.dt;\n  var inv_h = step.inv_dt; // Solve angular friction\n\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  } // Solve linear friction\n\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n    var maxImpulse = h * this.m_maxForce;\n    this.m_linearImpulse.clamp(maxImpulse);\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nMotorJoint.prototype.solvePositionConstraints = function (step) {\n  return true;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nMouseJoint.TYPE = 'mouse-joint';\nJoint.TYPES[MouseJoint.TYPE] = MouseJoint;\nMouseJoint._super = Joint;\nMouseJoint.prototype = Object.create(MouseJoint._super.prototype);\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce: 0.0,\n  frequencyHz: 5.0,\n  dampingRatio: 0.7\n};\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = MouseJoint.TYPE;\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0; // Solver temp\n\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22();\n  this.m_C = Vec2.zero(); // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\nMouseJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    target: this.m_targetA,\n    maxForce: this.m_maxForce,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n    _localAnchorB: this.m_localAnchorB\n  };\n};\n\nMouseJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.target = Vec2(data.target);\n  var joint = new MouseJoint(data);\n\n  if (data._localAnchorB) {\n    joint.m_localAnchorB = data._localAnchorB;\n  }\n\n  return joint;\n};\n/**\n * Use this to update the target point.\n */\n\n\nMouseJoint.prototype.setTarget = function (target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n\n  this.m_targetA = Vec2.clone(target);\n};\n\nMouseJoint.prototype.getTarget = function () {\n  return this.m_targetA;\n};\n/**\n * Set/get the maximum force in Newtons.\n */\n\n\nMouseJoint.prototype.setMaxForce = function (force) {\n  this.m_maxForce = force;\n};\n\nMouseJoint.getMaxForce = function () {\n  return this.m_maxForce;\n};\n/**\n * Set/get the frequency in Hertz.\n */\n\n\nMouseJoint.prototype.setFrequency = function (hz) {\n  this.m_frequencyHz = hz;\n};\n\nMouseJoint.prototype.getFrequency = function () {\n  return this.m_frequencyHz;\n};\n/**\n * Set/get the damping ratio (dimensionless).\n */\n\n\nMouseJoint.prototype.setDampingRatio = function (ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nMouseJoint.prototype.getDampingRatio = function () {\n  return this.m_dampingRatio;\n};\n\nMouseJoint.prototype.getAnchorA = function () {\n  return Vec2.clone(this.m_targetA);\n};\n\nMouseJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nMouseJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n};\n\nMouseJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * 0.0;\n};\n\nMouseJoint.prototype.shiftOrigin = function (newOrigin) {\n  this.m_targetA.sub(newOrigin);\n};\n\nMouseJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n  var qB = Rot.neo(aB);\n  var mass = this.m_bodyB.getMass(); // Frequency\n\n  var omega = 2.0 * Math.PI * this.m_frequencyHz; // Damping coefficient\n\n  var d = 2.0 * mass * this.m_dampingRatio * omega; // Spring stiffness\n\n  var k = mass * (omega * omega); // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n\n  this.m_beta = h * k * this.m_gamma; // Compute the effective mass matrix.\n\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\n  this.m_mass = K.getInverse();\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta); // Cheat with some damping\n\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n};\n\nMouseJoint.prototype.solveVelocityConstraints = function (step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w; // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n  velocity.v.set(vB);\n  velocity.w = wB;\n};\n\nMouseJoint.prototype.solvePositionConstraints = function (step) {\n  return true;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\n\nJoint.TYPES[PulleyJoint.TYPE] = PulleyJoint;\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = Object.create(PulleyJoint._super.prototype);\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\n\nvar PulleyJointDef = {\n  collideConnected: true\n};\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n  this.m_impulse = 0.0; // Solver temp\n\n  this.m_uA; // Vec2\n\n  this.m_uB; // Vec2\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_mass; // float\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\nPulleyJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    groundAnchorA: this.m_groundAnchorA,\n    groundAnchorB: this.m_groundAnchorB,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    lengthA: this.m_lengthA,\n    lengthB: this.m_lengthB,\n    ratio: this.m_ratio\n  };\n};\n\nPulleyJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new PulleyJoint(data);\n  return joint;\n};\n/**\n * Get the first ground anchor.\n */\n\n\nPulleyJoint.prototype.getGroundAnchorA = function () {\n  return this.m_groundAnchorA;\n};\n/**\n * Get the second ground anchor.\n */\n\n\nPulleyJoint.prototype.getGroundAnchorB = function () {\n  return this.m_groundAnchorB;\n};\n/**\n * Get the current length of the segment attached to bodyA.\n */\n\n\nPulleyJoint.prototype.getLengthA = function () {\n  return this.m_lengthA;\n};\n/**\n * Get the current length of the segment attached to bodyB.\n */\n\n\nPulleyJoint.prototype.getLengthB = function () {\n  return this.m_lengthB;\n};\n/**\n * Get the pulley ratio.\n */\n\n\nPulleyJoint.prototype.getRatio = function () {\n  return this.m_ratio;\n};\n/**\n * Get the current length of the segment attached to bodyA.\n */\n\n\nPulleyJoint.prototype.getCurrentLengthA = function () {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n};\n/**\n * Get the current length of the segment attached to bodyB.\n */\n\n\nPulleyJoint.prototype.getCurrentLengthB = function () {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n};\n\nPulleyJoint.prototype.shiftOrigin = function (newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n};\n\nPulleyJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nPulleyJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nPulleyJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n};\n\nPulleyJoint.prototype.getReactionTorque = function (inv_dt) {\n  return 0.0;\n};\n\nPulleyJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Get the pulley axes.\n\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  } // Compute effective mass.\n\n\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio; // Warm starting.\n\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nPulleyJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio * Vec2.dot(this.m_uB, vpB); // float\n\n  var impulse = -this.m_mass * Cdot; // float\n\n  this.m_impulse += impulse;\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nPulleyJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var qA = Rot.neo(aA),\n      qB = Rot.neo(aB);\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Get the pulley axes.\n\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  } // Compute effective mass.\n\n\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n  return linearError < Settings.linearSlop;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\nRopeJoint.TYPE = 'rope-joint';\nJoint.TYPES[RopeJoint.TYPE] = RopeJoint;\nRopeJoint._super = Joint;\nRopeJoint.prototype = Object.create(RopeJoint._super.prototype);\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength: 0.0\n};\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_maxLength = def.maxLength;\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit; // Solver temp\n\n  this.m_u; // Vec2\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_mass; // float\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n}\n\n;\n\nRopeJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    maxLength: this.m_maxLength\n  };\n};\n\nRopeJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RopeJoint(data);\n  return joint;\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nRopeJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nRopeJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * Set/Get the maximum length of the rope.\n */\n\n\nRopeJoint.prototype.setMaxLength = function (length) {\n  this.m_maxLength = length;\n};\n\nRopeJoint.prototype.getMaxLength = function () {\n  return this.m_maxLength;\n};\n\nRopeJoint.prototype.getLimitState = function () {\n  // TODO LimitState\n  return this.m_state;\n};\n\nRopeJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nRopeJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nRopeJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n};\n\nRopeJoint.prototype.getReactionTorque = function (inv_dt) {\n  return 0.0;\n};\n\nRopeJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n  var C = this.m_length - this.m_maxLength; // float\n\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  } // Compute effective mass.\n\n\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nRopeJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w; // Cdot = dot(u, v + cross(w, r))\n\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n\n  var C = this.m_length - this.m_maxLength; // float\n\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n  // Predictive constraint.\n\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n\n  var oldImpulse = this.m_impulse; // float\n\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nRopeJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n\n  var aA = this.m_bodyA.c_position.a; // float\n\n  var cB = this.m_bodyB.c_position.c; // Vec2\n\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n  var impulse = -this.m_mass * C; // float\n\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  return length - this.m_maxLength < Settings.linearSlop;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nWeldJoint.TYPE = 'weld-joint';\nJoint.TYPES[WeldJoint.TYPE] = WeldJoint;\nWeldJoint._super = Joint;\nWeldJoint.prototype = Object.create(WeldJoint._super.prototype);\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  frequencyHz: 0.0,\n  dampingRatio: 0.0\n};\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = WeldJoint.TYPE;\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = Vec3();\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0; // Solver temp\n\n  this.m_rA; // Vec2\n\n  this.m_rB; // Vec2\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_mass = new Mat33(); // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nWeldJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle\n  };\n};\n\nWeldJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WeldJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nWeldJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nWeldJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nWeldJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * Get the reference angle.\n */\n\n\nWeldJoint.prototype.getReferenceAngle = function () {\n  return this.m_referenceAngle;\n};\n/**\n * Set/get frequency in Hz.\n */\n\n\nWeldJoint.prototype.setFrequency = function (hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function () {\n  return this.m_frequencyHz;\n};\n/**\n * Set/get damping ratio.\n */\n\n\nWeldJoint.prototype.setDampingRatio = function (ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function () {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA),\n      qB = Rot.neo(aB);\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n    var invM = iA + iB; // float\n\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n    // Frequency\n\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n    // Damping coefficient\n\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n    // Spring stiffness\n\n    var k = m * omega * omega; // float\n    // magic formulas\n\n    var h = step.dt; // float\n\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nWeldJoint.prototype.solveVelocityConstraints = function (step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n\n    this.m_impulse.z += impulse2;\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var Cdot2 = wB - wA; // float\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n\n    this.m_impulse.add(impulse);\n    var P = Vec2.neo(impulse.x, impulse.y);\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nWeldJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var qA = Rot.neo(aA),\n      qB = Rot.neo(aB);\n  var mA = this.m_invMassA,\n      mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA,\n      iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n    var C = Vec3(C1.x, C1.y, C2);\n    var impulse = Vec3();\n\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n  return positionError <= Settings.linearSlop && angularError <= Settings.angularSlop;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\n\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\n\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\n\nvar Vec2 = require('../common/Vec2');\n\nvar Vec3 = require('../common/Vec3');\n\nvar Mat22 = require('../common/Mat22');\n\nvar Mat33 = require('../common/Mat33');\n\nvar Rot = require('../common/Rot');\n\nvar Sweep = require('../common/Sweep');\n\nvar Transform = require('../common/Transform');\n\nvar Velocity = require('../common/Velocity');\n\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar Body = require('../Body');\n\nWheelJoint.TYPE = 'wheel-joint';\nJoint.TYPES[WheelJoint.TYPE] = WheelJoint;\nWheelJoint._super = Joint;\nWheelJoint.prototype = Object.create(WheelJoint._super.prototype);\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n *\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\n\nvar DEFAULTS = {\n  enableMotor: false,\n  maxMotorTorque: 0.0,\n  motorSpeed: 0.0,\n  frequencyHz: 2.0,\n  dampingRatio: 0.7\n};\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\n\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n  this.m_type = WheelJoint.TYPE;\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || def.localAxis || Vec2.neo(1.0, 0.0));\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0; // Solver temp\n\n  this.m_localCenterA; // Vec2\n\n  this.m_localCenterB; // Vec2\n\n  this.m_invMassA; // float\n\n  this.m_invMassB; // float\n\n  this.m_invIA; // float\n\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n\n  this.m_sAx;\n  this.m_sBx; // float\n\n  this.m_sAy;\n  this.m_sBy; // float\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\nWheelJoint.prototype._serialize = function () {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    enableMotor: this.m_enableMotor,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA\n  };\n};\n\nWheelJoint._deserialize = function (data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WheelJoint(data);\n  return joint;\n};\n/**\n * @internal\n */\n\n\nWheelJoint.prototype._setAnchors = function (def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n};\n/**\n * The local anchor point relative to bodyA's origin.\n */\n\n\nWheelJoint.prototype.getLocalAnchorA = function () {\n  return this.m_localAnchorA;\n};\n/**\n * The local anchor point relative to bodyB's origin.\n */\n\n\nWheelJoint.prototype.getLocalAnchorB = function () {\n  return this.m_localAnchorB;\n};\n/**\n * The local joint axis relative to bodyA.\n */\n\n\nWheelJoint.prototype.getLocalAxisA = function () {\n  return this.m_localXAxisA;\n};\n/**\n * Get the current joint translation, usually in meters.\n */\n\n\nWheelJoint.prototype.getJointTranslation = function () {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n\n  var d = Vec2.sub(pB, pA); // Vec2\n\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n\n  return translation;\n};\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\n\n\nWheelJoint.prototype.getJointSpeed = function () {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n};\n/**\n * Is the joint motor enabled?\n */\n\n\nWheelJoint.prototype.isMotorEnabled = function () {\n  return this.m_enableMotor;\n};\n/**\n * Enable/disable the joint motor.\n */\n\n\nWheelJoint.prototype.enableMotor = function (flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n};\n/**\n * Set the motor speed, usually in radians per second.\n */\n\n\nWheelJoint.prototype.setMotorSpeed = function (speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n};\n/**\n * Get the motor speed, usually in radians per second.\n */\n\n\nWheelJoint.prototype.getMotorSpeed = function () {\n  return this.m_motorSpeed;\n};\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\n\n\nWheelJoint.prototype.setMaxMotorTorque = function (torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n};\n\nWheelJoint.prototype.getMaxMotorTorque = function () {\n  return this.m_maxMotorTorque;\n};\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\n\n\nWheelJoint.prototype.getMotorTorque = function (inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n};\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\n\n\nWheelJoint.prototype.setSpringFrequencyHz = function (hz) {\n  this.m_frequencyHz = hz;\n};\n\nWheelJoint.prototype.getSpringFrequencyHz = function () {\n  return this.m_frequencyHz;\n};\n/**\n * Set/Get the spring damping ratio\n */\n\n\nWheelJoint.prototype.setSpringDampingRatio = function (ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWheelJoint.prototype.getSpringDampingRatio = function () {\n  return this.m_dampingRatio;\n};\n\nWheelJoint.prototype.getAnchorA = function () {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWheelJoint.prototype.getAnchorB = function () {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWheelJoint.prototype.getReactionForce = function (inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n};\n\nWheelJoint.prototype.getReactionTorque = function (inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n};\n\nWheelJoint.prototype.initVelocityConstraints = function (step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB); // Compute the effective masses.\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n  // Point to line constraint\n\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  } // Spring constraint\n\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n      var C = Vec2.dot(d, this.m_ax); // float\n      // Frequency\n\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n      // Damping coefficient\n\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n      // Spring stiffness\n\n      var k = this.m_springMass * omega * omega; // float\n      // magic formulas\n\n      var h = step.dt; // float\n\n      this.m_gamma = h * (d + h * k);\n\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n      this.m_springMass = invMass + this.m_gamma;\n\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  } // Rotational motor\n\n\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nWheelJoint.prototype.solveVelocityConstraints = function (step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w; // Solve spring constraint\n\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx * wB - this.m_sAx * wA; // float\n\n    var impulse = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n\n    this.m_springImpulse += impulse;\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n\n    var LA = impulse * this.m_sAx; // float\n\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } // Solve rotational motor constraint\n\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  } // Solve point to line constraint\n\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy * wB - this.m_sAy * wA; // float\n\n    var impulse = -this.m_mass * Cdot; // float\n\n    this.m_impulse += impulse;\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n\n    var LA = impulse * this.m_sAy; // float\n\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n};\n\nWheelJoint.prototype.solvePositionConstraints = function (step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n\n  var LA = impulse * sAy; // float\n\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  return Math.abs(C) <= Settings.linearSlop;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;"],"sourceRoot":""}